edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530     1) package com.divudi.bean.common;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530     2) 
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530     3) import com.divudi.bean.cashTransaction.CashBookEntryController;
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530     4) import com.divudi.bean.cashTransaction.DrawerController;
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530     5) import com.divudi.bean.cashTransaction.DrawerEntryController;
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530     6) import com.divudi.bean.channel.ChannelSearchController;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530     7) import com.divudi.bean.channel.analytics.ReportTemplateController;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530     8) import com.divudi.bean.pharmacy.PharmacyPreSettleController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530     9) import com.divudi.bean.pharmacy.PharmacySaleBhtController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    10) import com.divudi.data.BillNumberSuffix;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    11) import com.divudi.data.BillType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    12) import com.divudi.data.DepartmentType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    13) import com.divudi.data.FeeType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    14) import com.divudi.data.InstitutionType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    15) import com.divudi.data.PaymentMethod;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    16) import com.divudi.data.dataStructure.SearchKeyword;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    17) import com.divudi.data.hr.ReportKeyWord;
03d6c8d6d29 (Dr M H B Ariyaratne  2024-01-02 13:19:18 +0530    18) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    19) import com.divudi.ejb.PharmacyBean;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    20) import com.divudi.entity.AuditEvent;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    21) import com.divudi.entity.Bill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    22) import com.divudi.entity.BillFee;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    23) import com.divudi.entity.BillItem;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    24) import com.divudi.entity.BillSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    25) import com.divudi.entity.BilledBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    26) import com.divudi.entity.CancelledBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    27) import com.divudi.entity.Department;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    28) import com.divudi.entity.Doctor;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    29) import com.divudi.entity.Institution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    30) import com.divudi.entity.Item;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    31) import com.divudi.entity.Patient;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    32) import com.divudi.entity.PatientEncounter;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    33) import com.divudi.entity.PreBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    34) import com.divudi.entity.RefundBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    35) import com.divudi.entity.ServiceSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    36) import com.divudi.entity.Speciality;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    37) import com.divudi.entity.Staff;
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530    38) import com.divudi.entity.Token;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    39) import com.divudi.entity.inward.Admission;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    40) import com.divudi.entity.lab.PatientInvestigation;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    41) import com.divudi.entity.lab.PatientReport;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    42) import com.divudi.entity.pharmacy.Stock;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    43) import com.divudi.facade.BillFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    44) import com.divudi.facade.BillFeeFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    45) import com.divudi.facade.BillItemFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    46) import com.divudi.facade.BillSessionFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    47) import com.divudi.facade.PatientFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    48) import com.divudi.facade.PatientInvestigationFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    49) import com.divudi.facade.PatientReportFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    50) import com.divudi.facade.StockFacade;
47e18e7aed2 (Dr M H B Ariyaratne  2024-02-24 16:47:07 +0530    51) import com.divudi.bean.common.util.JsfUtil;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530    52) import com.divudi.bean.opd.OpdBillController;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530    53) import com.divudi.bean.pharmacy.PharmacyBillSearch;
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530    54) import com.divudi.data.BillCategory;
4eaa99692da (Senula88             2024-05-13 10:50:00 +0530    55) import com.divudi.data.BillClassType;
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530    56) 
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530    57) import static com.divudi.data.BillClassType.Bill;
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530    58) import static com.divudi.data.BillClassType.BilledBill;
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530    59) import static com.divudi.data.BillClassType.CancelledBill;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530    60) import static com.divudi.data.BillClassType.OtherBill;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530    61) import static com.divudi.data.BillClassType.PreBill;
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530    62) import static com.divudi.data.BillClassType.RefundBill;
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530    63) 
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530    64) import com.divudi.data.BillFinanceType;
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530    65) import com.divudi.data.BillTypeAtomic;
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530    66) import com.divudi.data.PaymentCategory;
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530    67) import com.divudi.data.PaymentStatus;
afa49592698 (Buddhika Ariyaratne  2024-08-30 18:17:30 +0530    68) import com.divudi.data.PaymentType;
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530    69) import com.divudi.data.ReportTemplateRow;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530    70) import com.divudi.data.ReportTemplateRowBundle;
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530    71) import com.divudi.data.ServiceType;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530    72) import com.divudi.data.analytics.ReportTemplateType;
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530    73) import com.divudi.entity.Category;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530    74) import com.divudi.entity.Payment;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530    75) import com.divudi.entity.WebUser;
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530    76) import com.divudi.entity.cashTransaction.CashBookEntry;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530    77) import com.divudi.entity.cashTransaction.Drawer;
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530    78) import com.divudi.entity.lab.Investigation;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530    79) import com.divudi.entity.pharmacy.PharmaceuticalBillItem;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530    80) import com.divudi.facade.DrawerFacade;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530    81) import com.divudi.facade.PaymentFacade;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530    82) import com.divudi.facade.PharmaceuticalBillItemFacade;
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530    83) import com.divudi.facade.TokenFacade;
03d6c8d6d29 (Dr M H B Ariyaratne  2024-01-02 13:19:18 +0530    84) import com.divudi.java.CommonFunctions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    85) import com.divudi.light.common.BillLight;
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530    86) import com.divudi.light.common.BillSummaryRow;
83ce7ec3697 (Buddhika Ariyaratne  2024-10-30 02:37:14 +0530    87) import com.divudi.service.BillService;
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530    88) import com.divudi.service.PatientInvestigationService;
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530    89) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530    90) import java.io.InputStream;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    91) import java.io.Serializable;
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530    92) import java.text.SimpleDateFormat;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    93) import java.util.ArrayList;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    94) import java.util.Arrays;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    95) import java.util.Calendar;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    96) import java.util.Date;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    97) import java.util.HashMap;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530    98) import java.util.HashSet;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530    99) import java.util.List;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   100) import java.util.Map;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530   101) import java.util.Set;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   102) import javax.ejb.EJB;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   103) import javax.enterprise.context.SessionScoped;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   104) import javax.faces.context.FacesContext;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   105) import javax.inject.Inject;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   106) import javax.inject.Named;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   107) import javax.persistence.TemporalType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   108) import javax.servlet.ServletContext;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   109) import javax.servlet.http.HttpServletRequest;
3032ae4325b (Buddhika Ariyaratne  2024-10-13 08:54:23 +0530   110) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530   111) import org.apache.poi.ss.usermodel.Row;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530   112) import org.apache.poi.xssf.usermodel.XSSFSheet;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530   113) import org.apache.poi.xssf.usermodel.XSSFWorkbook;
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   114) import org.primefaces.model.file.UploadedFile;
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   115) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530   116) import org.primefaces.model.DefaultStreamedContent;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530   117) import org.primefaces.model.StreamedContent;
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   118) 
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   119) import java.io.ByteArrayInputStream;
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   120) import java.io.ByteArrayOutputStream;
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   121) import java.io.IOException;
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530   122) 
deee254e040 (Buddhika             2024-11-22 10:22:51 +0530   123) import java.util.Map;
deee254e040 (Buddhika             2024-11-22 10:22:51 +0530   124) import java.util.TreeMap;
deee254e040 (Buddhika             2024-11-22 10:22:51 +0530   125) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   126) /**
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   127)  * @author safrin
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   128)  */
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   129) @Named
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   130) @SessionScoped
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   131) public class SearchController implements Serializable {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   132) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   133)     private static final long serialVersionUID = 1L;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   134)     /**
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   135)      * EJBs
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   136)      */
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   137)     private CommonFunctions commonFunctions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   138)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   139)     private BillFacade billFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   140)     @EJB
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   141)     private PaymentFacade paymentFacade;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   142)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   143)     private BillFeeFacade billFeeFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   144)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   145)     private BillItemFacade billItemFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   146)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   147)     private PatientInvestigationFacade patientInvestigationFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   148)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   149)     private PharmacyBean pharmacyBean;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   150)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   151)     BillSessionFacade billSessionFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   152)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   153)     StockFacade stockFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   154)     @EJB
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   155)     PatientReportFacade patientReportFacade;
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530   156)     @EJB
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530   157)     private PatientFacade patientFacade;
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   158)     @EJB
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   159)     TokenFacade tokenFacade;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530   160)     @EJB
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530   161)     private DrawerFacade drawerFacade;
83ce7ec3697 (Buddhika Ariyaratne  2024-10-30 02:37:14 +0530   162)     @EJB
83ce7ec3697 (Buddhika Ariyaratne  2024-10-30 02:37:14 +0530   163)     BillService billService;
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530   164)     @EJB
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530   165)     PatientInvestigationService patientInvestigationService;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   166) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   167)     /**
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   168)      * Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   169)      */
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   170)     @Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   171)     private BillBeanController billBean;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   172)     @Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   173)     private SessionController sessionController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   174)     @Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   175)     TransferController transferController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   176)     @Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   177)     private CommonController commonController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   178)     @Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   179)     PharmacySaleBhtController pharmacySaleBhtController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   180)     @Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   181)     SmsController smsController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   182)     @Inject
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   183)     AuditEventApplicationController auditEventApplicationController;
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530   184)     @Inject
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530   185)     WebUserController webUserController;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   186)     @Inject
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   187)     OpdPreSettleController opdPreSettleController;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   188)     @Inject
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   189)     PharmacyPreSettleController pharmacyPreSettleController;
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   190)     @Inject
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   191)     TokenController tokenController;
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530   192)     @Inject
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530   193)     private DepartmentController departmentController;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   194)     @Inject
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   195)     BillSearch billSearch;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   196)     @Inject
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   197)     PharmacyBillSearch pharmacyBillSearch;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   198)     @Inject
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   199)     OpdBillController opdBillController;
569a0fed004 (Senula88             2024-07-07 19:25:35 +0530   200)     @Inject
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530   201)     ConfigOptionApplicationController configOptionApplicationController;
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   202)     @Inject
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   203)     ChannelSearchController channelSearchController;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   204)     @Inject
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   205)     ReportTemplateController reportTemplateController;
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530   206)     @Inject
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530   207)     CashBookEntryController cashBookEntryController;
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   208)     @Inject
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   209)     ExcelController excelController;
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   210)     @Inject
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530   211)     PdfController pdfController;
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530   212)     @Inject
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530   213)     DrawerEntryController drawerEntryController;
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   214)     @Inject
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   215)     DrawerController drawerController;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530   216)     @Inject
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530   217)     EnumController enumController;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530   218) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   219)     /**
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   220)      * Properties
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   221)      */
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530   222)     private String visitType;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530   223)     private String methodType;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530   224) 
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   225)     private Category category;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530   226)     private ReportTemplateType reportTemplateType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   227)     private SearchKeyword searchKeyword;
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530   228)     private Date fromDate;
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530   229)     private Date toDate;
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530   230)     private Long startBillId;
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530   231)     private Long endBillId;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530   232)     private WebUser webUser;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   233)     private String backLink;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   234)     private int maxResult = 50;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   235)     private BillType billType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   236)     private PaymentMethod paymentMethod;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530   237)     private List<PaymentMethod> paymentMethods;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   238)     private List<Bill> bills;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   239)     private List<Payment> payments;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   240)     private List<BillLight> billLights;
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530   241)     private List<BillSummaryRow> billSummaryRows;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   242)     private List<Bill> selectedBills;
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530   243)     private List<Bill> aceptPaymentBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   244)     private List<BillFee> billFees;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   245)     private List<BillFee> billFeesDone;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   246)     private List<BillItem> billItems;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   247)     private List<PatientInvestigation> patientInvestigations;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   248)     private List<PatientReport> patientReports;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   249)     private List<PatientInvestigation> patientInvestigationsSigle;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530   250)     private BillTypeAtomic billTypeAtomic;
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530   251)     private BillClassType billClassType;
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530   252) 
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530   253)     private StreamedContent downloadingExcel;
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530   254) 
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530   255)     BillSummaryRow billSummaryRow;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   256)     Bill cancellingIssueBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   257)     Bill bill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   258)     Speciality speciality;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   259)     PatientEncounter patientEncounter;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   260)     Staff staff;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   261)     Item item;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   262)     double dueTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   263)     double doneTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   264)     double netTotal;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530   265)     private double totalBillCount;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   266)     private double grossTotal;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   267)     private double discount;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   268)     ServiceSession selectedServiceSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   269)     Staff currentStaff;
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530   270)     private String mrnNo;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   271)     List<BillItem> billItem;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   272)     List<PatientInvestigation> userPatientInvestigations;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   273) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   274)     String menuBarSearchText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   275)     String smsText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   276)     String uniqueSmsText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   277)     boolean channelingPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   278)     boolean pharmacyPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   279)     boolean opdPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   280)     boolean inwardPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   281)     boolean labPanelVisile;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   282)     boolean patientPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   283)     ReportKeyWord reportKeyWord;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   284) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   285)     List<Bill> channellingBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   286)     List<BillSession> billSessions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   287)     List<Bill> opdBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   288)     List<Bill> pharmacyBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   289)     List<Admission> admissions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   290)     List<PatientInvestigation> pis;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   291)     List<Patient> patients;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   292)     List<String> telephoneNumbers;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   293)     List<String> selectedTelephoneNumbers;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   294)     List<PharmacyAdjustmentRow> pharmacyAdjustmentRows;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   295) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   296)     BillSession selectedBillSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   297)     UploadedFile file;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   298)     private Institution creditCompany;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   299) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   300)     private Institution otherInstitution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   301) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   302)     private Institution institution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   303)     private Department department;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   304)     List<Bill> prescreptionBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   305)     private Department fromDepartment;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   306)     private Department toDepartment;
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530   307)     private Institution fromInstitution;
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530   308)     private Institution toInstitution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   309)     private int manageListIndex;
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530   310)     private Patient patient;
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   311)     private Institution dealer;
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   312)     private List<Bill> grnBills;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   313)     Bill currentBill;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   314)     private Long currentBillId;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   315)     private Bill preBill;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   316)     boolean billPreview;
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   317)     private Long barcodeIdLong;
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530   318)     private Date maxDate;
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   319) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530   320)     private double cashTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530   321)     private double cardTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530   322)     private double chequeTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530   323)     private double slipTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530   324)     private double totalOfOtherPayments;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530   325)     private double billCount;
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   326)     private Token token;
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530   327)     private int managePaymentIndex = -1;
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530   328) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530   329)     private double hosTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530   330)     private double staffTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530   331)     private double discountTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530   332)     private double amountTotal;
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   333) 
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530   334)     private boolean duplicateBillView;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   335) 
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   336)     private ReportTemplateRowBundle bundle;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   337)     private ReportTemplateRowBundle bundleBillItems;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530   338) 
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530   339)     private List<CashBookEntry> cashBookEntries;
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530   340)     private Institution site;
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530   341)     private Institution toSite;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530   342)     private List<Drawer> drawerList;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530   343)     private Drawer selectedDrawer;
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530   344)     private int opdAnalyticsIndex;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   345) 
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530   346)     private String searchType;
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530   347)     private String reportType;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530   348)     private boolean withProfessionalFee;
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530   349) 
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   350)     private Drawer drawer;
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530   351) 
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530   352)     private Department serviceDepartment;
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530   353)     private Department billedDepartment;
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530   354) 
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   355)     public String navigateToUserDrawerDashboard() {
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   356)         Drawer d = drawerController.getUsersDrawer(drawer.getDrawerUser());
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   357)         drawerController.setCurrent(d);
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   358)         return "/admin/users/drawer?faces-redirect=true";
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   359)     }
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530   360) 
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530   361)     public String navigateToDrawerHistory() {
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530   362)         drawerEntryController.findAllUsersDrawerDetails();
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530   363)         return "/reports/financialReports/all_users_drawer_history?faces-redirect=true";
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530   364)     }
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530   365) 
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   366)     public String navigateToPettyCashBillApprove() {
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530   367)         createPettyCashToApproveTable();
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530   368)         return "/petty_cash_bill_to_approve?faces-redirect=true";
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530   369)     }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530   370) 
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530   371)     public String navigateToPettyCashCancelBillApprove() {
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530   372)         createPettyApproveTable();
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530   373)         return "/petty_cash_cancel_bill_to_approve?faces-redirect=true";
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530   374)     }
3c4e910f833 (Thiwanka570          2024-05-16 18:26:34 +0530   375) 
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   376)     public String navigateTobill(Bill bill) {
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   377)         String navigateTo = "";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   378)         if (bill == null) {
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   379)             return "";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   380)         }
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   381)         switch (bill.getBillTypeAtomic()) {
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   382)             //Opd Bill Navigation
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   383)             case OPD_BILL_WITH_PAYMENT:
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   384)                 billSearch.setBill(bill);
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   385)                 navigateTo = "/opd/bill_reprint.xhtml";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   386)                 break;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   387)             case OPD_BILL_REFUND:
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   388)                 billSearch.setBill(bill);
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   389)                 navigateTo = "/opd/bill_reprint.xhtml";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   390)                 break;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   391)             case OPD_BILL_CANCELLATION:
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   392)                 billSearch.setBill(bill);
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   393)                 navigateTo = "/opd/bill_reprint.xhtml";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   394)                 break;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   395)             case OPD_BATCH_BILL_WITH_PAYMENT:
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   396)                 System.out.println("bill = " + bill);
dfa59892ea6 (Thiwanka Madushan    2024-05-08 09:36:16 +0530   397)                 opdBillController.setBatchBill(bill);
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   398)                 navigateTo = "/opd/opd_batch_bill_print.xhtml";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   399)                 break;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   400)             //Pharmacy Bill Navigation    
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   401)             case PHARMACY_RETAIL_SALE:
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   402)                 pharmacyBillSearch.setBill(bill);
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   403)                 navigateTo = "/pharmacy/pharmacy_reprint_bill_sale.xhtml";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   404)                 break;
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   405)             case OPD_PROFESSIONAL_PAYMENT_BILL:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   406)             case OPD_PROFESSIONAL_PAYMENT_BILL_RETURN:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   407)             case PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   408)             case PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   409)                 billSearch.setBill(bill);
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   410)                 navigateTo = "/payment_bill_reprint.xhtml?faces-redirect=true;";
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   411)                 break;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   412) 
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   413)             case PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   414)             case PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES_RETURN:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   415)             case PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   416)             case PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   417)             case PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN:
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   418)                 channelSearchController.setBill(bill);
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   419)                 navigateTo = "/channel/channel_payment_bill_reprint.xhtml";
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530   420)                 break;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   421)             default:
dfa59892ea6 (Thiwanka Madushan    2024-05-08 09:36:16 +0530   422)                 return navigateTo;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   423)         }
dfa59892ea6 (Thiwanka Madushan    2024-05-08 09:36:16 +0530   424)         return navigateTo;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   425)     }
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530   426) 
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530   427)     public String navigateToAllFinancialTransactionSummary() {
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530   428)         billSummaryRows = null;
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   429)         return "/analytics/all_financial_transaction_summary?faces-redirect=true";
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   430)     }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530   431) 
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530   432)     public String navigateToUserFinancialTransactionSummaryByBill() {
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530   433)         billSummaryRows = null;
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530   434)         return "/analytics/user_financial_transaction_summary_by_bill?faces-redirect=true";
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530   435)     }
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530   436) 
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   437)     public String navigateToAllFinancialTransactionSummaryCashier() {
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   438)         billSummaryRows = null;
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   439)         return "/analytics/all_financial_transaction_summary_by_user?faces-redirect=true";
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   440)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   441) 
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   442)     public String navigateToFinancialTransactionSummaryPaymentMethod() {
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530   443)         institution = sessionController.getInstitution();
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530   444)         department = null;
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   445)         billSummaryRows = null;
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   446)         return "/analytics/financial_transaction_summary_PaymentMethod?faces-redirect=true";
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530   447)     }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530   448) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530   449)     public String navigateToAddToStockBillList() {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530   450)         printPreview = false;
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530   451)         bills = null;
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530   452)         return "/pharmacy/pharmacy_add_to_stock_search_bill?faces-redirect=true";
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530   453)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   454) 
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530   455)     public String navigateToFinancialTransactionSummaryByUsers() {
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530   456)         institution = sessionController.getInstitution();
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530   457)         department = null;
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530   458)         billSummaryRows = null;
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530   459)         return "/analytics/financial_transaction_summary_Users?faces-redirect=true";
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530   460)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530   461) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530   462)     public String navigateToFinancialTransactionSummaryByUserPayment() {
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530   463)         departments = departmentController.getInstitutionDepatrments(sessionController.getInstitution());
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530   464)         //System.out.println("departments = " + departments);
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530   465)         billSummaryRows = null;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530   466)         return "/analytics/financial_transaction_summary_Users_PaymentMethod?faces-redirect=true";
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530   467)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530   468) 
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530   469)     public String navigateToFinancialTransactionSummaryByDepartment() {
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530   470)         department = sessionController.getDepartment();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530   471)         billSummaryRows = null;
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530   472)         departments = departmentController.getInstitutionDepatrments(sessionController.getInstitution());
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530   473)         return "/analytics/financial_transaction_summary_Department?faces-redirect=true";
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530   474)     }
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530   475) 
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   476)     public void clearBillList() {
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   477)         if (bills == null) {
42061faad72 (DamithDeshan         2024-02-21 12:31:11 +0530   478)             return;
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   479)         } else {
42061faad72 (DamithDeshan         2024-02-21 12:31:11 +0530   480)             bills = new ArrayList<>();
42061faad72 (DamithDeshan         2024-02-21 12:31:11 +0530   481)         }
42061faad72 (DamithDeshan         2024-02-21 12:31:11 +0530   482)     }
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   483) 
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   484)     public Bill searchBillFromTokenId(Long currentTokenId) {
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   485)         if (currentTokenId == null) {
66af6d6492a (Senula88             2024-03-05 13:26:10 +0530   486)             JsfUtil.addErrorMessage("Enter Correct Bill Number !");
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   487)             return null; // Return null if the token ID is null
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   488)         }
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   489)         String sql = "SELECT t.bill FROM Token t "
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   490)                 + "WHERE t.retired = false "
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   491)                 + "AND t.id = :tid";
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   492)         HashMap<String, Object> hm = new HashMap<>();
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530   493)         hm.put("tid", currentTokenId);
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   494)         return getBillFacade().findFirstByJpql(sql, hm);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   495)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   496) 
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   497)     public Token searchTokenFromTokenId(Long currentTokenId) {
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   498)         if (currentTokenId == null) {
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   499)             JsfUtil.addErrorMessage("Enter Correct Bill Number !");
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   500)             return null; // Return null if the token ID is null
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   501)         }
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   502)         String sql = "SELECT t FROM Token t "
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   503)                 + "WHERE t.retired = false "
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   504)                 + "AND t.id = :tid";
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   505)         HashMap<String, Object> hm = new HashMap<>();
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   506)         hm.put("tid", currentTokenId);
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   507)         return tokenFacade.findFirstByJpql(sql, hm);
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   508)     }
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   509) 
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   510)     public Bill searchBillFromBillId(Long currentTokenId) {
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   511)         if (currentTokenId == null) {
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   512)             JsfUtil.addErrorMessage("Enter Correct Bill Number !");
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   513)             return null; // Return null if the token ID is null
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   514)         }
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   515)         String sql = " SELECT b "
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   516)                 + " FROM Bill b "
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   517)                 + " WHERE b.retired = false "
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   518)                 + "AND b.id = :bid";
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   519)         HashMap<String, Object> hm = new HashMap<>();
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   520)         hm.put("bid", currentTokenId);
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   521)         return getBillFacade().findFirstByJpql(sql, hm);
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   522)     }
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   523) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   524)     public String settleBillByBarcode() {
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   525)         System.out.println("settleBillByBarcode");
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   526)         currentBill = searchBillFromBillId(barcodeIdLong);
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   527)         System.out.println("currentBill by bill id= " + currentBill);
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   528)         if (currentBill == null) {
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   529)             currentBill = searchBillFromTokenId(barcodeIdLong);
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530   530)             opdPreSettleController.setToken(searchTokenFromTokenId(barcodeIdLong));
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   531)             System.out.println("currentBill by token id = " + currentBill);
e0379592ac7 (Thiwanka570          2024-04-27 21:26:59 +0530   532)         }
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530   533)         String action;
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530   534)         if (currentBill == null) {
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   535)             JsfUtil.addErrorMessage("No Bill Found");
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   536)             return "";
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   537)         }
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   538)         if (currentBill.isPaid()) {
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   539)             JsfUtil.addErrorMessage("Error : Bill is Already Paid");
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   540)             return " ";
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   541)         }
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   542)         action = toSettle(currentBill);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   543)         return action;
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   544) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   545)     }
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   546) 
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   547)     public String toSettle(Bill preBill) {
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   548)         System.out.println("preBill = " + preBill);
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   549)         System.out.println("preBill ATOMIC BILL TYPE= " + preBill.getBillTypeAtomic());
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   550) 
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530   551)         if (preBill == null) {
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   552)             JsfUtil.addErrorMessage("No Such Prebill");
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   553)             return "";
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   554)         }
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   555)         String sql = "Select b from "
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   556)                 + " BilledBill b"
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   557)                 + " where b.referenceBill=:bil"
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   558)                 + " and b.retired=false "
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   559)                 + " and b.cancelled=false ";
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   560)         HashMap hm = new HashMap();
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   561)         hm.put("bil", preBill);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   562)         Bill b = getBillFacade().findFirstByJpql(sql, hm);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   563) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   564)         if (b != null) {
47e18e7aed2 (Dr M H B Ariyaratne  2024-02-24 16:47:07 +0530   565)             JsfUtil.addErrorMessage("Allready Paid");
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   566)             return "";
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   567)         }
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   568) 
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   569)         if (preBill.getBillTypeAtomic() != null) {
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   570)             BillTypeAtomic bta = preBill.getBillTypeAtomic();
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   571)             switch (bta) {
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   572)                 case OPD_BATCH_BILL_TO_COLLECT_PAYMENT_AT_CASHIER:
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   573)                     return opdPreSettleController.toSettle(preBill);
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   574)                 case PHARMACY_RETAIL_SALE_PRE:
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   575)                 case PHARMACY_RETAIL_SALE_PRE_TO_SETTLE_AT_CASHIER:
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   576)                     setPreBillForPharmecy(preBill);
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   577)                     return "/pharmacy/pharmacy_bill_pre_settle?faces-redirect=true";
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   578)                 default:
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   579)                     JsfUtil.addErrorMessage("Other Bill Type Error");
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   580)                     System.out.println("No Adomic bill type for = " + b);
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530   581)                     return null;
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   582)             }
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   583)         }
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   584) //        if (preBill.getBillType() != null) {
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   585) //            BillType btype = preBill.getBillType();
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   586) //            switch (btype) {
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   587) //                case OpdPreBill:
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   588) //                    setPreBillForOpd(preBill);
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   589) //
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   590) //                case PharmacyPre:
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   591) //                    setPreBillForPharmecy(preBill);
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   592) //                    return "/pharmacy/pharmacy_bill_pre_settle?faces-redirect=true";
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   593) //
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   594) ////                case OpdBathcBillPre:
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   595) ////                    opdPreBatchBillSettleController.setPreBill(preBill);
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   596) ////                    return "/opd/opd_bill_pre_settle?faces-redirect=true";
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   597) //                default:
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   598) //                    throw new AssertionError();
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   599) //            }
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   600) //
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   601) //        }
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   602)         JsfUtil.addErrorMessage("No bill error");
c74a4b4d731 (Dr M H B Ariyaratne  2024-05-15 15:38:08 +0530   603)         return null;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   604)     }
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   605) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   606)     public void setPreBillForOpd(Bill preBill) {
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   607)         makeNull();
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   608)         opdPreSettleController.setPreBill(preBill);
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   609)         System.out.println("preBill = " + preBill.getBillItems().size());
7dec6a092b6 (Thiwanka570          2024-05-17 12:41:19 +0530   610)         opdPreSettleController.toSettle(preBill);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   611)         //System.err.println("Setting Bill " + preBill);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   612)         opdPreSettleController.setBillPreview(false);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   613) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   614)     }
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   615) 
74562634cc5 (Dr M H B Ariyaratne  2024-01-31 13:31:38 +0530   616)     public void setPreBillForPharmecy(Bill preBill) {
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   617)         makeNull();
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   618)         pharmacyPreSettleController.setPreBill(preBill);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   619)         //System.err.println("Setting Bill " + preBill);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   620)         pharmacyPreSettleController.setBillPreview(false);
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   621) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530   622)     }
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   623) 
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   624)     public void createGrnWithDealerTable() {
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   625)         Map m = new HashMap();
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   626)         String sql = "select b from Bill b where b.retired=false and "
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   627)                 + " b.billType = :billType and b.institution = :del "
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   628)                 + "and b.createdAt between :fromDate and :toDate ";
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530   629) 
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   630)         m.put("billType", BillType.PharmacyGrnBill);
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   631)         m.put("del", getDealer());
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   632)         m.put("toDate", getToDate());
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   633)         m.put("fromDate", getFromDate());
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530   634) 
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530   635)         grnBills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530   636)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530   637) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530   638)     public String navigateToPatientLabReports() {
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530   639)         fillPatientLabReports(patient);
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530   640)         return "/lab/patient_lab_reports";
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530   641)     }
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530   642) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530   643)     public String navigateToPatientAcceptPayment() {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530   644)         fillPatientPreBills(null, patient, null, true);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530   645)         return "/opd/patient_accept_payment";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530   646)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530   647) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   648)     public String menuBarSearch() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   649)         JsfUtil.addSuccessMessage("Sarched From Menubar" + "\n" + menuBarSearchText);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   650)         return "/index";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   651)     }
c34a04f4b7f (Senula88             2023-10-10 20:34:41 +0530   652) 
0a3688403c7 (Dr M H B Ariyaratne  2023-10-04 11:44:38 +0530   653)     public String navigateToSmsList() {
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   654)         return "/analytics/sms_list?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   655)     }
f3fc3677206 (Thiwanka Madushan    2023-10-04 13:27:51 +0530   656) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   657)     public String navigateToBillList() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   658)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   659)         return "/analytics/bills?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   660)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   661) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   662)     public String navigateToBillTypeList() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   663)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   664)         return "/analytics/bill_types?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   665)     }
eb839f92fd6 (Buddhika Ariyaratne  2024-10-27 13:46:06 +0530   666) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   667)     public String navigateToUserBillTypeList(WebUser wu) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   668)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   669)         webUser = wu;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   670)         listBillTypes();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   671)         return "/analytics/bill_types?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   672)     }
eb839f92fd6 (Buddhika Ariyaratne  2024-10-27 13:46:06 +0530   673) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   674)     public String navigateToUserBillPaymentList(WebUser wu) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   675)         billSummaryRows = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   676)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   677)         resetTotals();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   678)         webUser = wu;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   679)         listPayments();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   680)         return "/analytics/payments?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   681)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   682) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   683)     public String navigateToUserBillList(WebUser wu) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   684)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   685)         webUser = wu;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   686)         listBills();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   687)         return "/analytics/bills?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   688)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   689) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   690)     public String navigateToBillItemList() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   691)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   692)         return "/analytics/bill_items?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   693)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   694) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   695)     public String navigateToBillFeeList() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   696)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   697)         return "/analytics/bill_fees?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   698)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   699) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   700)     public String navigateToBillPaymentList() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   701)         billSummaryRows = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   702)         resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   703)         resetTotals();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   704)         return "/analytics/payments?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   705)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   706) 
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530   707)     //    public String navigateToBillPaymentList() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   708) //        resetAllFiltersExceptDateRange();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   709) //        return "/analytics/bill_fees?faces-redirect=true";
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530   710) //    }
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   711)     public String navigateToStaffCreditBillList() {
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   712)         bills = null;
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   713)         return "/analytics/staff_credit_bill_list?faces-redirect=true";
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   714)     }
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   715) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   716)     public String navigateToGeneralCreditBillList() {
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   717)         bills = null;
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   718)         return "/analytics/general_credit_bill_list?faces-redirect=true";
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   719)     }
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530   720) 
0a3688403c7 (Dr M H B Ariyaratne  2023-10-04 11:44:38 +0530   721)     public String navigateToFailedSmsList() {
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   722)         return "/analytics/sms_faild?faces-redirect=true";
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   723)     }
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530   724) 
79d50c87361 (Buddhika Ariyaratne  2024-09-13 21:27:50 +0530   725)     public String navigateToOpdSaleReport() {
79d50c87361 (Buddhika Ariyaratne  2024-09-13 21:27:50 +0530   726)         return "/opd/analytics/sale_report?faces-redirect=true";
79d50c87361 (Buddhika Ariyaratne  2024-09-13 21:27:50 +0530   727)     }
f3fc3677206 (Thiwanka Madushan    2023-10-04 13:27:51 +0530   728) 
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   729)     public String navigateToSendSms() {
de121073477 (Dr M H B Ariyaratne  2024-05-10 21:11:26 +0530   730)         return "/analytics/sms_send?faces-redirect=true";
0a3688403c7 (Dr M H B Ariyaratne  2023-10-04 11:44:38 +0530   731)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   732) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   733)     public String navigateToListOtherInstitutionBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   734)         bills = null;
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   735)         return "/analytics/other_institution_bills?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   736)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   737) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   738)     public String navigateToAnalytics() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   739)         bills = null;
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   740)         return "/analytics/index?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   741)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   742) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   743)     public String navigateToProfessionalFees() {
9e3a6dbf6cc (Buddhika Ariyaratne  2024-10-08 05:33:39 +0530   744)         bundle = new ReportTemplateRowBundle();
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   745)         recreateProPayementModel();
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   746)         return "/reports/professional_payment_reports/professional_fees_opd?faces-redirect=true";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   747)     }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   748) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   749)     public String navigateToProfessionalFeePayments() {
9e3a6dbf6cc (Buddhika Ariyaratne  2024-10-08 05:33:39 +0530   750)         bundle = new ReportTemplateRowBundle();
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   751)         return "/reports/professional_payment_reports/professional_fee_payments_opd?faces-redirect=true";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   752)     }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   753) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   754)     public String navigateToProfessionalPayments() {
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530   755)         resetAllFilters();
9e3a6dbf6cc (Buddhika Ariyaratne  2024-10-08 05:33:39 +0530   756)         bundle = new ReportTemplateRowBundle();
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   757)         return "/reports/professional_payment_reports/professional_payments_opd?faces-redirect=true";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530   758)     }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530   759) 
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530   760)     public String navigateToMyProfessionalPayments() {
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530   761)         bundle = new ReportTemplateRowBundle();
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530   762)         webUser = sessionController.getLoggedUser();
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530   763)         return "/cashier/my_professional_payments?faces-redirect=true";
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530   764)     }
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530   765) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   766)     public String navigateToOpdBillList() {
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530   767)         return "/analytics/opd_bill_list?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   768)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   769) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   770)     public String navigateToOpdBatchBillList() {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   771)         return "/opd/analytics/opd_batch_bill_search?faces-redirect=true";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   772)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   773) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   774)     public String navigateToOpdBillItemList() {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   775)         return "/opd/analytics/opd_bill_item_list?faces-redirect=true";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   776)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   777) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   778)     public String navigateToOpdBillItemList(ReportTemplateRow row) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   779)         institution = row.getInstitution();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   780)         department = row.getDepartment();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   781)         site = row.getSite();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   782)         category = row.getCategory();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   783)         item = row.getItem();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   784)         backLink = "/reports/financialReports/daily_return?faces-redirect=true";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   785)         generateOpdServicesByBillItem();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   786)         return navigateToOpdBillItemList();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   787)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530   788) 
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   789)     public String navigateToOpdSummaryByItem() {
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   790)         bills = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   791)         fromDate = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   792)         toDate = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   793)         institution = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   794)         department = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   795)         fromInstitution = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   796)         fromDepartment = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   797)         toInstitution = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   798)         toDepartment = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   799)         webUser = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   800)         creditCompany = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   801)         startBillId = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   802)         endBillId = null;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   803)         return "/analytics/opd_summary_by_item?faces-redirect=true";
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   804)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530   805) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   806)     public String navigateToChannellingPaymentBillList() {
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   807)         bills = null;
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   808)         return "/analytics/channelling_payment_list?faces-redirect=true";
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   809)     }
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   810) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   811)     public String navigateToChannellingPaymentBillFeeList() {
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530   812)         billFees = null;
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   813)         return "/analytics/channelling_payment_fee_list?faces-redirect=true";
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   814)     }
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   815) 
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530   816)     public String navigateToOpdPaymentBillFeeList() {
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530   817)         billFees = null;
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530   818)         return "/analytics/opd_payment_fee_list?faces-redirect=true";
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530   819)     }
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530   820) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530   821)     public String navigateToOpdPaymentBillList() {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530   822)         bills = null;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530   823)         return "/analytics/opd_payment_list?faces-redirect=true";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530   824)     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530   825) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   826)     public String navigateToProfessionalPaymentBillList() {
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   827)         bills = null;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530   828)         return "/analytics/professional_payment_list?faces-redirect=true";
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   829)     }
c62efa9cc9a (Buddhika Ariyaratne  2024-11-25 05:58:45 +0530   830)     
c62efa9cc9a (Buddhika Ariyaratne  2024-11-25 05:58:45 +0530   831)     public String navigateToWhtReport(){
c62efa9cc9a (Buddhika Ariyaratne  2024-11-25 05:58:45 +0530   832)         return "/reports/financialReports/wht?faces-redirect=true";
c62efa9cc9a (Buddhika Ariyaratne  2024-11-25 05:58:45 +0530   833)     }
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530   834) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   835)     public String toSearchBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   836)         bills = null;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   837)         return "/dataAdmin/search_bill?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   838)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   839) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   840)     public String toListAllBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   841)         bills = null;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   842)         return "/dataAdmin/list_bills?faces-redirect=true";
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   843)     }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530   844) 
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   845)     public String toListAllPayments() {
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   846)         bills = null;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   847)         return "/dataAdmin/list_payments?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   848)     }
c34a04f4b7f (Senula88             2023-10-10 20:34:41 +0530   849) 
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   850)     private void recreateProPayementModel() {
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   851)         institution = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   852)         site = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   853)         department = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   854)         category = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   855)         item = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   856)         mrnNo = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   857)         speciality = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   858)         staff = null;
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   859)     }
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530   860) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   861)     public void listAllBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   862)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   863)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   864)         sql = "select b from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   865)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   866)                 + "order by b.createdAt desc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   867)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   868)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   869)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   870)     }
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   871) 
10a444a0e91 (Dr M H B Ariyaratne  2024-04-25 06:45:52 +0530   872)     public void retireAlllistedBills() {
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   873)         for (Bill b : bills) {
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   874)             b.setRetired(true);
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   875)             b.setRetiredAt(new Date());
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   876)             b.setRetirer(sessionController.getLoggedUser());
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   877)             getBillFacade().edit(b);
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530   878)         }
10a444a0e91 (Dr M H B Ariyaratne  2024-04-25 06:45:52 +0530   879)     }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530   880) 
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   881)     public void listAllPayments() {
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   882)         String sql;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   883)         Map temMap = new HashMap();
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   884)         sql = "select p from Payment"
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   885)                 + " p where "
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   886)                 + " p.createdAt between :fromDate and :toDate "
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   887)                 + " order by p.createdAt desc ";
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   888)         temMap.put("toDate", getToDate());
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   889)         temMap.put("fromDate", getFromDate());
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   890)         payments = paymentFacade.findByJpql(sql, temMap, TemporalType.TIMESTAMP);
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   891)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   892) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   893)     public String toViewBillSummery() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   894)         if (bill == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   895)             return "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   896)         }
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   897)         return "/bill_summery?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   898)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   899) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   900)     public void fillBillSessions() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   901)         selectedBillSession = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   902)         BillType[] billTypes = {BillType.ChannelAgent, BillType.ChannelCash, BillType.ChannelOnCall, BillType.ChannelStaff};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   903)         List<BillType> bts = Arrays.asList(billTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   904)         if (false) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   905)             BillSession bs = new BillSession();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   906)             bs.getBill().getInsId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   907)             bs.getBill().getDeptId();
a3684348a93 (Dr M H B Ariyaratne  2023-12-19 06:03:25 +0530   908)             bs.getBill().getReferenceNumber();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   909)             bs.getReferenceBillSession().getBill().getInsId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   910)             bs.getReferenceBillSession().getBill().getDeptId();
a3684348a93 (Dr M H B Ariyaratne  2023-12-19 06:03:25 +0530   911)             bs.getReferenceBillSession().getBill().getReferenceNumber();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   912)             bs.getBill().getReferenceBill().getInsId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   913)             bs.getBill().getReferenceBill().getDeptId();
a3684348a93 (Dr M H B Ariyaratne  2023-12-19 06:03:25 +0530   914)             bs.getBill().getReferenceBill().getReferenceNumber();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   915)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   916)         String sql = "Select bs From BillSession bs "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   917)                 + " where bs.retired=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   918)                 + " and bs.bill.billType in :bt"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   919)                 + " and type(bs.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   920)                 + " and ("
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   921)                 + "    (bs.bill.insId) like :txt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   922)                 + " or (bs.bill.deptId) like :txt "
a3684348a93 (Dr M H B Ariyaratne  2023-12-19 06:03:25 +0530   923)                 + " or (bs.bill.referenceNumber) like :txt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   924)                 + " or (bs.referenceBillSession.bill.insId) like :txt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   925)                 + " or (bs.referenceBillSession.bill.deptId) like :txt "
a3684348a93 (Dr M H B Ariyaratne  2023-12-19 06:03:25 +0530   926)                 + " or (bs.referenceBillSession.bill.referenceNumber) like :txt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   927)                 + " or (bs.bill.referenceBill.insId) like :txt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   928)                 + " or (bs.bill.referenceBill.deptId) like :txt "
a3684348a93 (Dr M H B Ariyaratne  2023-12-19 06:03:25 +0530   929)                 + " or (bs.bill.referenceBill.referenceNumber) like :txt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   930)                 + " )"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   931)                 + " order by bs.sessionDate, bs.serialNo ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   932)         HashMap hh = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   933)         hh.put("bt", bts);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   934)         hh.put("class", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   935)         hh.put("txt", "%" + menuBarSearchText.toLowerCase().trim() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   936)         billSessions = billSessionFacade.findByJpql(sql, hh, TemporalType.DATE);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   937) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   938)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   939) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   940)     public void makeListNull() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   941)         maxResult = 50;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   942)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   943)         aceptPaymentBills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   944)         selectedBills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   945)         billFees = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   946)         billItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   947)         patientInvestigations = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   948)         searchKeyword = null;
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530   949)         printPreview = false;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   950)     }
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530   951) 
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   952)     public String navigateToSearchOpdBillsOfLoggedDepartment() {
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   953)         maxResult = 50;
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   954)         bills = null;
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   955)         aceptPaymentBills = null;
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   956)         selectedBills = null;
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   957)         billFees = null;
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   958)         billItems = null;
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   959)         patientInvestigations = null;
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   960)         searchKeyword = null;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530   961)         return "/opd/search_opd_billd_of_logged_department?faces-redirect=true";
3a6ea06eb33 (Dr M H B Ariyaratne  2023-10-20 10:00:27 +0530   962)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   963) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   964)     public void makeListNull2() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   965)         billFeesDone = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   966)         searchKeyword = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   967)         speciality = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   968)         staff = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   969)         item = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   970)         makeListNull();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   971)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   972) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   973)     public void createPatientInvestigationsTableAllTest() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   974)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   975) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   976)         String sql = "select pi from PatientInvestigation pi join pi.investigation  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   977)                 + " i join pi.billItem.bill b join b.patient.person p";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   978) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   979)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   980) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   981)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, 10);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   982)         checkRefundBillItems(patientInvestigations);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   983) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   984)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   985) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   986)     public String navigatToopdSearchProfessionalPaymentDue1() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   987)         FacesContext context = FacesContext.getCurrentInstance();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   988)         HttpServletRequest request = (HttpServletRequest) context.getExternalContext().getRequest();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   989)         ServletContext servletContext = (ServletContext) context.getExternalContext().getContext();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   990) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   991)         String url = request.getRequestURL().toString();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   992) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   993)         String ipAddress = request.getRemoteAddr();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   994) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   995)         AuditEvent auditEvent = new AuditEvent();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   996)         auditEvent.setEventStatus("Started");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   997)         long duration;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   998)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530   999)         auditEvent.setEventDataTime(startTime);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1000)         if (sessionController != null && sessionController.getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1001)             auditEvent.setDepartmentId(sessionController.getDepartment().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1002)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1003) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1004)         if (sessionController != null && sessionController.getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1005)             auditEvent.setInstitutionId(sessionController.getInstitution().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1006)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1007)         if (sessionController != null && sessionController.getLoggedUser() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1008)             auditEvent.setWebUserId(sessionController.getLoggedUser().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1009)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1010)         auditEvent.setUrl(url);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1011)         auditEvent.setIpAddress(ipAddress);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1012)         auditEvent.setEventTrigger("navigatToopdSearchProfessionalPaymentDue1()");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1013)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1014) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1015)         Date endTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1016)         duration = endTime.getTime() - startTime.getTime();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1017)         auditEvent.setEventDuration(duration);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1018)         auditEvent.setEventStatus("Completed");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1019)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1020)         return "/opd_search_professional_payment_due_1.xhtml?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1021)     }
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530  1022) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530  1023)     public String navigatToTotalCashierSummary() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1024)         resetAllFiltersExceptDateRange();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1025)         bundle = new ReportTemplateRowBundle();
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530  1026)         return "/reports/cashier_reports/total_cashier_summary?faces-redirect=true";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530  1027)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1028) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1029)     public void resetAllFiltersExceptDateRange() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1030)         institution = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1031)         department = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1032)         webUser = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1033)         site = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1034)         department = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1035)         departments = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1036)         paymentMethod = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1037)         searchKeyword = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1038)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1039) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1040)     public void resetAllFilters() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1041)         institution = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1042)         department = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1043)         webUser = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1044)         site = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1045)         fromDate = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1046)         toDate = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1047)         paymentMethod = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1048)         searchKeyword = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1049)         institution = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1050)         department = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1051)         site = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1052)         category = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1053)         item = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1054)         speciality = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1055)         staff = null;
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  1056)         webUser = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1057)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1058) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530  1059)     public String navigatToAllCashierSummary() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1060)         resetAllFiltersExceptDateRange();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1061)         bundle = new ReportTemplateRowBundle();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530  1062)         return "/reports/cashier_reports/all_cashier_summary?faces-redirect=true";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530  1063)     }
c9895adbafa (DamithDeshan         2024-10-20 20:10:39 +0530  1064) 
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1065)     public String navigatToBillListByBillType(BillType billType) {
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1066)         this.billType = billType;
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1067)         listBills();
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1068)         return "/analytics/bills?faces-redirect=true";
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1069)     }
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1070) 
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1071)     public String navigatToBillListByBillTypeAtomic(BillTypeAtomic billTypeAtomic) {
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1072)         this.billTypeAtomic = billTypeAtomic;
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1073)         listBills();
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1074)         return "/analytics/bills?faces-redirect=true";
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1075)     }
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1076) 
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530  1077)     public String navigatToDepartmentRevenueReport() {
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530  1078)         bundle = new ReportTemplateRowBundle();
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530  1079)         return "/reports/financialReports/department_revenue_report?faces-redirect=true";
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530  1080)     }
c17bce3e507 (Buddhika Ariyaratne  2024-09-18 23:19:36 +0530  1081) 
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530  1082)     public String navigatToShiftStartAndEnds() {
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1083)         bundle = new ReportTemplateRowBundle();
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530  1084)         return "/reports/cashier_reports/shift_start_and_ends?faces-redirect=true";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530  1085)     }
fd1076551eb (Buddhika Ariyaratne  2024-08-29 23:05:48 +0530  1086) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530  1087)     public String navigatToCashierSummary() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1088)         resetAllFiltersExceptDateRange();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1089)         bundle = new ReportTemplateRowBundle();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530  1090)         return "/reports/cashier_reports/cashier_summary?faces-redirect=true";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530  1091)     }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530  1092) 
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530  1093)     public String navigatToStaffWelfareBills() {
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530  1094)         resetAllFiltersExceptDateRange();
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530  1095)         bundle = new ReportTemplateRowBundle();
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530  1096)         return "/reports/financialReports/staff_welfare?faces-redirect=true";
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530  1097)     }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530  1098) 
bf8538e9db8 (IsuruUdaraRanaweera  2024-11-19 12:19:35 +0530  1099)     public String navigateToPackageReport() {
bf8538e9db8 (IsuruUdaraRanaweera  2024-11-19 12:19:35 +0530  1100)         resetAllFiltersExceptDateRange();
bf8538e9db8 (IsuruUdaraRanaweera  2024-11-19 12:19:35 +0530  1101)         bundle = new ReportTemplateRowBundle();
bf8538e9db8 (IsuruUdaraRanaweera  2024-11-19 12:19:35 +0530  1102)         return "/reports/financialReports/package_report?faces-redirect=true";
bf8538e9db8 (IsuruUdaraRanaweera  2024-11-19 12:19:35 +0530  1103)     }
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1104) 
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1105)     public String navigateToCreditInvoiceDispatch() {
f9cad8802e7 (IsuruUdaraRanaweera  2024-11-22 17:48:04 +0530  1106)         resetAllFiltersExceptDateRange();
f9cad8802e7 (IsuruUdaraRanaweera  2024-11-22 17:48:04 +0530  1107)         bundle = new ReportTemplateRowBundle();
f9cad8802e7 (IsuruUdaraRanaweera  2024-11-22 17:48:04 +0530  1108)         return "/reports/financialReports/credit_invoice_dispatch_report?faces-redirect=true";
f9cad8802e7 (IsuruUdaraRanaweera  2024-11-22 17:48:04 +0530  1109)     }
bf8538e9db8 (IsuruUdaraRanaweera  2024-11-19 12:19:35 +0530  1110) 
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1111)     public String navigateToPaymentSettlement() {
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1112)         resetAllFiltersExceptDateRange();
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1113)         bundle = new ReportTemplateRowBundle();
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1114)         return "/reports/financialReports/payment_settlement_report?faces-redirect=true";
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1115)     }
efc8eb878f9 (IsuruUdaraRanaweera  2024-11-24 19:35:39 +0530  1116) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1117)     public String navigatToShiftEndSummary() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1118)         resetAllFiltersExceptDateRange();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1119)         bundle = new ReportTemplateRowBundle();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1120)         return "/reports/cashier_reports/shift_end_summary?faces-redirect=true";
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1121)     }
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1122) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1123)     public String navigatToCashierDetails() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  1124)         resetAllFiltersExceptDateRange();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1125)         bundle = new ReportTemplateRowBundle();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1126)         return "/reports/cashier_reports/cashier_detailed?faces-redirect=true";
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1127)     }
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  1128) 
d8aa72a349c (Dr M H B Ariyaratne  2024-10-28 08:34:03 +0530  1129)     public String navigateToListAllDrawers() {
d8aa72a349c (Dr M H B Ariyaratne  2024-10-28 08:34:03 +0530  1130)         return "/reports/cashier_reports/all_drawers?faces-redirect=true";
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  1131)     }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  1132) 
2798d4af78c (Buddhika Ariyaratne  2024-10-06 07:10:28 +0530  1133)     public String navigateToAllCashierHandovers() {
2798d4af78c (Buddhika Ariyaratne  2024-10-06 07:10:28 +0530  1134)         return "/reports/cashier_reports/all_cashier_shifts?faces-redirect=true";
2798d4af78c (Buddhika Ariyaratne  2024-10-06 07:10:28 +0530  1135)     }
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530  1136) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1137)     public String navigatToReportDoctorPaymentOpd() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1138)         FacesContext context = FacesContext.getCurrentInstance();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1139)         HttpServletRequest request = (HttpServletRequest) context.getExternalContext().getRequest();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1140)         ServletContext servletContext = (ServletContext) context.getExternalContext().getContext();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1141) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1142)         String url = request.getRequestURL().toString();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1143) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1144)         String ipAddress = request.getRemoteAddr();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1145) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1146)         AuditEvent auditEvent = new AuditEvent();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1147)         auditEvent.setEventStatus("Started");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1148)         long duration;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1149)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1150)         auditEvent.setEventDataTime(startTime);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1151)         if (sessionController != null && sessionController.getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1152)             auditEvent.setDepartmentId(sessionController.getDepartment().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1153)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1154) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1155)         if (sessionController != null && sessionController.getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1156)             auditEvent.setInstitutionId(sessionController.getInstitution().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1157)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1158)         if (sessionController != null && sessionController.getLoggedUser() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1159)             auditEvent.setWebUserId(sessionController.getLoggedUser().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1160)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1161)         auditEvent.setUrl(url);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1162)         auditEvent.setIpAddress(ipAddress);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1163)         auditEvent.setEventTrigger("navigatToReportDoctorPaymentOpd()");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1164)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1165) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1166)         Date endTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1167)         duration = endTime.getTime() - startTime.getTime();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1168)         auditEvent.setEventDuration(duration);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1169)         auditEvent.setEventStatus("Completed");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1170)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1171)         return "/reportCashier/report_doctor_payment_opd.xhtml?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1172) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1173)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1174) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1175)     public String navigatToReportDoctorPaymentOpdByBill() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1176)         FacesContext context = FacesContext.getCurrentInstance();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1177)         HttpServletRequest request = (HttpServletRequest) context.getExternalContext().getRequest();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1178)         ServletContext servletContext = (ServletContext) context.getExternalContext().getContext();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1179) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1180)         String url = request.getRequestURL().toString();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1181) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1182)         String ipAddress = request.getRemoteAddr();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1183) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1184)         AuditEvent auditEvent = new AuditEvent();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1185)         auditEvent.setEventStatus("Started");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1186)         long duration;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1187)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1188)         auditEvent.setEventDataTime(startTime);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1189)         if (sessionController != null && sessionController.getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1190)             auditEvent.setDepartmentId(sessionController.getDepartment().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1191)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1192) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1193)         if (sessionController != null && sessionController.getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1194)             auditEvent.setInstitutionId(sessionController.getInstitution().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1195)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1196)         if (sessionController != null && sessionController.getLoggedUser() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1197)             auditEvent.setWebUserId(sessionController.getLoggedUser().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1198)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1199)         auditEvent.setUrl(url);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1200)         auditEvent.setIpAddress(ipAddress);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1201)         auditEvent.setEventTrigger("navigatToReportDoctorPaymentOpdByBill()");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1202)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1203) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1204)         Date endTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1205)         duration = endTime.getTime() - startTime.getTime();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1206)         auditEvent.setEventDuration(duration);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1207)         auditEvent.setEventStatus("Completed");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1208)         auditEventApplicationController.logAuditEvent(auditEvent);
4de471ac5f7 (Lawan Samarasekara   2024-02-09 18:16:03 +0530  1209)         return "/reportCashier/report_doctor_payment_opd_by_bill.xhtml?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1210) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1211)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1212) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1213)     public void fillToMyDepartmentPatientInvestigations() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1214)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1215) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1216)         String jpql = "select pi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1217)                 + " from PatientInvestigation pi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1218)                 + " join pi.investigation i "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1219)                 + " join pi.billItem.bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1220)                 + " join b.patient.person p "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1221)                 + " where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1222)                 + " b.createdAt between :fromDate and :toDate  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1223)                 + " and b.toDepartment=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1224) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1225)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1226)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1227)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1228)         temMap.put("dep", getSessionController().getLoggedUser().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1229) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1230)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1231)             jpql += " and  ((p.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1232)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1233)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1234) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1235)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1236)             jpql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1237)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1238)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1239) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1240)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1241)             jpql += " and  ((p.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1242)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1243)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1244) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1245)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1246)             jpql += " and  ((i.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1247)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1248)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1249) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1250)         if (patientEncounter != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1251)             jpql += "and pi.encounter=:en";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1252)             temMap.put("en", patientEncounter);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1253)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1254) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1255)         jpql += " order by pi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1256) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1257) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1258)         patientInvestigations = getPatientInvestigationFacade().findByJpql(jpql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1259)         checkRefundBillItems(patientInvestigations);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1260) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1261)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1262) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1263)     public void fillToDepartmentPatientInvestigations() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1264)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1265) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1266)         String jpql = "select pi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1267)                 + " from PatientInvestigation pi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1268)                 + " join pi.investigation i "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1269)                 + " join pi.billItem.bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1270)                 + " join b.patient.person p "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1271)                 + " where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1272)                 + " b.createdAt between :fromDate and :toDate  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1273)                 + " and b.toDepartment=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1274) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1275)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1276)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1277)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1278)         temMap.put("dep", getReportKeyWord().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1279) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1280)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1281)             jpql += " and  ((p.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1282)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1283)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1284) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1285)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1286)             jpql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1287)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1288)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1289) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1290)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1291)             jpql += " and  ((p.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1292)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1293)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1294) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1295)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1296)             jpql += " and  ((i.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1297)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1298)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1299) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1300)         if (patientEncounter != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1301)             jpql += "and pi.encounter=:en";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1302)             temMap.put("en", patientEncounter);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1303)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1304) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1305)         jpql += " order by pi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1306) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1307) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1308)         patientInvestigations = getPatientInvestigationFacade().findByJpql(jpql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1309)         checkRefundBillItems(patientInvestigations);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1310) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1311)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1312) 
2d73eb6f17d (DamithDeshan         2024-07-28 16:05:32 +0530  1313)     public void fillToSelectedDepartmentPatientInvestigations() {
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1314)         getSearchKeyword().setItemDepartment(getReportKeyWord().getDepartment());
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1315)         getSearchKeyword().setPatientEncounter(patientEncounter);
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1316)         patientInvestigations = patientInvestigationService.fetchPatientInvestigations(fromDate, toDate, getSearchKeyword());
2d73eb6f17d (DamithDeshan         2024-07-28 16:05:32 +0530  1317)     }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  1318) 
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1319)     public void fillPatientInvestigationsForIxAdminPastData(Investigation ix) {
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1320)         getSearchKeyword().setPatientEncounter(patientEncounter);
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1321)         getSearchKeyword().setInvestigation(ix);
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1322)         patientInvestigations = patientInvestigationService.fetchPatientInvestigations(fromDate, toDate, getSearchKeyword());
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1323)     }
302a3eba163 (Buddhika Ariyaratne  2024-11-04 04:27:50 +0530  1324) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1325)     public void fillCollectingCentreCourierPatientInvestigations() {
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1326)         String jpql = "select pi "
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1327)                 + " from PatientInvestigation pi "
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1328)                 + " join pi.investigation i "
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1329)                 + " join pi.billItem.bill b "
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1330)                 + " join b.patient.person p "
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1331)                 + " where "
b8772994cb1 (buddhika75           2024-08-07 21:38:27 +0530  1332)                 + " b.createdAt between :fromDate and :toDate  ";
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1333) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1334)         Map temMap = new HashMap();
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1335)         temMap.put("toDate", getToDate());
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1336)         temMap.put("fromDate", getFromDate());
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1337)         temMap.put("dep", getReportKeyWord().getDepartment());
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  1338) 
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  1339)         if (institution == null) {
b06eee9d795 (Dr. M H B Ariyaratne 2024-08-04 09:30:44 +0530  1340)             jpql += " and b.collectingCentre in :ccs ";
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  1341)             temMap.put("ccs", sessionController.getLoggableCollectingCentres());
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  1342)         } else {
b06eee9d795 (Dr. M H B Ariyaratne 2024-08-04 09:30:44 +0530  1343)             jpql += " and b.collectingCentre=:cc ";
b8772994cb1 (buddhika75           2024-08-07 21:38:27 +0530  1344)             temMap.put("cc", institution);
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1345)         }
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1346) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1347)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1348)             jpql += " and  ((p.name) like :patientName )";
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1349)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1350)         }
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1351) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1352)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1353)             jpql += " and  ((b.deptId) like :billNo )";
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1354)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1355)         }
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1356) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1357)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1358)             jpql += " and  ((p.phone) like :patientPhone )";
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1359)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1360)         }
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1361) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1362)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1363)             jpql += " and  ((i.name) like :itm )";
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1364)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1365)         }
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1366) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1367)         jpql += " order by pi.id desc  ";
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1368) //    
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1369) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1370)         patientInvestigations = getPatientInvestigationFacade().findByJpql(jpql, temMap, TemporalType.TIMESTAMP, 50);
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1371)         checkRefundBillItems(patientInvestigations);
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1372) 
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530  1373)     }
2d73eb6f17d (DamithDeshan         2024-07-28 16:05:32 +0530  1374) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1375)     public void createPreRefundTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1376) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1377)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1378)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1379)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1380) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1381)         sql = "select b from RefundBill b where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1382)                 + " and b.institution=:ins and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1383)                 + " (b.billedBill is null  or type(b.billedBill)=:billedClass ) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1384)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1385)                 + " and b.retired=false and b.deptId is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1386) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1387)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1388)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1389)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1390)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1391) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1392)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1393)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1394)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1395)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1396) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1397)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1398)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1399)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1400)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1401) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1402)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1403)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1404)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1405)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1406) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1407)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1408)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1409)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1410)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1411) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1412)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1413) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1414)         temMap.put("billedClass", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1415)         temMap.put("billType", BillType.PharmacyPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1416)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1417)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1418)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1419) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1420)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1421)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1422) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1423)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1424) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1425)     }
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  1426) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1427)     public void createPreRefundOpdTable() {
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1428) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1429)         bills = null;
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1430)         String sql;
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1431)         Map temMap = new HashMap();
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1432) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1433)         sql = "select b from RefundBill b where "
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1434)                 + " b.createdAt between :fromDate and :toDate"
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1435)                 + " and b.retired=false and b.deptId is not null "
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1436)                 + " and b.billType = :billType"
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1437)                 + " and b.institution = :ins";
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1438) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1439)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1440)             sql += " and  ((b.patient.person.name) like :patientName )";
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1441)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1442)         }
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1443) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1444)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1445)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1446)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1447)         }
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1448) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1449)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1450)             sql += " and  ((b.deptId) like :billNo )";
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1451)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1452)         }
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1453) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1454)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1455)             sql += " and  ((b.netTotal) like :netTotal )";
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1456)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1457)         }
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1458) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1459)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1460)             sql += " and  ((b.total) like :total )";
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1461)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1462)         }
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1463) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1464)         sql += " order by b.createdAt desc  ";
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1465) //    
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1466) //        temMap.put("billedClass", PreBill.class);
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1467) //        temMap.put("billType", BillType.OpdBill);
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1468)         temMap.put("toDate", getToDate());
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1469)         temMap.put("fromDate", getFromDate());
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1470)         temMap.put("billType", BillType.OpdBill);
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1471)         temMap.put("ins", getSessionController().getInstitution());
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1472) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1473)         //System.err.println("Sql " + sql);
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1474)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 50);
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1475) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1476)         Date startTime = new Date();
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1477) 
9f56b41b5a1 (Senula88             2024-01-17 14:06:00 +0530  1478)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1479) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1480)     public void reportSettledOPDBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1481)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1482)         settledBills(billType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1483) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1484)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1485) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1486)     public void reportSettledPharmacyBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1487)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1488)         settledBills(billType.PharmacyWholeSale);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1489) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1490)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1491) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1492)     public void settledBills(BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1493)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1494)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1495)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1496) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1497)         sql = "select b from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1498)                 + " b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1499)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1500)                 + " and b.referenceBill.billType=:bt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1501)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1502)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1503)                 //                + " and b.balance=0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1504)                 + "order by b.createdAt desc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1505) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1506) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1507)         temMap.put("billType", BillType.CashRecieveBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1508)         temMap.put("bt", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1509)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1510)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1511)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1512) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1513)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1514)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1515) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1516)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1517) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1518)     List<billsWithbill> withbills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1519) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1520)     public List<billsWithbill> getWithbills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1521)         return withbills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1522)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1523) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1524)     public void setWithbills(List<billsWithbill> withbills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1525)         this.withbills = withbills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1526)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1527) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1528)     public void createCreditBillsWithOPDBill() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1529)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1530)         createCreditBillsWithBill(billType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1531) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1532)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1533) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1534)     public void createCreditBillsWithPharmacyBill() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1535)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1536) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1537)         createCreditBillsWithBill(billType.PharmacyWholeSale);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1538) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1539)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1540) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1541)     public void createCreditBillsWithBill(BillType refBillType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1542)         bills = fetchBills(BillType.CashRecieveBill, refBillType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1543)         ////System.out.println("bills = " + bills);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1544)         withbills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1545) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1546)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1547)             billsWithbill bWithbill = new billsWithbill();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1548)             bWithbill.setB(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1549)             bWithbill.setCaBills(fetchCreditBills(BillType.CashRecieveBill, b));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1550)             ////System.out.println("bWithbill.getCaBills() = " + bWithbill.getCaBills());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1551)             withbills.add(bWithbill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1552)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1553)         ////System.out.println("withbills = " + withbills);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1554) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1555)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1556) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1557)     public List<Bill> fetchBills(BillType bt, BillType rbt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1558) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1559)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1560)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1561) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1562)         sql = "select DISTINCT(b.referenceBill) from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1563)                 + " b.billType =:billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1564)                 + " and b.referenceBill.billType =:billTypeRef "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1565)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1566)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1567)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1568) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1569)         temMap.put("billType", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1570)         temMap.put("billTypeRef", rbt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1571)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1572)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1573)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1574) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1575)         return getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1576)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1577) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1578)     public List<Bill> fetchCreditBills(BillType bt, Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1579) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1580)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1581)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1582) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1583)         sql = "select b from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1584)                 + " b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1585)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1586)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1587)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1588)                 + " and b.referenceBill=:bid ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1589) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1590)         temMap.put("billType", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1591)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1592)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1593)         temMap.put("bid", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1594)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1595) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1596)         return getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1597)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1598) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1599)     public PaymentMethod getPaymentMethod() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1600)         return paymentMethod;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1601)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1602) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1603)     public void setPaymentMethod(PaymentMethod paymentMethod) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1604)         this.paymentMethod = paymentMethod;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1605)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1606) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1607)     public CommonController getCommonController() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1608)         return commonController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1609)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1610) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1611)     public void setCommonController(CommonController commonController) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1612)         this.commonController = commonController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1613)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1614) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1615)     public UploadedFile getFile() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1616)         return file;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1617)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1618) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1619)     public void setFile(UploadedFile file) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1620)         this.file = file;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1621)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1622) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1623)     @Deprecated
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1624)     private void checkLabReportsApproved(List<Bill> bills) {
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1625)         if (!bills.isEmpty()) {
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1626)             for (Bill b : bills) {
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1627)                 String sql;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1628)                 Map m = new HashMap();
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1629)                 sql = " select pr from PatientReport pr where "
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1630)                         + " pr.retired=false "
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1631)                         + " and pr.patientInvestigation.billItem.bill=:b "
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1632)                         + " and pr.approved=true ";
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1633) 
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1634)                 m.put("b", b);
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1635)                 List<PatientReport> list = getPatientReportFacade().findByJpql(sql, m);
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1636)                 if (!list.isEmpty()) {
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1637)                     b.setApprovedAnyTest(true);
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  1638)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1639)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1640)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1641)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1642) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1643)     private void checkLabReportsApprovedBillItem(List<BillItem> billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1644)         for (BillItem bi : billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1645)             String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1646)             Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1647)             sql = " select pr from PatientReport pr where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1648)                     + " pr.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1649)                     + " and pr.patientInvestigation.billItem=:bi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1650)                     + " and pr.approved=true ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1651) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1652)             m.put("bi", bi);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1653)             List<PatientReport> list = getPatientReportFacade().findByJpql(sql, m);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1654)             if (!list.isEmpty()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1655)                 bi.getBill().setApprovedAnyTest(true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1656)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1657)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1658)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1659) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1660)     public PatientReportFacade getPatientReportFacade() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1661)         return patientReportFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1662)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1663) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1664)     public void setPatientReportFacade(PatientReportFacade patientReportFacade) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1665)         this.patientReportFacade = patientReportFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1666)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1667) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1668)     public Institution getCreditCompany() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1669)         return creditCompany;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1670)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1671) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1672)     public void setCreditCompany(Institution creditCompany) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1673)         this.creditCompany = creditCompany;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1674)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1675) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1676)     public Department getFromDepartment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1677)         return fromDepartment;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1678)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1679) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1680)     public void setFromDepartment(Department fromDepartment) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1681)         this.fromDepartment = fromDepartment;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1682)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1683) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1684)     public Department getToDepartment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1685)         return toDepartment;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1686)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1687) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1688)     public void setToDepartment(Department toDepartment) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1689)         this.toDepartment = toDepartment;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1690)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1691) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1692)     public PatientFacade getPatientFacade() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1693)         return patientFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1694)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1695) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1696)     public List<PatientReport> getPatientReports() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1697)         return patientReports;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1698)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1699) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1700)     public void setPatientReports(List<PatientReport> patientReports) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1701)         this.patientReports = patientReports;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1702)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1703) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1704)     public Institution getOtherInstitution() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1705)         return otherInstitution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1706)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1707) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1708)     public void setOtherInstitution(Institution otherInstitution) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1709)         this.otherInstitution = otherInstitution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1710)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1711) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1712)     public Institution getInstitution() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1713)         return institution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1714)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1715) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1716)     public void setInstitution(Institution institution) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1717)         this.institution = institution;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1718)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1719) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1720)     public int getManageListIndex() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1721)         return manageListIndex;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1722)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1723) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1724)     public void setManageListIndex(int manageListIndex) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1725)         this.manageListIndex = manageListIndex;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1726)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1727) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1728)     public List<BillLight> getBillLights() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1729)         return billLights;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1730)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1731) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1732)     public void setBillLights(List<BillLight> billLights) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1733)         this.billLights = billLights;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1734)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  1735) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1736)     public Patient getPatient() {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1737)         return patient;
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1738)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1739) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1740)     public void setPatient(Patient patient) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1741)         this.patient = patient;
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1742)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  1743) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1744)     public Institution getFromInstitution() {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1745)         return fromInstitution;
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1746)     }
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1747) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1748)     public void setFromInstitution(Institution fromInstitution) {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1749)         this.fromInstitution = fromInstitution;
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1750)     }
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1751) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1752)     public Institution getToInstitution() {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1753)         return toInstitution;
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1754)     }
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1755) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1756)     public void setToInstitution(Institution toInstitution) {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1757)         this.toInstitution = toInstitution;
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1758)     }
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  1759) 
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1760)     public Institution getDealer() {
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1761)         return dealer;
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1762)     }
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1763) 
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1764)     public void setDealer(Institution dealer) {
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1765)         this.dealer = dealer;
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1766)     }
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1767) 
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1768)     public List<Bill> getGrnBills() {
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1769)         return grnBills;
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1770)     }
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1771) 
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1772)     public void setGrnBills(List<Bill> grnBills) {
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1773)         this.grnBills = grnBills;
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1774)     }
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  1775) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1776)     public Long getCurrentBillId() {
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1777)         return currentBillId;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1778)     }
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1779) 
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1780)     public void setCurrentBillId(Long currentBillId) {
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1781)         this.currentBillId = currentBillId;
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1782)     }
041b163a6d5 (Thiwanka Madushan    2024-01-28 16:47:55 +0530  1783) 
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530  1784)     public Long getBarcodeIdLong() {
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530  1785)         return barcodeIdLong;
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530  1786)     }
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530  1787) 
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530  1788)     public void setBarcodeIdLong(Long barcodeIdLong) {
b545416f63b (Dr M H B Ariyaratne  2024-05-15 13:01:49 +0530  1789)         this.barcodeIdLong = barcodeIdLong;
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530  1790)     }
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530  1791) 
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1792)     public List<Payment> getPayments() {
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1793)         return payments;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1794)     }
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1795) 
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1796)     public void setPayments(List<Payment> payments) {
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1797)         this.payments = payments;
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1798)     }
7fa85c6ed6a (Dr M H B Ariyaratne  2024-04-06 06:42:38 +0530  1799) 
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1800)     public List<BillSummaryRow> getBillSummaryRows() {
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1801)         return billSummaryRows;
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1802)     }
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1803) 
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1804)     public void setBillSummaryRows(List<BillSummaryRow> billSummaryRows) {
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1805)         this.billSummaryRows = billSummaryRows;
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1806)     }
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  1807) 
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1808)     public double getGrossTotal() {
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1809)         return grossTotal;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1810)     }
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1811) 
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1812)     public void setGrossTotal(double grossTotal) {
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1813)         this.grossTotal = grossTotal;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1814)     }
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1815) 
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1816)     public double getDiscount() {
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1817)         return discount;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1818)     }
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1819) 
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1820)     public void setDiscount(double discount) {
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1821)         this.discount = discount;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1822)     }
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  1823) 
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1824)     public DepartmentController getDepartmentController() {
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1825)         return departmentController;
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1826)     }
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1827) 
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1828)     public void setDepartmentController(DepartmentController departmentController) {
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1829)         this.departmentController = departmentController;
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1830)     }
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  1831) 
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1832)     public List<Department> getDepartments() {
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1833)         return departments;
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1834)     }
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1835) 
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1836)     public void setDepartments(List<Department> departments) {
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1837)         this.departments = departments;
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1838)     }
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  1839) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1840)     public double getTotalBillCount() {
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1841)         return totalBillCount;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1842)     }
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1843) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1844)     public void setTotalBillCount(double totalBillCount) {
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1845)         this.totalBillCount = totalBillCount;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1846)     }
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  1847) 
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1848)     public Long getStartBillId() {
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1849)         return startBillId;
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1850)     }
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1851) 
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1852)     public void setStartBillId(Long startBillId) {
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1853)         this.startBillId = startBillId;
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1854)     }
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1855) 
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1856)     public Long getEndBillId() {
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1857)         return endBillId;
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1858)     }
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1859) 
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1860)     public void setEndBillId(Long endBillId) {
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1861)         this.endBillId = endBillId;
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1862)     }
94742baf003 (Dr M H B Ariyaratne  2024-05-02 12:32:30 +0530  1863) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1864)     public List<PaymentMethod> getPaymentMethods() {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1865)         return paymentMethods;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1866)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1867) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1868)     public void setPaymentMethods(List<PaymentMethod> paymentMethods) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1869)         this.paymentMethods = paymentMethods;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1870)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1871) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1872)     public WebUser getWebUser() {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1873)         return webUser;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1874)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1875) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1876)     public void setWebUser(WebUser webUser) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1877)         this.webUser = webUser;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1878)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  1879) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1880)     public BillTypeAtomic getBillTypeAtomic() {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1881)         return billTypeAtomic;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1882)     }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1883) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1884)     public void setBillTypeAtomic(BillTypeAtomic billTypeAtomic) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1885)         this.billTypeAtomic = billTypeAtomic;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1886)     }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  1887) 
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1888)     public Date getMaxDate() {
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530  1889)         maxDate = commonFunctions.getEndOfDay(new Date());
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530  1890)         return maxDate;
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530  1891)     }
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530  1892) 
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530  1893)     public void setMaxDate(Date maxDate) {
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530  1894)         this.maxDate = maxDate;
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530  1895)     }
15cb2c43673 (DamithDeshan         2024-05-15 18:29:38 +0530  1896) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1897)     public double getCashTotal() {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1898)         return cashTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1899)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1900) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1901)     public void setCashTotal(double cashTotal) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1902)         this.cashTotal = cashTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1903)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1904) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1905)     public double getCardTotal() {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1906)         return cardTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1907)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1908) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1909)     public void setCardTotal(double cardTotal) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1910)         this.cardTotal = cardTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1911)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1912) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1913)     public double getChequeTotal() {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1914)         return chequeTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1915)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1916) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1917)     public void setChequeTotal(double chequeTotal) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1918)         this.chequeTotal = chequeTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1919)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1920) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1921)     public double getSlipTotal() {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1922)         return slipTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1923)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1924) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1925)     public void setSlipTotal(double slipTotal) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1926)         this.slipTotal = slipTotal;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1927)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1928) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1929)     public double getTotalOfOtherPayments() {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1930)         return totalOfOtherPayments;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1931)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1932) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1933)     public void setTotalOfOtherPayments(double totalOfOtherPayments) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1934)         this.totalOfOtherPayments = totalOfOtherPayments;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1935)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1936) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1937)     public double getBillCount() {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1938)         return billCount;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1939)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1940) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1941)     public void setBillCount(double billCount) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1942)         this.billCount = billCount;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1943)     }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  1944) 
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1945)     public Token getToken() {
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1946)         return token;
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1947)     }
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1948) 
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1949)     public void setToken(Token token) {
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1950)         this.token = token;
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1951)     }
aa33ac4dccf (Thiwanka570          2024-05-25 16:36:10 +0530  1952) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1953)     public BillController getBillController() {
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1954)         return billController;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1955)     }
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1956) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1957)     public void setBillController(BillController billController) {
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1958)         this.billController = billController;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1959)     }
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1960) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1961)     public boolean isPrintPreview() {
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1962)         return printPreview;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1963)     }
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1964) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1965)     public void setPrintPreview(boolean printPreview) {
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1966)         this.printPreview = printPreview;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1967)     }
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1968) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1969)     public PharmaceuticalBillItemFacade getPharmaceuticalBillItemFacade() {
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1970)         return pharmaceuticalBillItemFacade;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1971)     }
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1972) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1973)     public void setPharmaceuticalBillItemFacade(PharmaceuticalBillItemFacade pharmaceuticalBillItemFacade) {
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1974)         this.pharmaceuticalBillItemFacade = pharmaceuticalBillItemFacade;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1975)     }
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  1976) 
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1977)     public boolean isDuplicateBillView() {
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1978)         return duplicateBillView;
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1979)     }
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1980) 
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1981)     public void setDuplicateBillView(boolean duplicateBillView) {
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1982)         this.duplicateBillView = duplicateBillView;
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1983)     }
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  1984) 
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1985)     public int getManagePaymentIndex() {
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1986)         return managePaymentIndex;
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1987)     }
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1988) 
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1989)     public void setManagePaymentIndex(int managePaymentIndex) {
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1990)         this.managePaymentIndex = managePaymentIndex;
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1991)     }
5bb6d9af5f4 (Senula88             2024-07-06 10:06:32 +0530  1992) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  1993)     public ReportTemplateType getReportTemplateType() {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  1994)         return reportTemplateType;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  1995)     }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  1996) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  1997)     public void setReportTemplateType(ReportTemplateType reportTemplateType) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  1998)         this.reportTemplateType = reportTemplateType;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  1999)     }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  2000) 
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2001)     public Category getCategory() {
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2002)         return category;
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2003)     }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2004) 
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2005)     public void setCategory(Category category) {
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2006)         this.category = category;
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2007)     }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2008) 
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2009)     public List<CashBookEntry> getCashBookEntries() {
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2010)         return cashBookEntries;
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2011)     }
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2012) 
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2013)     public void setCashBookEntries(List<CashBookEntry> cashBookEntries) {
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2014)         this.cashBookEntries = cashBookEntries;
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2015)     }
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2016) 
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2017)     public Institution getSite() {
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2018)         return site;
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2019)     }
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2020) 
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2021)     public void setSite(Institution site) {
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2022)         this.site = site;
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2023)     }
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530  2024) 
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2025)     public ReportTemplateRowBundle getBundle() {
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2026)         return bundle;
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2027)     }
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2028) 
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2029)     public void setBundle(ReportTemplateRowBundle bundle) {
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2030)         this.bundle = bundle;
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2031)     }
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530  2032) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2033)     public String getBackLink() {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2034)         return backLink;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2035)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2036) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2037)     public void setBackLink(String backLink) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2038)         this.backLink = backLink;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2039)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2040) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2041)     public ReportTemplateRowBundle getBundleBillItems() {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2042)         return bundleBillItems;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2043)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2044) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2045)     public void setBundleBillItems(ReportTemplateRowBundle bundleBillItems) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2046)         this.bundleBillItems = bundleBillItems;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2047)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530  2048) 
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530  2049)     public int getOpdAnalyticsIndex() {
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530  2050)         return opdAnalyticsIndex;
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530  2051)     }
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530  2052) 
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530  2053)     public void setOpdAnalyticsIndex(int opdAnalyticsIndex) {
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  2054)         this.opdAnalyticsIndex = opdAnalyticsIndex;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2055)     }
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2056) 
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2057)     public List<Drawer> getDrawerList() {
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2058)         return drawerList;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2059)     }
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2060) 
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2061)     public void setDrawerList(List<Drawer> drawerList) {
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2062)         this.drawerList = drawerList;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2063)     }
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2064) 
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2065)     public DrawerFacade getDrawerFacade() {
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2066)         return drawerFacade;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2067)     }
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2068) 
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2069)     public void setDrawerFacade(DrawerFacade drawerFacade) {
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2070)         this.drawerFacade = drawerFacade;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2071)     }
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2072) 
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2073)     public Drawer getSelectedDrawer() {
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2074)         return selectedDrawer;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2075)     }
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2076) 
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2077)     public void setSelectedDrawer(Drawer selectedDrawer) {
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530  2078)         this.selectedDrawer = selectedDrawer;
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530  2079)     }
3f414a2db1c (Buddhika Ariyaratne  2024-09-13 09:24:06 +0530  2080) 
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2081)     public BillClassType getBillClassType() {
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2082)         return billClassType;
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2083)     }
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2084) 
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2085)     public void setBillClassType(BillClassType billClassType) {
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2086)         this.billClassType = billClassType;
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2087)     }
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530  2088) 
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2089)     public StreamedContent getDownloadingExcel() {
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2090)         return downloadingExcel;
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2091)     }
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2092) 
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2093)     public void setDownloadingExcel(StreamedContent downloadingExcel) {
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2094)         this.downloadingExcel = downloadingExcel;
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2095)     }
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530  2096) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2097)     public double getHosTotal() {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2098)         return hosTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2099)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2100) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2101)     public void setHosTotal(double hosTotal) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2102)         this.hosTotal = hosTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2103)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2104) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2105)     public double getStaffTotal() {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2106)         return staffTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2107)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2108) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2109)     public void setStaffTotal(double staffTotal) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2110)         this.staffTotal = staffTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2111)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2112) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2113)     public double getDiscountTotal() {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2114)         return discountTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2115)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2116) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2117)     public void setDiscountTotal(double discountTotal) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2118)         this.discountTotal = discountTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2119)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2120) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2121)     public double getAmountTotal() {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2122)         return amountTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2123)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2124) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2125)     public void setAmountTotal(double amountTotal) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2126)         this.amountTotal = amountTotal;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2127)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530  2128) 
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2129)     public Institution getToSite() {
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2130)         return toSite;
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2131)     }
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2132) 
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2133)     public void setToSite(Institution toSite) {
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2134)         this.toSite = toSite;
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2135)     }
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530  2136) 
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2137)     public String getSearchType() {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2138)         return searchType;
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2139)     }
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2140) 
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2141)     public void setSearchType(String searchType) {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2142)         this.searchType = searchType;
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2143)     }
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2144) 
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2145)     public String getReportType() {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2146)         return reportType;
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2147)     }
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2148) 
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2149)     public void setReportType(String reportType) {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2150)         this.reportType = reportType;
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2151)     }
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  2152) 
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2153)     public String getMrnNo() {
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2154)         return mrnNo;
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2155)     }
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2156) 
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2157)     public void setMrnNo(String mrnNo) {
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2158)         this.mrnNo = mrnNo;
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2159)     }
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530  2160) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2161)     public boolean isWithProfessionalFee() {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2162)         return withProfessionalFee;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2163)     }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2164) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2165)     public void setWithProfessionalFee(boolean withProfessionalFee) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2166)         this.withProfessionalFee = withProfessionalFee;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2167)     }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  2168) 
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2169)     public String getVisitType() {
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2170)         return visitType;
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2171)     }
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2172) 
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2173)     public void setVisitType(String visitType) {
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2174)         this.visitType = visitType;
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2175)     }
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530  2176) 
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2177)     public String getMethodType() {
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2178)         return methodType;
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2179)     }
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2180) 
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2181)     public void setMethodType(String methodType) {
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2182)         this.methodType = methodType;
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2183)     }
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530  2184) 
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2185)     public Drawer getDrawer() {
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2186)         return drawer;
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2187)     }
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2188) 
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2189)     public void setDrawer(Drawer drawer) {
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2190)         this.drawer = drawer;
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2191)     }
3c7f187cf73 (IsuruUdaraRanaweera  2024-11-05 13:34:08 +0530  2192) 
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2193)     public Department getServiceDepartment() {
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2194)         return serviceDepartment;
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2195)     }
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2196) 
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2197)     public void setServiceDepartment(Department serviceDepartment) {
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2198)         this.serviceDepartment = serviceDepartment;
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2199)     }
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2200) 
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2201)     public Department getBilledDepartment() {
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2202)         return billedDepartment;
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2203)     }
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2204) 
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2205)     public void setBilledDepartment(Department billedDepartment) {
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2206)         this.billedDepartment = billedDepartment;
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2207)     }
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530  2208) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2209)     public class billsWithbill {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2210) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2211)         Bill b;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2212)         List<Bill> caBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2213) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2214)         public Bill getB() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2215)             return b;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2216)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2217) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2218)         public void setB(Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2219)             this.b = b;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2220)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2221) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2222)         public List<Bill> getCaBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2223)             if (caBills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2224)                 caBills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2225)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2226)             return caBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2227)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2228) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2229)         public void setCaBills(List<Bill> caBills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2230)             this.caBills = caBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2231)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2232) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2233)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2234) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2235)     public void createReturnSaleBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2236)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2237) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2238)         createReturnSaleBills(BillType.PharmacyPre, true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2239) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2240)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2241) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2242)     public void createReturnSaleAllBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2243)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2244) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2245)         createReturnSaleBills(BillType.PharmacyPre, false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2246) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2247)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2248) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2249)     public void createReturnWholeSaleBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2250)         createReturnSaleBills(BillType.PharmacyWholesalePre, true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2251)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2252) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2253)     public void createReturnWholeSaleAllBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2254)         createReturnSaleBills(BillType.PharmacyWholesalePre, false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2255)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2256) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2257)     public void createReturnSaleBills(BillType billType, boolean maxNum) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2258) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2259)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2260)         m.put("bt", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2261)         m.put("billedClass", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2262)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2263)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2264)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2265)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2266) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2267)         sql = "Select b from RefundBill b where  b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2268)                 + " and b.institution=:ins and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2269)                 + " (b.billedBill is null  or type(b.billedBill)=:billedClass ) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2270)                 + " and b.createdAt between :fd and :td"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2271)                 + " and b.billType=:bt ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2272) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2273)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2274)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2275)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2276)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2277) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2278)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2279)             sql += " and  ((b.billedBill.deptId) like :rNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2280)             m.put("rNo", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2281)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2282) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2283)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2284)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2285)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2286)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2287) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2288)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2289)         if (maxNum == true) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2290)             bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2291)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2292)             bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2293)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2294) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2295)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2296) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2297)     public void createTableByKeywordToPayBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2298)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2299)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2300)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2301)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2302) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2303)         sql = "select b from BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2304)                 + " b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2305)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2306)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2307)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2308)                 + " and b.balance>0 ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2309) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2310)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2311)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2312)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2313)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2314) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2315)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2316)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2317)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2318)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2319) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2320)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2321)             sql += " and  (((b.deptId) like :billNo )or((b.insId) like :billNo ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2322)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2323)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2324) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2325)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2326)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2327)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2328)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2329) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2330)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2331)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2332)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2333)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2334) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2335)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2336) //    
416948f0cda (Senula88             2024-06-16 20:56:04 +0530  2337)         temMap.put("billType", BillType.OpdBathcBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2338)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2339)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2340)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2341) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2342)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2343)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2344) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2345)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2346) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2347)     public void createTablePharmacyCreditToPayBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2348)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2349) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2350)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2351)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2352)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2353) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2354)         sql = "select b from BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2355)                 + " b.billType in :billTypes "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2356)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2357)                 + " and b.department=:dep "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2358)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2359)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2360)                 + " and (b.netTotal-b.paidAmount)>0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2361)                 + " and b.paymentMethod=:pm ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2362) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2363)         if (getSearchKeyword().getInstitution() != null && !getSearchKeyword().getInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2364)             sql += " and  ((b.toInstitution.name) like :comp )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2365)             temMap.put("comp", "%" + getSearchKeyword().getInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2366)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2367) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2368)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2369)             sql += " and  ((b.toStaff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2370)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2371)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2372) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2373)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2374)             sql += " and  (((b.deptId) like :billNo )or((b.insId) like :billNo ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2375)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2376)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2377) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2378)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2379) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2380)         temMap.put("billTypes", Arrays.asList(new BillType[]{BillType.PharmacyWholeSale, BillType.PharmacySale}));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2381)         temMap.put("pm", PaymentMethod.Credit);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2382)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2383)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2384)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2385)         temMap.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2386) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2387)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2388)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2389) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2390)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2391) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2392)     public void createReturnBhtBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2393)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2394) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2395)         createReturnBhtBills(BillType.PharmacyBhtPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2396) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2397)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2398) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2399)     public void createReturnBhtBillsStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2400)         createReturnBhtBills(BillType.StoreBhtPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2401)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2402) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2403)     public Bill getBill() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2404)         return bill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2405)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2406) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2407)     public void setBill(Bill bill) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2408)         this.bill = bill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2409)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2410) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2411)     private void createReturnBhtBills(BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2412) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2413)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2414)         m.put("bt", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2415)         m.put("billedClass", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2416)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2417)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2418)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2419)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2420) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2421)         sql = "Select b from RefundBill b where  b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2422)                 + " and b.institution=:ins and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2423)                 + " (b.billedBill is null  or type(b.billedBill)=:billedClass ) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2424)                 + " and b.createdAt between :fd and :td"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2425)                 + " and b.billType=:bt ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2426) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2427)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2428)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2429)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2430)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2431) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2432)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2433)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2434)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2435)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2436) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2437)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2438)             sql += " and  ((b.billedBill.deptId) like :rNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2439)             m.put("rNo", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2440)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2441) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2442)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2443)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2444)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2445)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2446) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2447)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2448)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2449)             m.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2450)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2451) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2452)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2453) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2454)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2455) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2456)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2457) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2458)     public void createVariantReportSearch() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2459)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2460) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2461)         String sql = "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2462)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2463) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2464)         sql = "Select b From PreBill b where b.cancelledBill is null  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2465)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2466)                 + " and b.retired=false and b.billType= :bTp ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2467) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2468)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2469)             sql += " and  ((b.department.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2470)             tmp.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2471)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2472) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2473)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2474)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2475)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2476)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2477) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2478)         if (getSearchKeyword().getCategory() != null && !getSearchKeyword().getCategory().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2479)             sql += " and  ((b.category.name) like :cat )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2480)             tmp.put("cat", "%" + getSearchKeyword().getCategory().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2481)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2482) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2483)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2484) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2485)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2486)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2487)         tmp.put("bTp", BillType.PharmacyMajorAdjustment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2488)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2489) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2490)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2491) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2492)     public Department getDepartment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2493)         return department;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2494)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2495) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2496)     public void setDepartment(Department department) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2497)         this.department = department;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2498)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2499) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2500)     public List<Bill> getPrescreptionBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2501)         return prescreptionBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2502)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2503) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2504)     public void setPrescreptionBills(List<Bill> prescreptionBills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2505)         this.prescreptionBills = prescreptionBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2506)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2507) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2508)     public void createPharmacyPrescriptionBillTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2509)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2510) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2511)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2512)         m.put("bt", BillType.PharmacyPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2513)         m.put("rBt", BillType.PharmacySale);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2514)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2515)         m.put("rClass", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2516)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2517)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2518)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2519)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2520)         sql = "Select b from Bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2521)                 + " where b.retired=false and b.createdAt between :fd and :td and b.billType=:bt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2522)                 + " and b.referredBy is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2523)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2524)                 + " and b.referenceBill.billType=:rBt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2525)                 + " and type(b)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2526)                 + " and type(b.referenceBill)=:rClass ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2527) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2528)         if (department != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2529)             sql += " and b.department=:dept ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2530)             m.put("dept", department);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2531)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2532) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2533)         sql += " order by b.createdAt ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2534) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2535)         prescreptionBills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2536) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2537)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2538) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2539)     public void createPharmacyRetailBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2540)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2541) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2542)         createPharmacyRetailBills(BillType.PharmacyPre, true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2543) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2544)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2545) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2546)     public void createPharmacyAddToStockBills() {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2547)         Date startTime = new Date();
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2548)         createPharmacyAddToBills(BillType.PharmacyAddtoStock, true);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2549)         //System.out.println("bills = " + bills);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2550)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2551) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2552)     public void createPharmacyAddToStockAllBills() {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2553)         Date startTime = new Date();
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2554)         createPharmacyAddToBills(BillType.PharmacyAddtoStock, false);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2555)         //System.out.println("Allbills = " + bills);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2556)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2557) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2558)     public void createPharmacyAddToBills(BillType billtype, boolean maxNum) {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2559) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2560)         String sql;
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2561)         Map m = new HashMap();
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2562) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2563)         sql = "Select b from Bill b where "
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2564)                 + " b.createdAt between :fd and :td "
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2565)                 + " and b.billType=:bt"
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2566)                 + " and b.institution=:ins "
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2567)                 + " and b.department=:ldep";
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2568) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2569)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2570)             sql += " and  ((b.deptId) like :billNo )";
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2571)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2572)         }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2573) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2574)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2575)             sql += " and  ((b.department.name) like :dep )";
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2576)             m.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2577)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2578) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2579)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2580)             sql += " and  ((b.netTotal) like :netTotal )";
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2581)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2582)         }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2583) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2584)         sql += " order by b.createdAt desc  ";
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2585) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2586)         m.put("bt", billtype);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2587)         m.put("fd", getFromDate());
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2588)         m.put("td", getToDate());
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2589)         m.put("ins", getSessionController().getInstitution());
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2590)         m.put("ldep", getSessionController().getLoggedUser().getDepartment());
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2591) //    
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2592)         //System.out.println("sql = " + sql);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2593) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2594)         if (maxNum == true) {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2595)             bills = billFacade.findByJpql(sql, m, TemporalType.TIMESTAMP, 25);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2596)         } else {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2597)             bills = billFacade.findByJpql(sql, m, TemporalType.TIMESTAMP);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2598)         }
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2599)         netTotal = 0.0;
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2600)         for (Bill b : bills) {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2601)             netTotal += b.getNetTotal();
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2602)         }
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2603)         //System.out.println("Method_bills = " + bills);
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  2604)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2605) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2606)     public void createPharmacyWholesaleBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2607)         createPharmacyRetailBills(BillType.PharmacyWholesalePre, true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2608)     }
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530  2609) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2610)     public void createPharmacyWholeTableRe() {
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2611)         Date startTime = new Date();
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2612) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2613)         Map m = new HashMap();
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2614)         m.put("bt", BillType.PharmacyWholesalePre);
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2615)         //     m.put("class", PreBill.class);
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2616)         m.put("fd", getFromDate());
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2617)         m.put("td", getToDate());
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2618)         m.put("ret", false);
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2619)         m.put("ins", getSessionController().getInstitution());
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2620)         String sql;
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2621) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2622)         sql = "Select b from Bill b where "
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2623)                 + " b.createdAt between :fd and :td "
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2624)                 + " and b.billType=:bt "
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2625)                 + " and b.retired=:ret "
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2626)                 + " and b.institution=:ins";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2627)         //+ " and type(b)=:class ";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2628) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2629)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2630)             sql += " and  ((b.patient.person.name) like :patientName )";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2631)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2632)         }
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2633) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2634)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2635)             sql += " and  ((b.deptId) like :billNo )";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2636)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2637)         }
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2638) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2639)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2640)             sql += " and  ((b.department.name) like :dep )";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2641)             m.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2642)         }
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2643) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2644)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2645)             sql += " and  ((b.netTotal) like :netTotal )";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2646)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2647)         }
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2648) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2649)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2650)             sql += " and  ((b.total) like :total )";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2651)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2652)         }
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2653) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2654)         sql += " order by b.createdAt desc  ";
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2655) //    
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2656)         //     //////System.out.println("sql = " + sql);
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2657)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2658) 
18301975421 (DamithDeshan         2024-03-05 21:30:18 +0530  2659)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2660) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2661)     public void createPharmacyRetailAllBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2662)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2663) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2664)         createPharmacyRetailBills(BillType.PharmacyPre, false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2665) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2666)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2667) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2668)     public void createPharmacyWholesaleAllBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2669)         createPharmacyRetailBills(BillType.PharmacyWholesalePre, false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2670)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2671) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2672)     public void createPharmacyRetailBills(BillType billtype, boolean maxNum) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2673) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2674)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2675)         m.put("bt", billtype);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2676)         //   m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2677)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2678)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2679)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2680)         m.put("ldep", getSessionController().getLoggedUser().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2681)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2682) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2683)         sql = "Select b from PreBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2684)                 + " b.createdAt between :fd and :td "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2685)                 + " and b.billType=:bt"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2686)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2687)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2688)                 + " and b.department=:ldep";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2689)         //  + " and type(b)=:class ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2690) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2691)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2692)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2693)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2694)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2695) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2696)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2697)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2698)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2699)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2700) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2701)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2702)             sql += " and  ((b.department.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2703)             m.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2704)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2705) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2706)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2707)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2708)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2709)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2710) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2711)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2712)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2713)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2714)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2715)         if (getPaymentMethod() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2716)             sql += " and b.paymentMethod=:pay ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2717)             m.put("pay", paymentMethod);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2718)         }
e9e624a9057 (DamithDeshan         2024-04-15 18:07:53 +0530  2719)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
e9e624a9057 (DamithDeshan         2024-04-15 18:07:53 +0530  2720)             sql += " and  ((b.patient.person.phone) like :phone )";
e9e624a9057 (DamithDeshan         2024-04-15 18:07:53 +0530  2721)             m.put("phone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
e9e624a9057 (DamithDeshan         2024-04-15 18:07:53 +0530  2722)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2723) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2724)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2725) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2726)         //     //////System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2727) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2728)         if (maxNum == true) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2729)             bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2730)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2731)             bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2732)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2733)         netTotal = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2734)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2735)             netTotal += b.getNetTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2736)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2737)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2738) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2739)     public String searchMyPharmacyBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2740)         BillType billtype = BillType.PharmacyPre;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2741)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2742)         if (false) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2743)             Bill b = new Bill();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2744)             b.getPatient().getPerson();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2745)             sessionController.getLoggedUser().getWebUserPerson();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2746)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2747)         sql = "Select b from PreBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2748)                 + " b.billType=:bt"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2749)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2750)                 + " and b.patient.person=:person";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2751)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2752)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2753)         m.put("bt", billtype);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2754)         m.put("person", sessionController.getLoggedUser().getWebUserPerson());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2755) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2756)         boolean maxNum = true;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2757)         if (maxNum == true) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2758)             bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2759)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2760)             bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2761)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2762)         netTotal = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2763)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2764)             netTotal += b.getNetTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2765)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2766) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2767)         return "/mobile/my_pharmacy_bills";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2768)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2769) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2770)     double netTotalValue;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2771) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2772)     public void createPharmacyStaffBill() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2773)         FacesContext context = FacesContext.getCurrentInstance();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2774)         HttpServletRequest request = (HttpServletRequest) context.getExternalContext().getRequest();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2775)         ServletContext servletContext = (ServletContext) context.getExternalContext().getContext();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2776) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2777)         String url = request.getRequestURL().toString();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2778) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2779)         String ipAddress = request.getRemoteAddr();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2780) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2781)         AuditEvent auditEvent = new AuditEvent();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2782)         auditEvent.setEventStatus("Started");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2783)         long duration;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2784)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2785)         auditEvent.setEventDataTime(startTime);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2786)         if (sessionController != null && sessionController.getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2787)             auditEvent.setDepartmentId(sessionController.getDepartment().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2788)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2789) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2790)         if (sessionController != null && sessionController.getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2791)             auditEvent.setInstitutionId(sessionController.getInstitution().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2792)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2793)         if (sessionController != null && sessionController.getLoggedUser() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2794)             auditEvent.setWebUserId(sessionController.getLoggedUser().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2795)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2796)         auditEvent.setUrl(url);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2797)         auditEvent.setIpAddress(ipAddress);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2798)         auditEvent.setEventTrigger("createPharmacyStaffBill()");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2799)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2800) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2801)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2802)         m.put("bt", BillType.PharmacyPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2803)         //   m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2804)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2805)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2806)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2807)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2808) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2809)         sql = "Select b from PreBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2810)                 + " b.createdAt between :fd and :td "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2811)                 + " and b.billType=:bt"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2812)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2813)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2814)                 + " and b.toStaff is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2815)                 + " order by b.createdAt ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2816) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2817)         //     //////System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2818)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2819) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2820)         netTotalValue = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2821)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2822)             netTotalValue += b.getNetTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2823)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2824)         Date endTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2825)         duration = endTime.getTime() - startTime.getTime();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2826)         auditEvent.setEventDuration(duration);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2827)         auditEvent.setEventStatus("Completed");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2828)         auditEventApplicationController.logAuditEvent(auditEvent);
c34a04f4b7f (Senula88             2023-10-10 20:34:41 +0530  2829) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2830)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2831) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2832)     public void createPharmacyTableRe() {
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2833)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2834)         String sql;
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2835)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2836) 
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2837)         sql = "select b from PreBill b "
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2838)                 + " where b.billTypeAtomic = :billTypeAtomic "
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2839)                 + " and b.institution=:ins "
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2840)                 + " and b.billedBill is null "
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2841)                 + " and b.createdAt between :fromDate and :toDate"
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2842)                 + " and b.retired=false "
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2843)                 + " and b.deptId is not null "
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2844)                 + " and b.cancelled=false";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2845) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2846)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2847)             sql += " and  ((b.patient.person.name) like :patientName )";
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2848)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2849)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2850) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2851)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2852)             sql += " and  ((b.deptId) like :billNo )";
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2853)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2854)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2855) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2856)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2857)             sql += " and  ((b.department.name) like :dep )";
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2858)             temMap.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2859)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2860) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2861)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2862)             sql += " and  ((b.netTotal) like :netTotal )";
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2863)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2864)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2865) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2866)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2867)             sql += " and  ((b.total) like :total )";
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2868)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2869)         }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  2870) 
8ed07b3bfde (DamithDeshan         2024-04-15 18:19:12 +0530  2871)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
8ed07b3bfde (DamithDeshan         2024-04-15 18:19:12 +0530  2872)             sql += " and  ((b.patient.person.phone) like :phone )";
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2873)             temMap.put("phone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
8ed07b3bfde (DamithDeshan         2024-04-15 18:19:12 +0530  2874)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2875)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2876) //    
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2877)         temMap.put("billTypeAtomic", BillTypeAtomic.PHARMACY_RETAIL_SALE_PRE_TO_SETTLE_AT_CASHIER);
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2878)         temMap.put("toDate", getToDate());
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2879)         temMap.put("fromDate", getFromDate());
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2880)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2881) 
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2882)         //System.err.println("Sql " + sql);
0096fe76ad9 (Senula88             2024-05-23 10:50:02 +0530  2883)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  2884) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2885)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2886) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2887)     public void listPharmacyIssue() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2888)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2889) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2890)         listPharmacyPreBills(BillType.PharmacyIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2891) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2892)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2893) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2894)     public void listStoreIssue() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2895)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2896)         listPharmacyPreBills(BillType.StoreIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2897) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2898)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2899) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2900)     public void listPharmacyCancelled() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2901)         listPharmacyCancelledBills(BillType.PharmacyIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2902)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2903) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2904)     public void listPharmacyReturns() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2905)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2906) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2907)         listPharmacyStoreReturnedBills(BillType.PharmacyIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2908) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2909)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2910) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2911)     public void listStoreReturns() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2912)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2913)         listPharmacyStoreReturnedBills(BillType.StoreIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2914) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2915)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2916) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2917)     public void listPharmacyBilledBills(BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2918)         listPharmacyBills(bt, BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2919)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2920) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2921)     public void listPharmacyPreBills(BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2922)         listPharmacyBills(bt, PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2923)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2924) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2925)     public void listPharmacyCancelledBills(BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2926)         listPharmacyBills(bt, CancelledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2927)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2928) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2929)     public void listPharmacyStoreReturnedBills(BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2930)         listReturnBills(bt, RefundBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2931)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2932) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2933)     public ServiceSession getSelectedServiceSession() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2934)         return selectedServiceSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2935)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2936) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2937)     public void setSelectedServiceSession(ServiceSession selectedServiceSession) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2938)         this.selectedServiceSession = selectedServiceSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2939)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2940) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2941)     public Staff getCurrentStaff() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2942)         return currentStaff;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2943)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2944) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2945)     public void setCurrentStaff(Staff currentStaff) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2946)         this.currentStaff = currentStaff;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2947)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2948) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2949)     public void listPharmacyBills(BillType bt, Class bc) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2950) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2951)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2952)         m.put("bt", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2953)         m.put("class", bc);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2954)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2955)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2956)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2957)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2958) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2959)         sql = "Select b from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2960)                 + " b.createdAt between :fd and :td "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2961)                 + " and b.billType=:bt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2962)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2963)                 + " and type(b)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2964)                 + " and b.billedBill is null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2965) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2966)         if (getSearchKeyword().getRequestNo() != null && !getSearchKeyword().getRequestNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2967)             sql += " and  ((b.invoiceNumber) like :requestNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2968)             m.put("requestNo", "%" + getSearchKeyword().getRequestNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2969)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2970) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2971)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2972)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2973)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2974)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2975) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2976)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2977)             sql += " and  ((b.department.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2978)             m.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2979)         }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  2980) 
ab7ac844acc (DamithDeshan         2024-08-05 16:29:39 +0530  2981)         if (getSearchKeyword().getToDepartment() != null && !getSearchKeyword().getToDepartment().trim().equals("")) {
ab7ac844acc (DamithDeshan         2024-08-05 16:29:39 +0530  2982)             sql += " and  ((b.toDepartment.name) like :dep )";
ab7ac844acc (DamithDeshan         2024-08-05 16:29:39 +0530  2983)             m.put("dep", "%" + getSearchKeyword().getToDepartment().trim().toUpperCase() + "%");
ab7ac844acc (DamithDeshan         2024-08-05 16:29:39 +0530  2984)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2985) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2986)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2987)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2988)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2989)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2990) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2991)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2992)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2993)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2994)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2995) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2996)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2997) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  2998)         //     //////System.out.println("sql = " + sql);
178bfb1826e (Senula88             2024-05-20 18:06:45 +0530  2999)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3000) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3001)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3002) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3003)     public void listReturnBills(BillType bt, Class bc) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3004) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3005)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3006)         m.put("bt", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3007)         m.put("class", bc);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3008)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3009)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3010)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3011)         m.put("dept", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3012)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3013) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3014)         sql = "Select b from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3015)                 + " b.createdAt between :fd and :td "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3016)                 + " and b.billType=:bt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3017)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3018)                 + " and b.department=:dept "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3019)                 + " and type(b)=:class ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3020) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3021)         if (getSearchKeyword().getRequestNo() != null && !getSearchKeyword().getRequestNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3022)             sql += " and  ((b.invoiceNumber) like :requestNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3023)             m.put("requestNo", "%" + getSearchKeyword().getRequestNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3024)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3025) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3026)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3027)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3028)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3029)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3030) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3031)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3032)             sql += " and  ((b.department.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3033)             m.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3034)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3035) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3036)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3037)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3038)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3039)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3040) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3041)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3042)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3043)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3044)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3045) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3046)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3047) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3048)         //     //////System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3049)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3050) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3051)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3052) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3053)     public void createPharmacyTableBht() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3054)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3055) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3056)         createTableBht(BillType.PharmacyBhtPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3057) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3058)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3059) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3060)     public void createStoreTableIssue() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3061)         createTableBht(BillType.StoreIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3062)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3063) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3064)     public void createStoreTableBht() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3065)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3066)         createTableBht(BillType.StoreBhtPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3067) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3068)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3069) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3070)     public void createTableBht(BillType btp) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3071) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3072)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3073)         m.put("bt", btp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3074)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3075)         m.put("fd", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3076)         m.put("td", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3077)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3078)         m.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3079)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3080) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3081)         sql = "Select b from Bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3082)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3083)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3084)                 + " and b.createdAt between :fd and :td "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3085)                 + " and b.billType=:bt"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3086)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3087)                 + " and b.department=:dep "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3088)                 + " and type(b)=:class ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3089) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3090)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3091)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3092)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3093)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3094) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3095)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3096)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3097)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3098)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3099) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3100)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3101)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3102)             m.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3103)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3104) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3105)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3106)             sql += " and  ((b.department.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3107)             m.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3108)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3109) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3110)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3111)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3112)             m.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3113)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3114) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3115)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3116)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3117)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3118)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3119) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3120)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3121) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3122)         //     //////System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3123)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3124) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3125)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3126) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3127)     public void createIssueTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3128)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3129) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3130)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3131)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3132)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3133)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3134)         tmp.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3135)         tmp.put("bTp", BillType.PharmacyTransferIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3136)         sql = "Select b From BilledBill b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3137)                 + " b.toDepartment=:dep and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3138)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3139) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3140)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3141)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3142)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3143)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3144) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3145)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3146)             sql += " and  ((b.toStaff.person.name) like :stf )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3147)             tmp.put("stf", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3148)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3149) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3150)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3151)             sql += " and  ((b.department.name) like :fDep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3152)             tmp.put("fDep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3153)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3154) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3155)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3156) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3157)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3158) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3159)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3160)             b.setTmpRefBill(getRefBill(b));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3161) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3162)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3163) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3164)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3165) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3166)     public void createIssueReport1() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3167)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3168)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3169)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3170)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3171)         //tmp.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3172)         tmp.put("bTp", BillType.PharmacyTransferIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3173)         sql = "Select b From BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3174)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3175)                 //+ " and b.toDepartment=:dep "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3176)                 + " and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3177)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3178) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3179)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3180)             sql += " and  ((b.toStaff.person.name) like :stf )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3181)             tmp.put("stf", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3182)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3183) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3184)         if (getSearchKeyword().getFrmDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3185)             sql += " and b.department=:frmdep";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3186)             tmp.put("frmdep", getSearchKeyword().getFrmDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3187)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3188) 
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  3189)         if (getSearchKeyword().getToDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3190)             sql += " and b.toDepartment=:tdep";
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  3191)             tmp.put("tdep", getSearchKeyword().getToDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3192)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3193) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3194)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3195) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3196)         List<Bill> list = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3197)         bills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3198)         netTotalValue = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3199)         for (Bill b : list) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3200) //            ////System.out.println("b = ");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3201) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3202)             Bill refBill = getActiveRefBill(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3203)             if (refBill == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3204)                 ////System.out.println("b = " + refBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3205)                 netTotalValue += b.getNetTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3206)                 bills.add(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3207)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3208)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3209) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3210)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3211) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3212)     public void createIssuePharmacyReport() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3213)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3214) //        fetchPharmacyBills(BillType.PharmacyTransferIssue, BillType.PharmacyTransferReceive);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3215)         fetchPharmacyBillsNew(BillType.PharmacyTransferIssue, BillType.PharmacyTransferReceive);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3216) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3217)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3218) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3219)     public void createIssueStoreReport() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3220)         fetchPharmacyBills(BillType.StoreTransferIssue, BillType.StoreTransferReceive);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3221)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3222) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3223)     public void createPoNotPharmacyApproveReport() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3224)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3225) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3226)         fetchPharmacyBills(BillType.PharmacyOrder, BillType.PharmacyAdjustment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3227) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3228)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3229) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3230)     public void createPoNotStoreApproveReport() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3231)         fetchPharmacyBills(BillType.StoreOrder, BillType.StoreOrderApprove);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3232)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3233) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3234)     public void fetchPharmacyBills(BillType billType, BillType billType2) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3235)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3236)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3237)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3238)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3239)         //tmp.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3240)         tmp.put("bTp", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3241)         sql = "Select b From BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3242)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3243)                 //+ " and b.toDepartment=:dep "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3244)                 + " and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3245)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3246) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3247)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3248)             sql += " and  ((b.toStaff.person.name) like :stf )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3249)             tmp.put("stf", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3250)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3251) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3252)         if (getSearchKeyword().getFrmDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3253)             sql += " and b.department=:frmdep";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3254)             tmp.put("frmdep", getSearchKeyword().getFrmDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3255)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3256) 
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  3257)         if (getSearchKeyword().getToDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3258)             sql += " and b.toDepartment=:tdep";
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  3259)             tmp.put("tdep", getSearchKeyword().getToDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3260)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3261) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3262)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3263) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3264)         List<Bill> list = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3265)         bills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3266)         netTotalValue = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3267)         for (Bill b : list) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3268) //            ////System.out.println("b = ");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3269) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3270)             Bill refBill = getActiveRefBillnotApprove(b, billType2);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3271)             if (refBill == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3272)                 ////System.out.println("b = " + refBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3273)                 netTotalValue += b.getNetTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3274)                 bills.add(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3275)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3276)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3277) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3278)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3279) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3280)     public void fetchPharmacyBillsNew(BillType billType, BillType billType2) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3281)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3282)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3283)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3284)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3285)         //tmp.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3286)         tmp.put("bTp", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3287)         sql = "Select b From BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3288)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3289)                 + " and b.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3290)                 + " and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3291)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3292) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3293)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3294)             sql += " and  ((b.toStaff.person.name) like :stf )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3295)             tmp.put("stf", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3296)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3297) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3298)         if (getSearchKeyword().getFrmDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3299)             sql += " and b.department=:frmdep";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3300)             tmp.put("frmdep", getSearchKeyword().getFrmDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3301)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3302) 
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  3303)         if (getSearchKeyword().getToDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3304)             sql += " and b.toDepartment=:tdep";
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  3305)             tmp.put("tdep", getSearchKeyword().getToDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3306)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3307) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3308)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3309) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3310)         List<Bill> list = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3311)         bills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3312)         netTotalValue = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3313)         for (Bill b : list) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3314) //            ////System.out.println("b = ");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3315) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3316)             Bill refBill = getActiveRefBillnotApprove(b, billType2);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3317)             if (refBill == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3318)                 ////System.out.println("b = " + refBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3319)                 netTotalValue += b.getNetTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3320)                 bills.add(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3321)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3322)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3323) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3324)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3325) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3326)     public void createIssueTableStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3327)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3328) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3329)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3330)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3331)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3332)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3333)         tmp.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3334)         tmp.put("bTp", BillType.StoreTransferIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3335)         sql = "Select b From BilledBill b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3336)                 + " b.toDepartment=:dep and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3337)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3338) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3339)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3340)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3341)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3342)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3343) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3344)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3345)             sql += " and  ((b.toStaff.person.name) like :stf )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3346)             tmp.put("stf", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3347)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3348) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3349)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3350)             sql += " and  ((b.department.name) like :fDep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3351)             tmp.put("fDep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3352)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3353) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3354)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3355) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3356)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3357) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3358)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3359)             b.setTmpRefBill(getRefBill(b));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3360) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3361)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3362) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3363)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3364) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3365)     private Bill getRefBill(Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3366)         String sql = "Select b From Bill b where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3367)                 + " and b.cancelled=false and b.billType=:btp and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3368)                 + " b.referenceBill=:ref";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3369)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3370)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3371)         hm.put("btp", BillType.PharmacyTransferReceive);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3372)         return getBillFacade().findFirstByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3373)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3374) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3375)     private Bill getActiveRefBill(Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3376)         String sql = "Select b From BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3377)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3378)                 + " and b.cancelled=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3379)                 + "  and b.billType=:btp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3380)                 + " and b.backwardReferenceBill=:ref";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3381)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3382)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3383)         hm.put("btp", BillType.PharmacyTransferReceive);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3384)         return getBillFacade().findFirstByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3385)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3386) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3387)     private Bill getActiveRefBillnotApprove(Bill b, BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3388)         String sql = "Select b From BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3389)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3390)                 + " and b.cancelled=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3391)                 + "  and b.billType=:btp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3392)                 + " and b.backwardReferenceBill=:ref";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3393)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3394)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3395)         hm.put("btp", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3396)         return getBillFacade().findFirstByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3397)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3398) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3399)     public void makeNull() {
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3400)         fromDate = null;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3401)         toDate = null;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3402)         department = null;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3403)         departments = null;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3404)         institution = null;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3405)         paymentMethod = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3406)         searchKeyword = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3407)         bills = null;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3408)         billSummaryRows = null;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3409)         netTotal = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3410)         discount = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3411)         grossTotal = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3412) 
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3413)         cashTotal = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3414)         cardTotal = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3415)         chequeTotal = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3416)         slipTotal = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3417)         totalOfOtherPayments = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3418)         billCount = 0.0;
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  3419)         totalPaying = 0.0;
3f590552a8b (DamithDeshan         2024-11-20 13:58:35 +0530  3420)         serviceDepartment = null;
3f590552a8b (DamithDeshan         2024-11-20 13:58:35 +0530  3421)         billedDepartment = null;
3f590552a8b (DamithDeshan         2024-11-20 13:58:35 +0530  3422)         visitType = null;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530  3423)         methodType = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3424)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3425) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3426)     public void resetTotals() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3427)         bills = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3428)         billSummaryRows = null;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3429)         netTotal = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3430)         discount = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3431)         grossTotal = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3432) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3433)         cashTotal = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3434)         cardTotal = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3435)         chequeTotal = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3436)         slipTotal = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3437)         totalOfOtherPayments = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3438)         billCount = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3439)         totalPaying = 0.0;
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3440)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530  3441) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3442)     public void createTableByBillType() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3443)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3444) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3445)         if (billType == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3446)             JsfUtil.addErrorMessage("Please Select Bill Type");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3447)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3448) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3449)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3450) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3451)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3452)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3453) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3454)         sql = "select b from Bill b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3455)                 + " (type(b)=:class1 or type(b)=:class2) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3456)                 + " and b.department=:dep and b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3457)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3458) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3459)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3460)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3461)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3462)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3463) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3464)         if (getSearchKeyword().getRequestNo() != null && !getSearchKeyword().getRequestNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3465)             sql += " and  ((b.insId) like :requestNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3466)             temMap.put("requestNo", "%" + getSearchKeyword().getRequestNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3467)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3468) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3469)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3470)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3471)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3472)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3473) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3474)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3475)             sql += " and  ((b.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3476)             temMap.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3477)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3478) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3479)         if (getSearchKeyword().getFromDepartment() != null && !getSearchKeyword().getFromDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3480)             sql += " and  ((b.fromDepartment.name) like :frmDept )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3481)             temMap.put("frmDept", "%" + getSearchKeyword().getFromDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3482)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3483) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3484)         if (getSearchKeyword().getToInstitution() != null && !getSearchKeyword().getToInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3485)             sql += " and  ((b.toInstitution.name) like :toIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3486)             temMap.put("toIns", "%" + getSearchKeyword().getToInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3487)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3488) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3489)         if (getSearchKeyword().getToDepartment() != null && !getSearchKeyword().getToDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3490)             sql += " and  ((b.toDepartment.name) like :toDept )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3491)             temMap.put("toDept", "%" + getSearchKeyword().getToDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3492)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3493) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3494)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3495)             sql += " and  ((b.referenceBill.deptId) like :refId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3496)             temMap.put("refId", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3497)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3498) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3499)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3500)             sql += " and  ((b.invoiceNumber) like :inv )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3501)             temMap.put("inv", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3502)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3503) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3504)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3505)             sql += " and b.id in (select bItem.bill.id  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3506)                     + " from BillItem bItem where bItem.retired=false and  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3507)                     + " ((bItem.item.name) like :itm ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3508)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3509)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3510) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3511)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3512)             sql += " and b.id in (select bItem.bill.id  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3513)                     + " from BillItem bItem where bItem.retired=false and  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3514)                     + " ((bItem.item.code) like :cde ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3515)             temMap.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3516)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3517) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3518)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3519) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3520)         temMap.put("class1", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3521)         temMap.put("class2", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3522)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3523)         temMap.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3524)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3525)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3526)         //temMap.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3527)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, maxResult);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3528)         //     //System.err.println("SIZE : " + lst.size());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3529) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3530)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3531) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3532)     public void createGRNRegistory() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3533)         FacesContext context = FacesContext.getCurrentInstance();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3534)         HttpServletRequest request = (HttpServletRequest) context.getExternalContext().getRequest();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3535)         ServletContext servletContext = (ServletContext) context.getExternalContext().getContext();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3536) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3537)         String url = request.getRequestURL().toString();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3538) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3539)         String ipAddress = request.getRemoteAddr();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3540) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3541)         AuditEvent auditEvent = new AuditEvent();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3542)         auditEvent.setEventStatus("Started");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3543)         long duration;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3544)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3545)         auditEvent.setEventDataTime(startTime);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3546)         if (sessionController != null && sessionController.getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3547)             auditEvent.setDepartmentId(sessionController.getDepartment().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3548)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3549) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3550)         if (sessionController != null && sessionController.getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3551)             auditEvent.setInstitutionId(sessionController.getInstitution().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3552)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3553)         if (sessionController != null && sessionController.getLoggedUser() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3554)             auditEvent.setWebUserId(sessionController.getLoggedUser().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3555)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3556)         auditEvent.setUrl(url);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3557)         auditEvent.setIpAddress(ipAddress);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3558)         auditEvent.setEventTrigger("createGRNRegistory()");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3559)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3560) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3561)         if (getReportKeyWord().getDepartment() == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3562)             JsfUtil.addErrorMessage("Select Departmrnt.");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3563)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3564)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3565)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3566)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3567) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3568)         sql = "select b from Bill b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3569)                 + " (type(b)=:class1 or type(b)=:class2) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3570)                 + " and b.department=:dep and b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3571)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3572) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3573)         if (getReportKeyWord().getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3574)             sql += " and  ((b.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3575)             m.put("frmIns", getReportKeyWord().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3576)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3577) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3578)         if (getReportKeyWord().getItem() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3579)             sql += " and b.id in (select bItem.bill.id  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3580)                     + " from BillItem bItem where bItem.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3581)                     + " and bItem.item.name=:itm ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3582)             m.put("itm", getReportKeyWord().getItem());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3583)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3584) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3585)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3586) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3587)         m.put("class1", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3588)         m.put("class2", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3589)         m.put("billType", BillType.PharmacyGrnBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3590)         m.put("dep", getReportKeyWord().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3591)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3592)         m.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3593)         //temMap.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3594)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3595)         //     //System.err.println("SIZE : " + lst.size());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3596)         Date endTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3597)         duration = endTime.getTime() - startTime.getTime();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3598)         auditEvent.setEventDuration(duration);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3599)         auditEvent.setEventStatus("Completed");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3600)         auditEventApplicationController.logAuditEvent(auditEvent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3601) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3602)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3603) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3604)     public void createTableByBillTypeAllDepartment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3605) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3606)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3607)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3608) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3609)         sql = "select b from Bill b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3610)                 + " (type(b)=:class1 or type(b)=:class2) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3611)                 + " and  b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3612)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3613) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3614)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3615)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3616)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3617)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3618) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3619)         if (getSearchKeyword().getRequestNo() != null && !getSearchKeyword().getRequestNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3620)             sql += " and ((b.insId) like :requestNo)";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3621)             temMap.put("requestNo", "%" + getSearchKeyword().getRequestNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3622)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3623) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3624)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3625)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3626)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3627)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3628) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3629)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3630)             sql += " and  ((b.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3631)             temMap.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3632)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3633) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3634)         if (getSearchKeyword().getToInstitution() != null && !getSearchKeyword().getToInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3635)             sql += " and  ((b.toInstitution.name) like :toIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3636)             temMap.put("toIns", "%" + getSearchKeyword().getToInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3637)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3638) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3639)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3640)             sql += " and  ((b.referenceBill.deptId) like :refId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3641)             temMap.put("refId", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3642)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3643) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3644)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3645)             sql += " and  ((b.invoiceNumber) like :inv )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3646)             temMap.put("inv", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3647)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3648) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3649)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3650)             sql += " and b.id in (select bItem.bill.id  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3651)                     + " from BillItem bItem where bItem.retired=false and  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3652)                     + " ((bItem.item.name) like :itm ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3653)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3654)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3655) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3656)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3657)             sql += " and b.id in (select bItem.bill.id  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3658)                     + " from BillItem bItem where bItem.retired=false and  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3659)                     + " ((bItem.item.code) like :cde ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3660)             temMap.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3661)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3662) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3663)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3664) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3665)         temMap.put("class1", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3666)         temMap.put("class2", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3667)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3668)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3669)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3670)         //temMap.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3671)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, maxResult);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3672)         //     //System.err.println("SIZE : " + lst.size());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3673) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3674)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3675) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3676)     public void createRequestTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3677)         Date startTime = new Date();
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3678)         BillClassType[] billClassTypes = {BillClassType.CancelledBill, BillClassType.RefundBill};
4eaa99692da (Senula88             2024-05-13 10:50:00 +0530  3679)         List<BillClassType> bct = Arrays.asList(billClassTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3680) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3681)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3682) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3683)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3684)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3685)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3686)         tmp.put("toDep", getSessionController().getDepartment());
4eaa99692da (Senula88             2024-05-13 10:50:00 +0530  3687)         tmp.put("bct", bct);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3688)         tmp.put("bTp", BillType.PharmacyTransferRequest);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3689) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3690)         sql = "Select b From Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3691)                 + " b.retired=false and  b.toDepartment=:toDep"
4eaa99692da (Senula88             2024-05-13 10:50:00 +0530  3692)                 + " and b.billClassType not in :bct"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3693)                 + " and b.billType= :bTp and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3694) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3695)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3696)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3697)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3698)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3699) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3700)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3701)             sql += " and  ((b.department.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3702)             tmp.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3703)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3704) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3705)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3706) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3707)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3708) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3709)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3710)             b.setListOfBill(getIssudBills(b));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3711)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3712) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3713)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3714) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3715)     public void createInwardBHTRequestTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3716)         Date startTime = new Date();
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530  3717)         BillClassType[] billClassTypes = {BillClassType.CancelledBill, BillClassType.RefundBill};
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3718)         List<BillClassType> bct = Arrays.asList(billClassTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3719) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3720)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3721) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3722)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3723)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3724)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3725)         tmp.put("dep", getSessionController().getDepartment());
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3726)         tmp.put("bct", bct);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3727)         tmp.put("bTp", BillType.InwardPharmacyRequest);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3728) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3729)         sql = "Select b From Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3730)                 + " b.retired=false and  b.department=:dep "
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3731)                 + " and b.billClassType not in :bct"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3732)                 + " and b.billType= :bTp and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3733) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3734)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3735)             sql += " and (((b.insId) like :billNo ) or ((b.deptId) like :billNo )) ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3736)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3737)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3738) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3739)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3740)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3741)             tmp.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3742)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3743) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3744)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3745) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3746)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3747) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3748)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3749)             b.setListOfBill(getBHTIssudBills(b));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3750)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3751) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3752)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3753) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3754)     public void createInwardBHTForIssueTableAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3755)         createInwardBHTForIssueTable(null);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3756)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3757) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3758)     public void createInwardBHTForNotIssueTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3759)         createInwardBHTForIssueTable(true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3760)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3761) 
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3762)     public String navigateToIssueForBhtRequests() {
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3763)         bills = createInwardPharmacyRequests();
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3764)         return "/ward/issue_for_bht_request_list";
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3765)     }
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3766) 
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3767)     public List<Bill> createInwardPharmacyRequests() {
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3768)         String sql;
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3769)         HashMap tmp = new HashMap();
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3770)         tmp.put("admission", getPatientEncounter());
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3771)         tmp.put("bTp", BillType.InwardPharmacyRequest);
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3772)         sql = "Select b "
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3773)                 + " From Bill b "
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3774)                 + " where b.retired=false "
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3775)                 + " and  b.toDepartment=:toDep"
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3776)                 + " and b.billType=:bTp "
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3777)                 + " and b.patientEncounter=:admission ";
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3778)         sql += " order by b.createdAt desc  ";
9709c2a1438 (Dr M H B Ariyaratne  2024-02-08 06:37:32 +0530  3779)         return getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 100);
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3780)     }
9adee5d9446 (Dr M H B Ariyaratne  2024-02-06 13:40:29 +0530  3781) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3782)     public void createInwardBHTForIssueOnlyTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3783)         createInwardBHTForIssueTable(false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3784)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3785) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3786)     public void createInwardBHTForIssueTable(Boolean bool) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3787)         Date startTime = new Date();
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3788)         BillClassType[] billClassTypes = {BillClassType.CancelledBill, BillClassType.RefundBill};
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3789)         List<BillClassType> bct = Arrays.asList(billClassTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3790) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3791)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3792) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3793)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3794)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3795)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3796)         tmp.put("toDep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3797)         tmp.put("bTp", BillType.InwardPharmacyRequest);
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3798)         tmp.put("bct", bct);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3799) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3800)         sql = "Select b From Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3801)                 + " b.retired=false and  b.toDepartment=:toDep"
70897861c9b (Senula88             2024-05-15 18:04:14 +0530  3802)                 + " and b.billClassType not in :bct"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3803)                 + " and b.billType= :bTp and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3804) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3805)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3806)             sql += " and (((b.insId) like :billNo ) or ((b.deptId) like :billNo )) ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3807)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3808)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3809) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3810)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3811)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3812)             tmp.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3813)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3814) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3815)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3816) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3817)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 100);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3818) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3819)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3820)             b.setListOfBill(getBHTIssudBills(b));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3821)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3822) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3823)         if (bool != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3824)             List<Bill> bs = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3825)             for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3826)                 if (pharmacySaleBhtController.checkBillComponent(b)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3827)                     bs.add(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3828)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3829)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3830)             if (bool) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3831)                 bills = bs;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3832)             } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3833)                 bills.removeAll(bs);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3834)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3835)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3836) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3837)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3838) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3839)     public long createInwardBHTForIssueBillCount() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3840)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3841) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3842)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3843)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3844)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3845)         tmp.put("toDep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3846)         tmp.put("bTp", BillType.InwardPharmacyRequest);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3847) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3848)         sql = "Select COUNT(b) From Bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3849)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3850)                 + " and b.toDepartment=:toDep "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3851)                 + " and b.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3852)                 + " and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3853)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3854) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3855)         long count = 0l;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3856)         count = getBillFacade().countByJpql(sql, tmp, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3857) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3858)         return count;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3859) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3860)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3861) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3862)     public void createRequestTableStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3863)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3864) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3865)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3866) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3867)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3868)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3869)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3870)         tmp.put("toDep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3871)         tmp.put("bTp", BillType.StoreTransferRequest);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3872) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3873)         sql = "Select b From Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3874)                 + " b.retired=false and  b.toDepartment=:toDep"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3875)                 + " and b.billType= :bTp and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3876) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3877)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3878)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3879)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3880)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3881) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3882)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3883)             sql += " and  ((b.department.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3884)             tmp.put("dep", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3885)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3886) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3887)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3888) 
ef17e1ba6ce (Senula88             2024-06-14 19:50:52 +0530  3889)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP);
ef17e1ba6ce (Senula88             2024-06-14 19:50:52 +0530  3890) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3891)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3892)             b.setListOfBill(getIssudBills(b));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3893)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3894) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3895)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3896) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3897)     public void createListToCashRecieve() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3898)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3899) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3900)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3901)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3902)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3903)         tmp.put("toWeb", getSessionController().getLoggedUser());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3904)         tmp.put("bTp", BillType.CashOut);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3905) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3906)         sql = "Select b From Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3907)                 + " b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3908)                 + " and  b.toWebUser=:toWeb"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3909)                 + " and b.billType= :bTp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3910)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3911) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3912)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3913)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3914)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3915)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3916) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3917)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3918)             sql += " and  ((b.netTotal) like :net )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3919)             tmp.put("net", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3920)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3921) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3922)         if (getSearchKeyword().getPersonName() != null && !getSearchKeyword().getPersonName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3923)             sql += " and  ((b.fromWebUser.webUserPerson.name) like :dep )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3924)             tmp.put("dep", "%" + getSearchKeyword().getPersonName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3925)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3926) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3927)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3928) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3929)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3930) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3931)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3932) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3933)     public void createPharmacyBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3934)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3935) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3936)         createPharmacyBillItemTable(BillType.PharmacyPre, BillType.PharmacySale);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3937) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3938)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3939) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3940)     public void createPharmacyWholeBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3941)         createPharmacyBillItemTable(BillType.PharmacyWholesalePre, BillType.PharmacyWholeSale);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3942)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3943) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3944)     public void createPharmacyBillItemTable(BillType billType, BillType refBillType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3945)         //  searchBillItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3946)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3947)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3948)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3949)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3950)         m.put("bType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3951)         m.put("rBType", refBillType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3952)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3953)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3954)         m.put("rClass", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3955) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3956)         sql = "select bi from BillItem bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3957)                 + " where  type(bi.bill)=:class and type(bi.bill.referenceBill)=:rClass"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3958)                 + " and bi.bill.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3959)                 + " and bi.bill.billType=:bType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3960)                 + " bi.bill.referenceBill.billType=:rBType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3961)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3962) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3963)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3964)             sql += " and  ((bi.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3965)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3966)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3967) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3968)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3969)             sql += " and  ((bi.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3970)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3971)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3972) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3973)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3974)             sql += " and  ((bi.netValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3975)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3976)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3977) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3978)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3979)             sql += " and  ((bi.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3980)             m.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3981)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3982) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3983)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3984)             sql += " and  ((bi.item.code) like :cde )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3985)             m.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3986)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3987) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3988)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3989) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3990)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3991) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3992)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3993) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3994)     public void createPharmacyIssueBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3995)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3996)         //  searchBillItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3997)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3998)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  3999)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4000)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4001)         m.put("bType", BillType.PharmacyIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4002)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4003)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4004) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4005)         sql = "select bi from BillItem bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4006)                 + " where  type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4007)                 + " and bi.bill.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4008)                 + " and bi.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4009)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4010) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4011)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4012)             sql += " and  ((bi.bill.toDepartment.name) like :deptName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4013)             m.put("deptName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4014)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4015) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4016)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4017)             sql += " and  ((bi.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4018)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4019)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4020) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4021)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4022)             sql += " and  ((bi.netValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4023)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4024)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4025) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4026)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4027)             sql += " and  ((bi.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4028)             m.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4029)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4030) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4031)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4032)             sql += " and  ((bi.item.code) like :cde )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4033)             m.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4034)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4035) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4036)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4037) 
9ca0ae3d4f8 (DamithDeshan         2024-07-23 20:28:31 +0530  4038)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4039) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4040)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4041) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4042)     public void createStoreIssueBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4043)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4044)         //  searchBillItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4045)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4046)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4047)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4048)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4049)         m.put("bType", BillType.StoreIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4050)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4051)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4052) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4053)         sql = "select bi from BillItem bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4054)                 + " where  type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4055)                 + " and bi.bill.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4056)                 + " and bi.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4057)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4058) 
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  4059)         if (getSearchKeyword().getToDepartment() != null && !getSearchKeyword().getToDepartment().trim().equals("")) {
2ca0f31889a (DamithDeshan         2024-08-05 18:00:31 +0530  4060)             sql += " and  ((bi.bill.toDepartment.name) like :todept )";
2ca0f31889a (DamithDeshan         2024-08-05 18:00:31 +0530  4061)             m.put("todept", "%" + getSearchKeyword().getToDepartment().trim().toUpperCase() + "%");
2ca0f31889a (DamithDeshan         2024-08-05 18:00:31 +0530  4062)         }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  4063) 
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  4064)         if (getSearchKeyword().getFromDepartment() != null && !getSearchKeyword().getFromDepartment().trim().equals("")) {
2ca0f31889a (DamithDeshan         2024-08-05 18:00:31 +0530  4065)             sql += " and  ((bi.bill.fromDepartment.name) like :fromdept )";
2ca0f31889a (DamithDeshan         2024-08-05 18:00:31 +0530  4066)             m.put("fromdept", "%" + getSearchKeyword().getFromDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4067)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4068) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4069)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4070)             sql += " and  ((bi.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4071)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4072)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4073) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4074)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4075)             sql += " and  ((bi.netValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4076)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4077)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4078) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4079)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4080)             sql += " and  ((bi.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4081)             m.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4082)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4083) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4084)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4085)             sql += " and  ((bi.item.code) like :cde )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4086)             m.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4087)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4088) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4089)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4090) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4091)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4092) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4093)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4094) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4095)     public void createErronousStoreIssueBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4096) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4097)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4098)         //  searchBillItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4099)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4100)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4101)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4102)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4103)         m.put("bType", BillType.StoreIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4104)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4105)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4106) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4107)         sql = "select bi from BillItem bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4108)                 + " where  type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4109)                 + " and bi.bill.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4110)                 + " and bi.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4111)                 + " and bi.item.retired=true "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4112)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4113) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4114)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4115)             sql += " and  ((bi.bill.toDepartment.name) like :deptName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4116)             m.put("deptName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4117)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4118) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4119)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4120)             sql += " and  ((bi.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4121)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4122)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4123) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4124)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4125)             sql += " and  ((bi.netValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4126)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4127)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4128) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4129)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4130)             sql += " and  ((bi.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4131)             m.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4132)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4133) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4134)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4135)             sql += " and  ((bi.item.code) like :cde )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4136)             m.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4137)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4138) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4139)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4140) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4141)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4142) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4143)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4144) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4145)     public void createPharmacyAdjustmentBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4146)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4147)         String sql;
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4148)         Map<String, Object> m = new HashMap<>();
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4149) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4150)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4151)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4152)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4153)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4154) 
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4155)         // Set bill types individually
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4156)         m.put("bType1", BillType.PharmacyAdjustment);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4157)         m.put("bType2", BillType.PharmacyAdjustmentDepartmentStock);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4158)         m.put("bType3", BillType.PharmacyAdjustmentDepartmentSingleStock);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4159)         m.put("bType4", BillType.PharmacyAdjustmentStaffStock);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4160)         m.put("bType5", BillType.PharmacyAdjustmentSaleRate);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4161)         m.put("bType6", BillType.PharmacyAdjustmentWholeSaleRate);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4162)         m.put("bType7", BillType.PharmacyAdjustmentPurchaseRate);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4163)         m.put("bType8", BillType.PharmacyAdjustmentExpiryDate);
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4164) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4165)         sql = "select bi from BillItem bi"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4166)                 + " where type(bi.bill) = :class "
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4167)                 + " and bi.bill.institution = :ins"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4168)                 + " and (bi.bill.billType = :bType1"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4169)                 + " or bi.bill.billType = :bType2"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4170)                 + " or bi.bill.billType = :bType3"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4171)                 + " or bi.bill.billType = :bType4"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4172)                 + " or bi.bill.billType = :bType5"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4173)                 + " or bi.bill.billType = :bType6"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4174)                 + " or bi.bill.billType = :bType7"
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4175)                 + " or bi.bill.billType = :bType8)"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4176)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4177) 
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4178)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().isEmpty()) {
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4179)             sql += " and (bi.bill.deptId) like :billNo ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4180)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4181)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4182) 
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4183)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().isEmpty()) {
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4184)             sql += " and (bi.item.name) like :itm ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4185)             m.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4186)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4187) 
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4188)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().isEmpty()) {
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4189)             sql += " and (bi.item.code) like :cde ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4190)             m.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4191)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4192) 
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  4193)         sql += " order by bi.id desc";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4194) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4195)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4196) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4197)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4198) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4199)     public void createPharmacyAdjustmentBillItemTableForStockTaking() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4200)         fetchAdjustmentBillItemTableForStockTaking(BillType.PharmacyAdjustment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4201)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4202) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4203)     public void createStoreAdjustmentBillItemTableForStockTaking() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4204)         fetchAdjustmentBillItemTableForStockTaking(BillType.StoreAdjustment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4205)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4206) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4207)     private void fetchAdjustmentBillItemTableForStockTaking(BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4208)         pharmacyAdjustmentRows = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4209) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4210)         if (getReportKeyWord().getDepartment() == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4211)             JsfUtil.addErrorMessage("Please Select Department");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4212)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4213)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4214)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4215)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4216) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4217)         sql = "select bi from BillItem bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4218)                 + " where  type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4219)                 + " and bi.bill.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4220)                 + " and bi.bill.department=:dep "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4221)                 + " and bi.bill.billType=:bType  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4222)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4223) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4224)         if (getReportKeyWord().getCategory() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4225)             sql += " and bi.item.category=:cat ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4226)             m.put("cat", getReportKeyWord().getCategory());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4227)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4228) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4229)         sql += " order by bi.item.name, bi.pharmaceuticalBillItem.stock.itemBatch.id ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4230) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4231)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4232)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4233)         m.put("bType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4234)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4235)         m.put("dep", getReportKeyWord().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4236)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4237) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4238)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4239) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4240)         dueTotal = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4241)         doneTotal = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4242)         netTotal = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4243) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4244)         if (getReportKeyWord().isAdditionalDetails()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4245)             createAdjustmentRow(null, null, billItems);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4246)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4247)             m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4248)             sql = "select s from Stock s "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4249)                     + " where s.department=:d "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4250)                     + " and s.stock>=0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4251)                     + " and s.itemBatch.item.departmentType!=:depty ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4252) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4253)             if (getReportKeyWord().getCategory() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4254)                 sql += " and s.itemBatch.item.category=:cat ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4255)                 m.put("cat", getReportKeyWord().getCategory());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4256)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4257) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4258)             sql += " order by s.itemBatch.item.name,s.itemBatch.id ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4259)             m.put("d", getReportKeyWord().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4260)             m.put("depty", DepartmentType.Inventry);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4261)             List<Stock> stocks = getStockFacade().findByJpql(sql, m);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4262)             for (Stock s : stocks) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4263)                 boolean flag = true;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4264)                 int i = 1;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4265)                 for (BillItem bi : billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4266)                     if (s.equals(bi.getPharmaceuticalBillItem().getStock())) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4267)                         createAdjustmentRow(null, bi, null);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4268)                         flag = false;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4269)                         i++;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4270)                         break;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4271)                     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4272)                     i++;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4273)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4274)                 if (flag) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4275)                     if (s.getStock() > 0) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4276)                         createAdjustmentRow(s, null, null);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4277)                     } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4278)                     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4279)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4280)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4281) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4282)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4283) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4284)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4285) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4286)     public void createAdjustmentRow(Stock s, BillItem bi, List<BillItem> billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4287)         PharmacyAdjustmentRow row;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4288)         if (s != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4289)             row = new PharmacyAdjustmentRow(s.getItemBatch().getItem(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4290)                     s.getItemBatch().getPurcahseRate(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4291)                     s.getItemBatch().getRetailsaleRate(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4292)                     s.getStock(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4293)                     s.getStock(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4294)                     0,
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4295)                     s.getItemBatch().getBatchNo(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4296)                     s.getItemBatch().getDateOfExpire());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4297)             dueTotal += row.getBefoerVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4298)             doneTotal += row.getAfterVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4299)             netTotal += row.getAdjusetedVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4300)             pharmacyAdjustmentRows.add(row);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4301)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4302)         if (bi != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4303)             row = new PharmacyAdjustmentRow(bi.getItem(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4304)                     bi.getPharmaceuticalBillItem().getStock().getItemBatch().getPurcahseRate(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4305)                     bi.getPharmaceuticalBillItem().getStock().getItemBatch().getRetailsaleRate(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4306)                     bi.getPharmaceuticalBillItem().getStockHistory().getStockQty(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4307)                     bi.getQty(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4308)                     bi.getQty() - bi.getPharmaceuticalBillItem().getStockHistory().getStockQty(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4309)                     bi.getPharmaceuticalBillItem().getStock().getItemBatch().getBatchNo(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4310)                     bi.getPharmaceuticalBillItem().getStock().getItemBatch().getDateOfExpire());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4311)             dueTotal += row.getBefoerVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4312)             doneTotal += row.getAfterVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4313)             netTotal += row.getAdjusetedVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4314)             pharmacyAdjustmentRows.add(row);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4315)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4316)         if (billItems != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4317)             for (BillItem bii : billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4318)                 try {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4319)                     row = new PharmacyAdjustmentRow(bii.getItem(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4320)                             bii.getPharmaceuticalBillItem().getStock().getItemBatch().getPurcahseRate(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4321)                             bii.getPharmaceuticalBillItem().getStock().getItemBatch().getRetailsaleRate(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4322)                             bii.getPharmaceuticalBillItem().getStockHistory().getStockQty(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4323)                             bii.getQty(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4324)                             bii.getQty() - bii.getPharmaceuticalBillItem().getStockHistory().getStockQty(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4325)                             bii.getPharmaceuticalBillItem().getStock().getItemBatch().getBatchNo(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4326)                             bii.getPharmaceuticalBillItem().getStock().getItemBatch().getDateOfExpire());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4327)                     dueTotal += row.getBefoerVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4328)                     doneTotal += row.getAfterVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4329)                     netTotal += row.getAdjusetedVal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4330)                     pharmacyAdjustmentRows.add(row);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4331)                 } catch (Exception e) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4332)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4333)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4334)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4335)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4336) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4337)     public void createStoreAdjustmentBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4338)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4339)         //  searchBillItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4340)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4341)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4342)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4343)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4344)         m.put("bType", BillType.StoreAdjustment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4345)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4346)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4347) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4348)         sql = "select bi from BillItem bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4349)                 + " where  type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4350)                 + " and bi.bill.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4351)                 + " and bi.bill.billType=:bType  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4352)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4353) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4354)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4355)             sql += " and  ((bi.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4356)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4357)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4358) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4359)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4360)             sql += " and  ((bi.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4361)             m.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4362)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4363) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4364)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4365)             sql += " and  ((bi.item.code) like :cde )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4366)             m.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4367)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4368) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4369)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4370) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4371)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4372) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4373)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4374) 
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  4375)     public void createPaymentHistoryTable() {
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  4376)         bills = new ArrayList<>();  // Initialize to avoid null issues
e0f34ee4232 (SandithP2001         2024-10-22 19:22:41 +0530  4377)         List<BillTypeAtomic> bta = new ArrayList<>();
e0f34ee4232 (SandithP2001         2024-10-22 19:22:41 +0530  4378)         bta.add(BillTypeAtomic.SUPPLEMENTARY_INCOME);
0f1e87a06ee (SandithP2001         2024-11-04 09:13:40 +0530  4379)         bta.add(BillTypeAtomic.SUPPLEMENTARY_INCOME_CANCELLED);
e0f34ee4232 (SandithP2001         2024-10-22 19:22:41 +0530  4380)         bta.add(BillTypeAtomic.OPERATIONAL_EXPENSES);
0f1e87a06ee (SandithP2001         2024-11-04 09:13:40 +0530  4381)         bta.add(BillTypeAtomic.OPERATIONAL_EXPENSES_CANCELLED);
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  4382) 
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4383)         String sql = "select bi "
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4384)                 + " from Bill bi "
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4385)                 + " where bi.retired=:ret "
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4386)                 + " and bi.billTypeAtomic IN :bTypeList"
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4387)                 + " and bi.createdAt BETWEEN :fd and :td ";
e0f34ee4232 (SandithP2001         2024-10-22 19:22:41 +0530  4388)         Map<String, Object> m = new HashMap<>();
e0f34ee4232 (SandithP2001         2024-10-22 19:22:41 +0530  4389)         m.put("bTypeList", bta);
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4390)         m.put("ret", false);
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4391)         m.put("fd", fromDate);
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4392)         m.put("td", toDate);
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  4393) 
aff753f5865 (Buddhika Ariyaratne  2024-10-22 20:41:13 +0530  4394)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  4395)     }
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530  4396) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4397)     public void createDrawerAdjustmentTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4398)         //  searchBillItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4399)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4400)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4401)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4402)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4403)         m.put("bType", BillType.DrawerAdjustment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4404)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4405)         m.put("class", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4406) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4407)         sql = "select bi from Bill bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4408)                 + " where  type(bi)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4409)                 + " and bi.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4410)                 + " and bi.billType=:bType  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4411)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4412) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4413)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4414)             sql += " and  ((bi.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4415)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4416)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4417) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4418)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4419) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4420)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4421) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4422)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4423) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4424)     public void createPharmacyBillItemTableIssue() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4425)         createBillItemTableBht(BillType.StoreIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4426)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4427) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4428)     public void createPharmacyBillItemTableBht() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4429)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4430) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4431)         createBillItemTableBht(BillType.PharmacyBhtPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4432) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4433)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4434) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4435)     public void createStoreBillItemTableBht() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4436)         createBillItemTableBht(BillType.StoreBhtPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4437)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4438) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4439)     public List<BillItem> getBillItem() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4440)         return billItem;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4441)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4442) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4443)     public void setBillItem(List<BillItem> billItem) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4444)         this.billItem = billItem;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4445)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4446) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4447)     public void createBillItemTableBht(BillType btp) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4448)         //  searchBillItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4449)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4450)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4451)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4452)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4453)         m.put("bType", btp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4454)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4455)         m.put("class", PreBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4456) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4457)         sql = "select bi from BillItem bi"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4458)                 + " where  type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4459)                 + " and bi.bill.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4460)                 + " and bi.bill.billType=:bType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4461)                 + " bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4462) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4463)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4464)             sql += " and  ((bi.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4465)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4466)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4467) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4468)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4469)             sql += " and  ((bi.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4470)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4471)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4472) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4473)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4474)             sql += " and  ((bi.netValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4475)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4476)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4477) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4478)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4479)             sql += " and  ((bi.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4480)             m.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4481)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4482) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4483)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4484)             sql += " and  ((bi.item.code) like :cde )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4485)             m.put("cde", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4486)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4487) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4488)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4489)             sql += " and  ((bi.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4490)             m.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4491)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4492) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4493)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4494) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4495)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4496) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4497)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4498) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4499)     public void createPoRequestedAndApprovedPharmacy() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4500)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4501) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4502)         createPoRequestedAndApproved(InstitutionType.Dealer, BillType.PharmacyOrder);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4503) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4504)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4505) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4506)     public void createPoRequestedAndApprovedStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4507)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4508)         createPoRequestedAndApproved(InstitutionType.StoreDealor, BillType.StoreOrder);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4509) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4510)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4511) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4512)     public void createPoRequestedAndApproved(InstitutionType institutionType, BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4513)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4514)         String sql = "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4515)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4516) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4517)         sql = "Select b From BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4518)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4519)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4520)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4521)                 + " and b.billType= :bTp  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4522) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4523)         sql += createKeySql(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4524) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4525)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4526) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4527)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4528)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4529)         tmp.put("insTp", institutionType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4530)         tmp.put("bTp", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4531)         bills = getBillFacade().findByJpqlWithoutCache(sql, tmp, TemporalType.TIMESTAMP, maxResult);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4532) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4533)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4534) 
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4535)     public void createShiftShortageBillsTable() {
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4536)         bills = null;
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4537)         bills = new ArrayList<>();
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4538)         String sql;
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4539)         Map m = new HashMap();
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4540) 
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4541)         sql = "Select b From Bill b where "
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4542)                 + " b.createdAt between :fromDate and :toDate "
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4543)                 + " and b.retired=false "
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4544)                 + " and b.billTypeAtomic=:bTA "
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4545)                 + " and b.billType=:bT ";
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4546) 
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  4547)         m.put("fromDate", fromDate);
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4548)         m.put("toDate", toDate);
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4549)         m.put("bTA", BillTypeAtomic.FUND_SHIFT_SHORTAGE_BILL);
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4550)         m.put("bT", BillType.ShiftShortage);
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4551)         bills = getBillFacade().findByJpql(sql, m);
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4552) 
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4553)         if (bills == null || bills.isEmpty()) {
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4554)             System.err.println("No bills found");
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4555)         } else {
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4556)             System.err.println("Bills found: " + bills.size());
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4557)         }
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4558) 
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4559)     }
dc4ae62d679 (Pubudu-Piyankara     2024-10-05 12:22:52 +0530  4560) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4561)     public void createApprovedPharmacy() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4562)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4563) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4564)         createApproved(InstitutionType.Dealer, BillType.PharmacyOrder);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4565) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4566)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4567) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4568)     public void createApprovedStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4569)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4570)         createApproved(InstitutionType.StoreDealor, BillType.StoreOrder);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4571) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4572)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4573) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4574)     public void createApproved(InstitutionType institutionType, BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4575)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4576)         String sql = "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4577)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4578) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4579)         sql = "Select b From BilledBill b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4580)                 + " b.referenceBill.creater is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4581)                 + " and b.referenceBill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4582)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4583)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4584)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4585)                 + " and b.billType= :bTp  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4586) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4587)         sql += createKeySql(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4588) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4589)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4590) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4591)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4592)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4593)         tmp.put("insTp", institutionType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4594)         tmp.put("bTp", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4595)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, maxResult);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4596) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4597)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4598) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4599)     public void createNotApprovedPharmacy() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4600)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4601)         createNotApproved(InstitutionType.Dealer, BillType.PharmacyOrder);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4602) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4603)     }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4604) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4605)     public void fillOnlySavedPharmacyPo() {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4606)         bills = null;
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4607)         HashMap tmp = new HashMap();
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4608)         String sql;
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4609)         sql = "Select b From BilledBill b where "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4610)                 + " b.referenceBill is null "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4611)                 + " and b.toInstitution.institutionType=:insTp "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4612)                 + " and b.createdAt between :fromDate and :toDate "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4613)                 + " and b.retired=false "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4614)                 + " and b.billType= :bTp  "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4615)                 + " and b.checkedBy is null";
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4616) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4617)         sql += createKeySqlSearchForPoCancel(tmp);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4618) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4619)         sql += " order by b.createdAt desc  ";
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4620)         tmp.put("toDate", getToDate());
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4621)         tmp.put("fromDate", getFromDate());
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4622)         tmp.put("insTp", InstitutionType.Dealer);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4623)         tmp.put("bTp", BillType.PharmacyOrder);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4624) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4625)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, maxResult);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4626) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4627)     }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4628) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4629)     public void fillOnlyFinalizedPharmacyPo() {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4630)         bills = null;
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4631)         HashMap tmp = new HashMap();
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4632)         String sql;
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4633)         sql = "Select b From BilledBill b where "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4634)                 + " b.referenceBill is null "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4635)                 + " and b.toInstitution.institutionType=:insTp "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4636)                 + " and b.createdAt between :fromDate and :toDate "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4637)                 + " and b.retired=false "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4638)                 + " and b.billType= :bTp  "
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4639)                 + " and b.checkedBy is not null";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4640)         sql += createKeySqlSearchForPoCancel(tmp);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4641) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4642)         sql += " order by b.createdAt desc  ";
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4643)         tmp.put("toDate", getToDate());
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4644)         tmp.put("fromDate", getFromDate());
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4645)         tmp.put("insTp", InstitutionType.Dealer);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4646)         tmp.put("bTp", BillType.PharmacyOrder);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4647) 
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4648)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, maxResult);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530  4649) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4650)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4651) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4652)     public void createNotApprovedStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4653)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4654) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4655)         createNotApproved(InstitutionType.StoreDealor, BillType.StoreOrder);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4656) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4657)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4658) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4659)     public void createNotApproved(InstitutionType institutionType, BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4660)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4661)         String sql = "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4662)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4663) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4664)         sql = "Select b From BilledBill b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4665)                 + "  b.referenceBill is null  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4666)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4667)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4668)                 + " and b.retired=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4669)                 + " and b.billType= :bTp ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4670) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4671)         sql += createKeySql(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4672)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4673) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4674)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4675)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4676)         tmp.put("insTp", institutionType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4677)         tmp.put("bTp", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4678)         List<Bill> lst1 = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, maxResult);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4679) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4680)         sql = "Select b From BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4681)                 + " b.referenceBill.creater is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4682)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4683)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4684)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4685)                 + " and b.billType= :bTp  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4686) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4687)         sql += createKeySql(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4688)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4689) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4690)         List<Bill> lst2 = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, maxResult);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4691) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4692)         sql = "Select b From BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4693)                 + " b.referenceBill.creater is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4694)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4695)                 + " and b.referenceBill.cancelled=true "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4696)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4697)                 + " and b.retired=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4698)                 + " and b.billType= :bTp ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4699) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4700)         sql += createKeySql(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4701)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4702) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4703)         List<Bill> lst3 = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, maxResult);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4704) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4705)         lst1.addAll(lst2);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4706)         lst1.addAll(lst3);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4707) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4708)         bills = lst1;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4709) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4710)     }
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  4711) 
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  4712)     private String createKeySqlSearchForPoCancel(HashMap tmp) {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4713)         String sql = "";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4714)         if (getSearchKeyword().getToInstitution() != null && !getSearchKeyword().getToInstitution().trim().equals("")) {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4715)             sql += " and  ((b.toInstitution.name) like :toIns )";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4716)             tmp.put("toIns", "%" + getSearchKeyword().getToInstitution().trim().toUpperCase() + "%");
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4717)         }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4718) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4719)         if (getSearchKeyword().getCreator() != null && !getSearchKeyword().getCreator().trim().equals("")) {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4720)             sql += " and  ((b.creater.webUserPerson.name) like :crt )";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4721)             tmp.put("crt", "%" + getSearchKeyword().getCreator().trim().toUpperCase() + "%");
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4722)         }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4723) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4724)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4725)             sql += " and  ((b.department.name) like :crt )";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4726)             tmp.put("crt", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4727)         }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4728) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4729)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4730)             sql += " and  ((b.deptId) like :billNo )";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4731)             tmp.put("billNo", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4732)         }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4733) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4734)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4735)             sql += " and  ((b.netTotal) like :reqTotal )";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4736)             tmp.put("reqTotal", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4737)         }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4738) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4739)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4740)             sql += " and  ((b.referenceBill.netTotal) like :appTotal )";
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4741)             tmp.put("appTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4742)         }
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4743) 
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4744)         return sql;
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  4745) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4746)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4747) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4748)     private String createKeySql(HashMap tmp) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4749)         String sql = "";
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  4750) 
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  4751)         if (getSearchKeyword().getRequestNo() != null && !getSearchKeyword().getRequestNo().trim().equals("")) {
cec7e70d170 (DamithDeshan         2024-08-06 19:16:22 +0530  4752)             sql += " and  ((b.qutationNumber) like :qutNo )";
cec7e70d170 (DamithDeshan         2024-08-06 19:16:22 +0530  4753)             tmp.put("qutNo", "%" + getSearchKeyword().getRequestNo().trim().toUpperCase() + "%");
cec7e70d170 (DamithDeshan         2024-08-06 19:16:22 +0530  4754)         }
cec7e70d170 (DamithDeshan         2024-08-06 19:16:22 +0530  4755) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4756)         if (getSearchKeyword().getToInstitution() != null && !getSearchKeyword().getToInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4757)             sql += " and  ((b.toInstitution.name) like :toIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4758)             tmp.put("toIns", "%" + getSearchKeyword().getToInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4759)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4760) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4761)         if (getSearchKeyword().getCreator() != null && !getSearchKeyword().getCreator().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4762)             sql += " and  ((b.creater.webUserPerson.name) like :crt )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4763)             tmp.put("crt", "%" + getSearchKeyword().getCreator().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4764)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4765) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4766)         if (getSearchKeyword().getDepartment() != null && !getSearchKeyword().getDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4767)             sql += " and  ((b.department.name) like :crt )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4768)             tmp.put("crt", "%" + getSearchKeyword().getDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4769)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4770) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4771)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4772)             sql += " and  ((b.referenceBill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4773)             tmp.put("billNo", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4774)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4775) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4776)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4777)             sql += " and  ((b.netTotal) like :reqTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4778)             tmp.put("reqTotal", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4779)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4780) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4781)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4782)             sql += " and  ((b.referenceBill.netTotal) like :appTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4783)             tmp.put("appTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4784)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4785) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4786)         return sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4787) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4788)     }
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4789) 
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4790)     private String keysForGrnReturnByBillItem(HashMap tmp) {
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4791)         String sql = "";
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4792)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4793)             sql += " and  ((bi.bill.deptId) like :billNo )";
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4794)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4795)         }
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4796) 
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4797)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4798)             sql += " and  ((bi.bill.invoiceNumber) like :invoice )";
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4799)             tmp.put("invoice", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4800)         }
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4801) 
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4802)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4803)             sql += " and  ((bi.bill.referenceBill.deptId) like :refNo )";
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4804)             tmp.put("refNo", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4805)         }
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4806) 
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4807)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4808)             sql += " and  ((bi.bill.fromInstitution.name) like :frmIns )";
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4809)             tmp.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4810)         }
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4811) 
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4812)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4813)             sql += " and  ((bi.bill.referenceBill.netTotal) like :total )";
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4814)             tmp.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4815)         }
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4816) 
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4817)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4818)             sql += " and  ((bi.bill.netTotal) like :netTotal )";
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4819)             tmp.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4820)         }
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4821) 
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4822)         return sql;
009318ec51e (Senula88             2024-06-04 11:23:27 +0530  4823)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4824) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4825)     private String keysForGrnReturn(HashMap tmp) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4826)         String sql = "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4827)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4828)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4829)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4830)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4831) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4832)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4833)             sql += " and  ((b.invoiceNumber) like :invoice )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4834)             tmp.put("invoice", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4835)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4836) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4837)         if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4838)             sql += " and  ((b.referenceBill.deptId) like :refNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4839)             tmp.put("refNo", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4840)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4841) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4842)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4843)             sql += " and  ((b.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4844)             tmp.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4845)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4846) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4847)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4848)             sql += " and  ((b.referenceBill.netTotal) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4849)             tmp.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4850)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4851) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4852)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4853)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4854)             tmp.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4855)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4856) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4857)         return sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4858)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4859) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4860)     public void createGrnTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4861)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4862) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4863)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4864)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4865)         HashMap tmp = new HashMap();
ef17e1ba6ce (Senula88             2024-06-14 19:50:52 +0530  4866) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4867)         if (getSearchKeyword().getItem() == null) {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4868)             sql = "Select b From BilledBill b where  b.retired=false and b.billType= :bTp "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4869)                     + " and b.institution=:ins "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4870)                     + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4871) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4872)             sql += keysForGrnReturn(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4873) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4874)             sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4875) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4876)             tmp.put("toDate", getToDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4877)             tmp.put("fromDate", getFromDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4878)             tmp.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4879)             // tmp.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4880)             tmp.put("bTp", BillType.PharmacyGrnBill);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4881)             bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4882) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4883)         } else {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4884)             sql = "Select DISTINCT(bi.bill) From BillItem bi"
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4885)                     + " where bi.retired=false and bi.bill.billType= :bTp "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4886)                     + " and bi.bill.institution=:ins "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4887)                     + " and bi.createdAt between :fromDate and :toDate "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4888)                     + " and bi.item=:item ";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4889)             sql += keysForGrnReturnByBillItem(tmp);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4890) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4891)             sql += " order by bi.createdAt desc  ";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4892) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4893)             tmp.put("toDate", getToDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4894)             tmp.put("fromDate", getFromDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4895)             tmp.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4896)             tmp.put("item", getSearchKeyword().getItem());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4897)             // tmp.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4898)             tmp.put("bTp", BillType.PharmacyGrnBill);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4899)             bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4900)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4901)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4902)             b.setListOfBill(getReturnBill(b, BillType.PharmacyGrnReturn));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4903)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4904) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4905)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4906) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4907)     public void createGrnTableStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4908)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4909) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4910)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4911)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4912)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4913) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4914)         sql = "Select b From BilledBill b where  b.retired=false and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4915)                 + " and b.institution=:ins and"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4916)                 + " b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4917) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4918)         sql += keysForGrnReturn(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4919) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4920)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4921) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4922)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4923)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4924)         tmp.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4925)         tmp.put("bTp", BillType.StoreGrnBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4926)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4927) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4928)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4929)             b.setListOfBill(getReturnBill(b, BillType.StoreGrnReturn));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4930)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4931) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4932)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4933) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4934)     public void createGrnTableAllIns() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4935)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4936) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4937)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4938)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4939)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4940) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4941)         if (getSearchKeyword().getItem() == null) {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4942)             sql = "Select b From BilledBill b where  b.retired=false and b.billType= :bTp "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4943)                     + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4944) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4945)             sql += keysForGrnReturn(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4946) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4947)             sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4948) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4949)             tmp.put("toDate", getToDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4950)             tmp.put("fromDate", getFromDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4951)             // tmp.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4952)             tmp.put("bTp", BillType.PharmacyGrnBill);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4953)             bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4954) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4955)         } else {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4956)             sql = "Select DISTINCT(bi.bill) From BillItem bi"
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4957)                     + " where bi.retired=false and bi.bill.billType= :bTp "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4958)                     + " and bi.createdAt between :fromDate and :toDate "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4959)                     + " and bi.item=:item";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4960)             sql += keysForGrnReturnByBillItem(tmp);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4961) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4962)             sql += " order by bi.createdAt desc  ";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4963) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4964)             tmp.put("toDate", getToDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4965)             tmp.put("fromDate", getFromDate());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4966)             tmp.put("item", getSearchKeyword().getItem());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4967)             // tmp.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4968)             tmp.put("bTp", BillType.PharmacyGrnBill);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4969)             bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  4970)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4971) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4972)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4973)             b.setListOfBill(getReturnBill(b, BillType.PharmacyGrnReturn));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4974)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4975) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4976)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4977) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4978)     public void createGrnTableAllInsStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4979)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4980) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4981)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4982)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4983)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4984) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4985)         sql = "Select b From BilledBill b where  b.retired=false and b.billType= :bTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4986)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4987) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4988)         sql += keysForGrnReturn(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4989) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4990)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4991) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4992)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4993)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4994)         // tmp.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4995)         tmp.put("bTp", BillType.StoreGrnBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4996)         bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4997) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4998)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  4999)             b.setListOfBill(getReturnBill(b, BillType.StoreGrnReturn));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5000)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5001) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5002)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5003) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5004)     private List<Bill> getReturnBill(Bill b, BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5005)         String sql = "Select b From BilledBill b where b.retired=false and b.creater is not null"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5006)                 + " and  b.billType=:btp and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5007)                 + " b.referenceBill=:ref";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5008)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5009)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5010)         hm.put("btp", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5011)         return getBillFacade().findByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5012)     }
18532aede48 (Lawan Samarasekara   2024-02-02 20:12:15 +0530  5013) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5014)     public void createPoTablePharmacy() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5015)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5016) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5017)         createPoTable(InstitutionType.Dealer, BillType.PharmacyOrderApprove, BillType.PharmacyGrnBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5018) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5019)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5020) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5021)     public void createPoTableStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5022)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5023) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5024)         createPoTable(InstitutionType.StoreDealor, BillType.StoreOrderApprove, BillType.StoreGrnBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5025) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5026)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5027) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5028)     public void createPoTable(InstitutionType institutionType, BillType bt, BillType referenceBillType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5029)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5030)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5031)         HashMap tmp = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5032) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5033)         sql = "Select b From BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5034)                 + " where  b.retired=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5035)                 + " and b.billType= :bTp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5036)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5037)                 + " and  b.referenceBill.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5038)                 + " and  b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5039) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5040)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5041)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5042)             tmp.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5043)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5044) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5045)         if (getSearchKeyword().getToInstitution() != null && !getSearchKeyword().getToInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5046)             sql += " and  ((b.toInstitution.name) like :toIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5047)             tmp.put("toIns", "%" + getSearchKeyword().getToInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5048)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5049) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5050)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5051)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5052)             tmp.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5053)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5054) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5055)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5056) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5057)         tmp.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5058)         tmp.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5059)         tmp.put("insTp", institutionType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5060)         tmp.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5061)         tmp.put("bTp", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5062)         if (getReportKeyWord() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5063)             if (getReportKeyWord().isAdditionalDetails()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5064)                 bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5065)             } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5066)                 bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5067)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5068)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5069)             bills = getBillFacade().findByJpql(sql, tmp, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5070)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5071)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5072)             b.setListOfBill(getGrns(b, referenceBillType));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5073)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5074) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5075)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5076) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5077)     private List<Bill> getGrns(Bill b, BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5078)         String sql = "Select b From BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5079)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5080)                 + " and b.creater is not null"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5081)                 + " and b.billType=:btp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5082)                 + " and b.referenceBill=:ref";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5083)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5084)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5085)         hm.put("btp", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5086)         return getBillFacade().findByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5087)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5088) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5089)     private List<Bill> getIssudBills(Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5090)         String sql = "Select b From Bill b where b.retired=false and b.creater is not null"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5091)                 + " and b.billType=:btp and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5092)                 + " b.referenceBill=:ref or b.backwardReferenceBill=:ref";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5093)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5094)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5095)         hm.put("btp", BillType.PharmacyTransferIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5096)         return getBillFacade().findByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5097)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5098) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5099)     private List<Bill> getBHTIssudBills(Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5100)         String sql = "Select b From Bill b where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5101)                 + " and b.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5102)                 + " and b.referenceBill=:ref ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5103)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5104)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5105)         hm.put("btp", BillType.PharmacyBhtPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5106)         return getBillFacade().findByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5107)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5108) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5109)     private List<Bill> getIssuedBills(Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5110)         String sql = "Select b From Bill b where b.retired=false and b.creater is not null"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5111)                 + " and b.billType=:btp and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5112)                 + " b.referenceBill=:ref and b.backwardReferenceBill=:ref";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5113)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5114)         hm.put("ref", b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5115)         hm.put("btp", BillType.PharmacyTransferIssue);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5116)         return getBillFacade().findByJpql(sql, hm);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5117)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5118) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5119)     public void createDueFeeTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5120)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5121) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5122)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5123)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5124) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5125)         sql = "select b from BillFee b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5126)                 + " (b.bill.billType=:btp or b.bill.billType=:btpc) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5127)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5128)                 + " and (b.feeValue - b.paidValue) > 0 and"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5129)                 + "  b.bill.createdAt between :fromDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5130)                 + " and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5131) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5132)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5133)             sql += " and  ((b.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5134)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5135)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5136) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5137)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5138)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5139)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5140)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5141) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5142)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5143)             sql += " and  ((b.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5144)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5145)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5146) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5147)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5148)             sql += " and  ((b.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5149)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5150)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5151) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5152)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5153)             sql += " and  ((b.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5154)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5155)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5156) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5157)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5158)             sql += " and  ((b.billItem.item.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5159)             temMap.put("staff", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5160)         }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  5161) 
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5162)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5163)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.bhtNo) like :bht )";
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5164)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5165)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5166) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5167)         sql += "  order by b.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5168) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5169)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5170)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5171)         temMap.put("btp", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5172)         temMap.put("btpc", BillType.CollectingCentreBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5173) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5174)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5175)         List<BillFee> removeingBillFees = new ArrayList<>();
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5176)         if (configOptionApplicationController.getBooleanValueByKey("Remove Refunded Bill From OPD Staff Payment")) {
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5177)             for (BillFee bf : billFees) {
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5178)                 sql = "SELECT bi FROM BillItem bi where bi.retired=false and bi.referanceBillItem.id=" + bf.getBillItem().getId();
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5179)                 BillItem rbi = getBillItemFacade().findFirstByJpql(sql);
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5180) 
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5181)                 if (rbi != null) {
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5182)                     removeingBillFees.add(bf);
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5183)                 }
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5184) 
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5185)             }
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5186)             billFees.removeAll(removeingBillFees);
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5187)         }
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  5188)         calTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5189) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5190)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5191) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5192)     public void createDueFeeTableAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5193)         Date sartTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5194) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5195)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5196)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5197) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5198)         sql = "select b from BillFee b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5199)                 + " (b.bill.billType=:btp or b.bill.billType=:btpc) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5200)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5201)                 + " and (b.feeValue - b.paidValue) > 0 and"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5202)                 + "  b.bill.createdAt between :fromDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5203)                 + " and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5204) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5205)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5206)             sql += " and  ((b.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5207)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5208)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5209) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5210)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
e223aa472cd (SandithP2001         2024-10-28 16:31:36 +0530  5211)             sql += " and  ((b.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5212)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5213)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5214) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5215)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5216)             sql += " and  ((b.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5217)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5218)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5219) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5220)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5221)             sql += " and  ((b.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5222)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5223)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5224) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5225)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5226)             sql += " and  ((b.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5227)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5228)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5229) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5230)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5231)             sql += " and  ((b.billItem.item.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5232)             temMap.put("staff", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5233)         }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  5234) 
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5235)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5236)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.bhtNo) like :bht )";
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5237)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5238)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5239)         sql += "  order by b.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5240)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5241)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5242)         temMap.put("btp", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5243)         temMap.put("btpc", BillType.CollectingCentreBill);
2e790233815 (Buddhika Ariyaratne  2024-10-19 12:45:03 +0530  5244)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5245) //        List<BillFee> removeingBillFees = new ArrayList<>();
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5246) //        for (BillFee bf : billFees) {
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5247) //            sql = "SELECT bi FROM BillItem bi where bi.retired=false and bi.referanceBillItem.id=" + bf.getBillItem().getId();
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5248) //            BillItem rbi = getBillItemFacade().findFirstByJpql(sql);
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5249) //
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5250) //            if (rbi != null) {
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5251) //                removeingBillFees.add(bf);
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5252) //            }
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5253) //
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5254) //        }
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  5255) //        billFees.removeAll(removeingBillFees);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5256)         calTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5257)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5258) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5259)     public void createDueFeeTableAndPaidFeeTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5260)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5261) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5262)         dueTotal = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5263)         doneTotal = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5264)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5265)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5266) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5267)         sql = "select b from BillFee b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5268)                 + " b.bill.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5269)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5270)                 + " and (b.feeValue - b.paidValue) > 0 and"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5271)                 + " b.bill.createdAt between :fromDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5272)                 + " and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5273) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5274)         if (speciality != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5275)             sql += " and b.staff.speciality=:special ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5276)             temMap.put("special", speciality);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5277)             ////System.out.println(speciality);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5278)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5279) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5280)         if (staff != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5281)             sql += " and b.staff=:staff ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5282)             temMap.put("staff", staff);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5283)             ////System.out.println(staff);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5284)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5285) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5286)         if (item != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5287)             sql += " and b.billItem.item=:item ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5288)             temMap.put("item", item);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5289)             ////System.out.println(item);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5290)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5291) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5292)         sql += "  order by b.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5293) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5294)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5295)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5296)         temMap.put("btp", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5297) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5298)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5299) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5300)         for (BillFee bf : billFees) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5301)             dueTotal += bf.getFeeValue();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5302)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5303) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5304)         temMap.clear();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5305) //        BillFee bf=new BillFee();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5306) //        bf.getBillItem().getCreatedAt();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5307)         sql = "select b.paidForBillFee from BillItem b where b.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5308)                 + " b.bill.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5309)                 + " and b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5310)                 + " and b.paidForBillFee.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5311)                 //                + " and b.feeValue > 0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5312)                 + " and b.createdAt between :fromDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5313)                 + " and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5314) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5315) //        sql = "Select b FROM BillItem b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5316) //                + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5317) //                + " and b.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5318) //                + " and b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5319) //                + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5320)         if (speciality != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5321)             sql += " and b.paidForBillFee.staff.speciality=:special ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5322)             temMap.put("special", speciality);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5323)             ////System.out.println(speciality);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5324)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5325) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5326)         if (staff != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5327)             sql += " and b.paidForBillFee.staff=:staff ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5328)             temMap.put("staff", staff);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5329)             ////System.out.println(staff);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5330)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5331) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5332)         if (item != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5333)             sql += " and b.paidForBillFee.billItem.item=:item ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5334)             temMap.put("item", item);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5335)             ////System.out.println(item);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5336)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5337) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5338)         sql += "  order by b.paidForBillFee.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5339) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5340)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5341)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5342)         temMap.put("btp", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5343)         temMap.put("refType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5344) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5345)         billFeesDone = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5346) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5347)         for (BillFee bf2 : billFeesDone) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5348)             doneTotal += bf2.getFeeValue();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5349)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5350) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5351)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5352) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5353)     double totalPaying;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5354) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5355)     public void fillDocPayingBillFee() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5356)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5357) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5358)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5359)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5360) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5361)         sql = "select b from BillItem b where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5362)                 + " and b.bill.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5363)                 + " and b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5364)                 //                + " and b.paidForBillFee.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5365)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5366) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5367)         if (speciality != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5368)             sql += " and b.paidForBillFee.staff.speciality=:s ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5369)             m.put("s", speciality);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5370)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5371) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5372)         if (currentStaff != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5373)             sql += " and b.paidForBillFee.staff=:cs";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5374)             m.put("cs", currentStaff);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5375)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5376) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530  5377)         sql += " order by b.bill.deptId ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5378) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5379)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5380)         m.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5381)         m.put("btp", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5382)         m.put("refType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5383) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5384)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5385) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5386)         totalPaying = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5387)         if (billItems == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5388)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5389)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5390)         for (BillItem dFee : billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5391)             totalPaying += dFee.getPaidForBillFee().getFeeValue();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5392)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5393) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5394)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5395) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5396)     public void fillDocPayingBill() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5397) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5398)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5399)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5400) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5401)         sql = "select distinct(b.bill) from BillItem b where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5402)                 + " and b.bill.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5403)                 + " and b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5404)                 //                + " and b.paidForBillFee.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5405)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5406) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5407)         if (speciality != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5408)             sql += " and b.paidForBillFee.staff.speciality=:s ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5409)             m.put("s", speciality);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5410)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5411) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5412)         if (currentStaff != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5413)             sql += " and b.paidForBillFee.staff=:cs";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5414)             m.put("cs", currentStaff);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5415)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5416) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530  5417)         sql += " order by b.bill.deptId ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5418) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5419)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5420)         m.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5421)         m.put("btp", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5422)         m.put("refType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5423) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5424) //        billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5425)         bills = getBillFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5426) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5427)         totalPaying = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5428)         if (bills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5429)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5430)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5431)         for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5432)             totalPaying += b.getNetTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5433)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5434) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5435)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5436) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5437)     public void createDueFeeTableInward() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5438)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5439) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5440)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5441)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5442) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5443)         sql = "select b from BillFee b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5444)                 + " b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5445)                 + " and (b.bill.billType=:btp or b.bill.billType=:btp2 )"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5446)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5447)                 //Starting of newly added code 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5448)                 //                + " and b.bill.refunded=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5449)                 //Ending of newly added code 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5450)                 + " and (b.feeValue - b.paidValue) > 0"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5451)                 //                + " and  b.bill.billTime between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5452)                 + " and  b.bill.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5453) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5454)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5455)             sql += " and  ((b.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5456)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5457)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5458) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5459)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5460)             sql += " and  ((b.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5461)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5462)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5463) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5464)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5465)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5466)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5467)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5468) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5469)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5470)             sql += " and  ((b.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5471)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5472)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5473) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5474)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5475)             sql += " and  ((b.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5476)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5477)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5478) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5479)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5480)             sql += " and  ((b.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5481)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5482)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5483) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5484)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5485)             sql += " and  ((b.billItem.item.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5486)             temMap.put("staff", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5487)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5488) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5489)         sql += "  order by b.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5490) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5491)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5492)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5493)         temMap.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5494)         temMap.put("btp2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5495) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5496)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5497)         List<BillFee> removeingBillFees = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5498)         for (BillFee bf : billFees) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5499)             temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5500)             temMap.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5501)             sql = "SELECT bi FROM BillItem bi where bi.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5502)                     + " and bi.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5503)                     + " and bi.bill.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5504)                     //                    + " and bi.bill.toStaff=:stf "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5505)                     + " and bi.referanceBillItem.id=" + bf.getBillItem().getId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5506)             BillItem rbi = getBillItemFacade().findFirstByJpql(sql, temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5507) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5508)             if (rbi != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5509)                 removeingBillFees.add(bf);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5510)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5511)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5512)         billFees.removeAll(removeingBillFees);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5513)         calTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5514) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5515)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5516) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5517)     public void createDueFeeTableInwardAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5518)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5519) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5520)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5521)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5522)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5523)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5524)         temMap.put("billClass", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5525)         temMap.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5526)         temMap.put("btp2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5527) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5528)         sql = "select b from BillFee b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5529)                 + " b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5530)                 + " and (b.bill.billType=:btp or b.bill.billType=:btp2 )"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5531)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5532)                 + " and type(b.bill)=:billClass "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5533)                 //Starting of newly added code 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5534)                 //                + " and b.bill.refunded=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5535)                 //Ending of newly added code 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5536)                 + " and (b.feeValue - b.paidValue) > 0"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5537)                 //                + " and  b.bill.billTime between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5538)                 + " and  b.bill.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5539) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5540)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5541)             sql += " and  ((b.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5542)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5543)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5544) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5545)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5546)             sql += " and  ((b.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5547)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5548)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5549) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5550)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5551)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5552)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5553)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5554) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5555)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5556)             sql += " and  ((b.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5557)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5558)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5559) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5560)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5561)             sql += " and  ((b.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5562)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5563)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5564) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5565)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5566)             sql += " and  ((b.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5567)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5568)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5569) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5570)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5571)             sql += " and  ((b.billItem.item.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5572)             temMap.put("staff", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5573)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5574) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5575)         sql += "  order by b.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5576) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5577)         ////System.out.println("temMap = " + temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5578)         ////System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5579)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5580)         List<BillFee> removeingBillFees = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5581)         for (BillFee bf : billFees) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5582)             temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5583)             temMap.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5584)             sql = "SELECT bi FROM BillItem bi where bi.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5585)                     + " and bi.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5586)                     + " and bi.bill.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5587)                     //                    + " and bi.bill.toStaff=:stf "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5588)                     + " and bi.referanceBillItem.id=" + bf.getBillItem().getId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5589)             BillItem rbi = getBillItemFacade().findFirstByJpql(sql, temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5590) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5591)             if (rbi != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5592)                 removeingBillFees.add(bf);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5593)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5594)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5595)         billFees.removeAll(removeingBillFees);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5596)         calTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5597) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5598)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5599) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5600)     public void createDueFeeTableInwardAllWithCancelled() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5601) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5602)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5603)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5604) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5605)         sql = "select b from BillFee b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5606)                 + " b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5607)                 + " and (b.bill.billType=:btp or b.bill.billType=:btp2 )"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5608)                 + " and (b.feeValue - b.paidValue) > 0"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5609)                 + " and  b.bill.billDate between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5610) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5611)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5612)             sql += " and  ((b.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5613)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5614)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5615) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5616)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5617)             sql += " and  ((b.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5618)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5619)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5620) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5621)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5622)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5623)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5624)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5625) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5626)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5627)             sql += " and  ((b.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5628)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5629)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5630) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5631)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5632)             sql += " and  ((b.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5633)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5634)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5635) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5636)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5637)             sql += " and  ((b.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5638)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5639)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5640) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5641)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5642)             sql += " and  ((b.billItem.item.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5643)             temMap.put("staff", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5644)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5645) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5646)         sql += "  order by b.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5647) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5648)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5649)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5650)         temMap.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5651)         temMap.put("btp2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5652)         ////System.out.println("temMap = " + temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5653)         ////System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5654) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5655)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5656)         calTotal();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5657)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5658) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5659)     double total;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5660) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5661)     public double getTotal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5662)         return total;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5663)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5664) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5665)     public void setTotal(double total) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5666)         this.total = total;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5667)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5668) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5669)     private void calTotal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5670)         total = 0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5671)         if (billFees == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5672)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5673)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5674) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5675)         for (BillFee billFee : billFees) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5676)             total += billFee.getFeeValue();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5677)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5678)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5679) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5680)     private void calTotalBillItem() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5681)         total = 0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5682)         if (billItems == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5683)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5684)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5685) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5686)         for (BillItem billFee : billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5687)             total += billFee.getNetValue();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5688)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5689)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5690) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5691)     public void createDueFeeReportInward() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5692) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5693)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5694) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5695)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5696)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5697) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5698)         sql = "select b from BillFee b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5699)                 + " b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5700)                 + " and (b.bill.billType=:btp or b.bill.billType=:btp2 )"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5701)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5702)                 + " and (b.feeValue - b.paidValue) > 0"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5703)                 + " and  b.bill.billDate between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5704) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5705)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5706)             sql += " and  ((b.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5707)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5708)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5709) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5710)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5711)             sql += " and  ((b.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5712)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5713)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5714) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5715)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5716)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5717)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5718)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5719) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5720)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5721)             sql += " and  ((b.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5722)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5723)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5724) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5725)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5726)             sql += " and  ((b.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5727)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5728)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5729) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5730)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5731)             sql += " and  ((b.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5732)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5733)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5734) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5735)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5736)             sql += " and  ((b.billItem.item.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5737)             temMap.put("staff", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5738)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5739) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5740)         if (getSearchKeyword().getPatientEncounter() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5741)             sql += " and  b.bill.patientEncounter =:pe";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5742)             temMap.put("pe", getSearchKeyword().getPatientEncounter());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5743)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5744) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5745)         if (getSearchKeyword().getAdmissionType() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5746)             sql += " and  b.bill.patientEncounter.admissionType =:adty";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5747)             temMap.put("adty", getSearchKeyword().getAdmissionType());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5748)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5749) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5750)         if (getSearchKeyword().getPaymentMethod() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5751)             sql += " and  b.bill.patientEncounter.paymentMethod =:payme";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5752)             temMap.put("payme", getSearchKeyword().getPaymentMethod());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5753)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5754) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5755)         if (getSearchKeyword().getIns() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5756)             sql += " and  b.bill.patientEncounter.creditCompany=:is";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5757)             temMap.put("is", getSearchKeyword().getIns());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5758)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5759) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5760)         sql += "  order by b.staff.id    ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5761) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5762)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5763)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5764)         temMap.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5765)         temMap.put("btp2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5766) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5767)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5768) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5769)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5770) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5771)     public void createPaymentTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5772)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5773) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5774)         billItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5775)         HashMap temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5776)         String sql = "Select b FROM BillItem b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5777)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5778)                 + " and b.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5779)                 + " and b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5780)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5781) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5782)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5783)             sql += " and  ((b.paidForBillFee.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5784)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5785)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5786) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5787)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
21865211c22 (SandithP2001         2024-10-28 16:53:57 +0530  5788)             sql += " and  ((b.paidForBillFee.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5789)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5790)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5791) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5792)         if (getSearchKeyword().getPaymentMethod() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5793)             sql += " and  b.paidForBillFee.bill.paymentMethod=:pm ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5794)             temMap.put("pm", getSearchKeyword().getPaymentMethod());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5795)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5796) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5797)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5798)             sql += " and  ((b.bill.insId) like :insId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5799)             temMap.put("insId", "%" + getSearchKeyword().getInsId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5800)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5801) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5802)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5803)             sql += " and  ((b.paidForBillFee.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5804)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5805)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5806) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5807)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5808)             sql += " and  ((b.paidForBillFee.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5809)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5810)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5811) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5812)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5813)             sql += " and  ((b.paidForBillFee.billItem.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5814)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5815)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5816) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5817)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5818)             sql += " and  ((b.paidForBillFee.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5819)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5820)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5821)         if (getReportKeyWord().getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5822)             sql += " and  b.paidForBillFee.bill.creditCompany=:cc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5823)             temMap.put("cc", getReportKeyWord().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5824)         }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  5825) 
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5826)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5827)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.bhtNo) like :bht )";
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5828)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5829)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5830) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5831)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5832) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5833)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5834)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5835)         temMap.put("bType", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5836)         temMap.put("refType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5837) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5838)         billItems = getBillItemFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5839) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5840)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5841) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5842)     public void createPaymentTableAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5843)         billItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5844)         HashMap temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5845)         String sql = "Select b FROM BillItem b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5846)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5847)                 + " and b.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5848)                 + " and b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5849)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5850) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5851)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5852)             sql += " and  ((b.paidForBillFee.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5853)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5854)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5855) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5856)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
21865211c22 (SandithP2001         2024-10-28 16:53:57 +0530  5857)             sql += " and  ((b.paidForBillFee.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5858)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5859)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5860) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5861)         if (getSearchKeyword().getPaymentMethod() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5862)             sql += " and  b.paidForBillFee.bill.paymentMethod=:pm ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5863)             temMap.put("pm", getSearchKeyword().getPaymentMethod());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5864)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5865) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5866)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5867)             sql += " and  ((b.bill.insId) like :insId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5868)             temMap.put("insId", "%" + getSearchKeyword().getInsId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5869)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5870) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5871)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5872)             sql += " and  ((b.paidForBillFee.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5873)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5874)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5875) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5876)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5877)             sql += " and  ((b.paidForBillFee.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5878)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5879)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5880) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5881)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5882)             sql += " and  ((b.paidForBillFee.billItem.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5883)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5884)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5885) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5886)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5887)             sql += " and  ((b.paidForBillFee.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5888)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5889)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5890)         if (getReportKeyWord().getInstitution() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5891)             sql += " and  b.paidForBillFee.bill.creditCompany=:cc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5892)             temMap.put("cc", getReportKeyWord().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5893)         }
dec5ce1ccff (Dr M H B Ariyaratne  2024-10-22 13:41:10 +0530  5894)         if (getReportKeyWord().getWebUser() != null) {
dec5ce1ccff (Dr M H B Ariyaratne  2024-10-22 13:41:10 +0530  5895)             sql += " and  b.creater=:creater ";
dec5ce1ccff (Dr M H B Ariyaratne  2024-10-22 13:41:10 +0530  5896)             temMap.put("creater", getReportKeyWord().getWebUser());
dec5ce1ccff (Dr M H B Ariyaratne  2024-10-22 13:41:10 +0530  5897)         }
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  5898) 
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5899)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5900)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.bhtNo) like :bht )";
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5901)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
1aa0cab3c89 (thiwanka570          2024-08-03 17:59:13 +0530  5902)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5903) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5904)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5905) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5906)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5907)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5908)         temMap.put("bType", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5909)         temMap.put("refType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5910) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5911)         billItems = getBillItemFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5912) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5913)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5914) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5915)     public void createProfessionalPaymentTableInward() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5916)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5917) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5918)         billItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5919)         HashMap temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5920)         temMap.put("bclass", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5921)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5922)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5923)         temMap.put("bType", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5924)         temMap.put("refType", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5925)         temMap.put("refType2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5926)         String sql = "Select b FROM BillItem b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5927)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5928)                 //                + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5929)                 + " and type(b.bill)=:bclass"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5930)                 + " and b.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5931)                 + " and (b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5932)                 + " or b.referenceBill.billType=:refType2) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5933)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5934) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5935)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5936)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5937)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5938)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5939) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5940)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5941)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5942)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5943)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5944) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5945)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5946)             sql += " and  ((b.paidForBillFee.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5947)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5948)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5949)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5950)             sql += " and  ((b.bill.insId) like :insId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5951)             temMap.put("insId", "%" + getSearchKeyword().getInsId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5952)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5953) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5954)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5955)             sql += " and  ((b.paidForBillFee.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5956)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5957)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5958) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5959)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5960)             sql += " and  ((b.paidForBillFee.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5961)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5962)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5963) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5964)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5965)             sql += " and  ((b.paidForBillFee.billItem.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5966)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5967)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5968) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5969)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5970)             sql += " and  ((b.paidForBillFee.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5971)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5972)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5973) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5974)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5975) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5976)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5977)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5978)         temMap.put("bType", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5979)         temMap.put("refType", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5980)         temMap.put("refType2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5981) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5982)         billItems = getBillItemFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5983) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5984)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5985) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5986)     public void createProfessionalPaymentTableInwardAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5987)         billItems = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5988)         HashMap temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5989) //        temMap.put("bclass", BilledBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5990)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5991)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5992)         temMap.put("bType", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5993)         temMap.put("refType", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5994)         temMap.put("refType2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5995)         String sql = "Select b FROM BillItem b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5996)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5997)                 + " and b.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5998)                 //                + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  5999)                 //                + " and type(b.bill)=:bclass"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6000)                 + " and (b.referenceBill.billType=:refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6001)                 + " or b.referenceBill.billType=:refType2) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6002)                 + " and b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6003) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6004)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6005)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6006)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6007)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6008) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6009)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6010)             sql += " and  ((b.paidForBillFee.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6011)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6012)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6013) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6014)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6015)             sql += " and  ((b.paidForBillFee.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6016)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6017)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6018)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6019)             sql += " and  ((b.bill.insId) like :insId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6020)             temMap.put("insId", "%" + getSearchKeyword().getInsId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6021)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6022) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6023)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6024)             sql += " and  ((b.paidForBillFee.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6025)             temMap.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6026)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6027) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6028)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6029)             sql += " and  ((b.paidForBillFee.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6030)             temMap.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6031)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6032) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6033)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6034)             sql += " and  ((b.paidForBillFee.billItem.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6035)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6036)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6037) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6038)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6039)             sql += " and  ((b.paidForBillFee.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6040)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6041)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6042) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6043)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6044) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6045)         billItems = getBillItemFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6046)         calTotalBillItem();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6047)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6048) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6049)     private StreamedContent fileForDownload;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6050) 
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6051)     public void listBillsAndItemsWithFees() {
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6052)         Map<String, Object> parameters = new HashMap<>();
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6053)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow(bill) "
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6054)                 + " FROM Bill bill "
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6055)                 + "WHERE 1=1 "
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6056)                 + "AND bill.billTypeAtomic in :bts ";
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6057) 
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6058)         List<BillTypeAtomic> btas = new ArrayList<>();
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6059)         btas.add(BillTypeAtomic.OPD_BILL_WITH_PAYMENT);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6060)         parameters.put("bts", btas);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6061) 
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6062)         if (institution != null) {
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6063)             jpql += "AND bill.department.institution = :ins ";
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6064)             parameters.put("ins", institution);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6065)         }
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6066)         if (department != null) {
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6067)             jpql += "AND bill.department = :dep ";
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6068)             parameters.put("dep", department);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6069)         }
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6070)         if (site != null) {
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6071)             jpql += "AND bill.department.site = :site ";
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6072)             parameters.put("site", site);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6073)         }
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6074)         if (webUser != null) {
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6075)             jpql += "AND bill.creater = :wu ";
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6076)             parameters.put("wu", webUser);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6077)         }
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6078)         if (paymentMethod != null) {
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6079)             jpql += "AND bill.paymentMethod = :pm ";
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6080)             parameters.put("pm", paymentMethod);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6081)         }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6082) 
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6083)         jpql += "AND bill.createdAt BETWEEN :fd AND :td ";
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6084)         parameters.put("fd", fromDate);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6085)         parameters.put("td", toDate);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6086) 
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6087)         jpql += "GROUP BY bill";
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6088) 
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6089)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) billFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6090) 
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530  6091)         for (ReportTemplateRow r : rs) {
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530  6092)             if (r.getBill() != null) {
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6093)                 r.setItemCount(billService.fetchBillItemCount(r.getBill()));
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6094)             }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6095)         }
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530  6096) 
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6097)         bundle = new ReportTemplateRowBundle();
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530  6098)         bundle.setReportTemplateRows(rs);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6099) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6100)     }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6101) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6102)     public StreamedContent getFileForDownload() {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6103)         prepareDataForExcelExport();  // Prepare data and create the Excel file
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6104)         return fileForDownload;       // This should now contain the generated Excel file
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6105)     }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6106) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6107)     public void createBillsBillItemsAndBillFeesTable(Set<Bill> bills, List<BillItem> billItems, Map<BillItem, List<BillFee>> billItemToBillFees) throws IOException {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6108)         XSSFWorkbook workbook = new XSSFWorkbook();
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6109)         XSSFSheet sheet = workbook.createSheet("Bills Details");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6110) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6111)         int rowIdx = 0;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6112)         Row headerRow = sheet.createRow(rowIdx++);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6113)         // Expanding the headers to include all necessary fields
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6114)         String[] headers = {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  6115)             "Bill ID", "Insitution Name", "Department Name", "Patient Name", "Staff Name", "Bill Type", "Total", "Discount", "Net Total", "Payment Method",
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  6116)             "Bill Item Name", "Bill Item Code", "Item Type", "Quantity", "Rate", "Gross Value", "Bill Item Discount", "Net Value",
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  6117)             "Fee Name", "Fee Type", "Fee Value", "Institution Name", "Department Name", "Staff Name"
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6118)         };
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6119)         for (int i = 0; i < headers.length; i++) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6120)             headerRow.createCell(i).setCellValue(headers[i]);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6121)         }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6122) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6123)         // Fill the sheet with data
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6124)         for (Bill bill : bills) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6125)             for (BillItem bi : billItems) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6126)                 if (!bi.getBill().equals(bill)) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6127)                     continue;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6128)                 }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6129)                 List<BillFee> fees = billItemToBillFees.get(bi);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6130)                 for (BillFee fee : fees) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6131)                     Row row = sheet.createRow(rowIdx++);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6132)                     int colIdx = 0;
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6133)                     row.createCell(colIdx++).setCellValue(bill.getId());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6134)                     row.createCell(colIdx++).setCellValue(bill.getInstitution() != null ? bill.getInstitution().getName() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6135)                     row.createCell(colIdx++).setCellValue(bill.getDepartment() != null ? bill.getDepartment().getName() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6136)                     row.createCell(colIdx++).setCellValue(bill.getPatient() != null && bill.getPatient().getPerson() != null ? bill.getPatient().getPerson().getName() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6137)                     row.createCell(colIdx++).setCellValue(bill.getStaff() != null && bill.getStaff().getPerson() != null ? bill.getStaff().getPerson().getNameWithTitle() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6138)                     row.createCell(colIdx++).setCellValue(bill.getBillType() != null ? bill.getBillType().getLabel() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6139)                     row.createCell(colIdx++).setCellValue(bill.getGrantTotal());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6140)                     row.createCell(colIdx++).setCellValue(bill.getDiscount());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6141)                     row.createCell(colIdx++).setCellValue(bill.getNetTotal());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6142)                     row.createCell(colIdx++).setCellValue(bill.getPaymentMethod() != null ? bill.getPaymentMethod().getLabel() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6143) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6144)                     row.createCell(colIdx++).setCellValue(bi.getItem() != null ? bi.getItem().getName() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6145)                     row.createCell(colIdx++).setCellValue(bi.getItem() != null ? bi.getItem().getCode() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6146)                     row.createCell(colIdx++).setCellValue(bi.getItem() != null ? bi.getItem().getItemType().toString() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6147)                     row.createCell(colIdx++).setCellValue(bi.getQty());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6148)                     row.createCell(colIdx++).setCellValue(bi.getNetRate());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6149)                     row.createCell(colIdx++).setCellValue(bi.getGrossValue());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6150)                     row.createCell(colIdx++).setCellValue(bi.getDiscount());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6151)                     row.createCell(colIdx++).setCellValue(bi.getNetValue());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6152) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6153)                     row.createCell(colIdx++).setCellValue(fee.getFee() != null ? fee.getFee().getName() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6154)                     row.createCell(colIdx++).setCellValue(fee.getFee() != null ? fee.getFee().getFeeType().toString() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6155)                     row.createCell(colIdx++).setCellValue(fee.getFeeValue());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6156)                     row.createCell(colIdx++).setCellValue(fee.getInstitution() != null ? fee.getInstitution().getName() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6157)                     row.createCell(colIdx++).setCellValue(fee.getDepartment() != null ? fee.getDepartment().getName() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6158)                     row.createCell(colIdx++).setCellValue(fee.getStaff() != null && fee.getStaff().getPerson() != null ? fee.getStaff().getPerson().getNameWithTitle() : "");
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6159)                 }
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6160) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6161)             }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6162)         }
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6163) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6164)         // Autosize columns to fit content
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6165)         for (int i = 0; i < headers.length; i++) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6166)             sheet.autoSizeColumn(i);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6167)         }
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6168) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6169)         // Write to output stream and create download content
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6170)         ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6171)         workbook.write(outputStream);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6172)         workbook.close();
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6173)         InputStream inputStream = new ByteArrayInputStream(outputStream.toByteArray());
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6174)         // Set the StreamedContent object for download
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6175)         fileForDownload = DefaultStreamedContent.builder()
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6176)                 .name("bills_details.xlsx")
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6177)                 .contentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6178)                 .stream(() -> new ByteArrayInputStream(outputStream.toByteArray()))
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6179)                 .build();
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6180)     }
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6181) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6182)     public void prepareDataForExcelExport() {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6183)         // Fetch all bills and their associated bill items and fees
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6184)         String jpql = "SELECT b FROM Bill b JOIN FETCH b.billItems bi JOIN FETCH bi.billFees WHERE b.createdAt BETWEEN :fromDate AND :toDate";
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6185)         Map<String, Object> params = new HashMap<>();
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6186)         params.put("fromDate", fromDate);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6187)         params.put("toDate", toDate);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6188) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6189)         List<Bill> bills = billFacade.findByJpql(jpql, params); // Assuming you have a facade to execute JPQL queries
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6190) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6191)         Set<Bill> uniqueBills = new HashSet<>(bills);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6192)         List<BillItem> allBillItems = new ArrayList<>();
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6193)         Map<BillItem, List<BillFee>> billItemToFeesMap = new HashMap<>();
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6194) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6195)         // Extract bill items and fees
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6196)         for (Bill bill : uniqueBills) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6197)             for (BillItem billItem : bill.getBillItems()) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6198)                 allBillItems.add(billItem);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6199)                 List<BillFee> fees = billItem.getBillFees();
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6200)                 billItemToFeesMap.put(billItem, fees);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6201)             }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6202)         }
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6203) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6204)         try {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6205)             createBillsBillItemsAndBillFeesTable(uniqueBills, allBillItems, billItemToFeesMap);
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6206)         } catch (IOException e) {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6207)             e.printStackTrace(); // Handle exceptions properly
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6208)         }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6209)     }
ba95f5fb93d (PasinduW99           2024-08-25 13:52:15 +0530  6210) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6211)     public void createBillItemTableByKeyword() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6212)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6213)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6214)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6215)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6216)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6217)         m.put("bType", BillType.OpdBill);
766a8b0bc2c (Dr M H B Ariyaratne  2023-10-04 15:44:34 +0530  6218)         m.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6219) 
766a8b0bc2c (Dr M H B Ariyaratne  2023-10-04 15:44:34 +0530  6220)         sql = "select bi "
766a8b0bc2c (Dr M H B Ariyaratne  2023-10-04 15:44:34 +0530  6221)                 + " from BillItem bi "
766a8b0bc2c (Dr M H B Ariyaratne  2023-10-04 15:44:34 +0530  6222)                 + " where bi.bill.department=:dep "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6223)                 + " and bi.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6224)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6225) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6226)         if (searchKeyword.getPatientName() != null && !searchKeyword.getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6227)             sql += " and  ((bi.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6228)             m.put("patientName", "%" + searchKeyword.getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6229)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6230) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6231)         if (searchKeyword.getPatientPhone() != null && !searchKeyword.getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6232)             sql += " and  ((bi.bill.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6233)             m.put("patientPhone", "%" + searchKeyword.getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6234)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6235) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6236)         if (searchKeyword.getBillNo() != null && !searchKeyword.getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6237)             sql += " and  ((bi.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6238)             m.put("billNo", "%" + searchKeyword.getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6239)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6240) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6241)         if (searchKeyword.getItemName() != null && !searchKeyword.getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6242)             sql += " and  ((bi.item.name) like :itemName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6243)             m.put("itemName", "%" + searchKeyword.getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6244)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6245) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6246)         if (searchKeyword.getToInstitution() != null && !searchKeyword.getToInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6247)             sql += " and  ((bi.bill.toInstitution.name) like :toIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6248)             m.put("toIns", "%" + searchKeyword.getToInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6249)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6250) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6251)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6252)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6253) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6254)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6255) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6256)         checkLabReportsApprovedBillItem(billItems);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6257) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6258)         //   searchBillItems = new LazyBillItem(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6259)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6260) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6261)     public String toCreateBillItemListForCreditCompany() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6262)         billItems = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6263)         return "/reportLab/credit_company_bill_item_list";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6264)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6265) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6266)     public void createBillItemListForCreditCompany() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6267)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6268)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6269)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6270)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6271)         m.put("bType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6272)         m.put("ins", getCreditCompany());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6273)         sql = "select bi from BillItem bi where bi.bill.creditCompany=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6274)                 + " and bi.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6275)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6276)         sql += " order by bi.id ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6277)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6278) //        checkLabReportsApprovedBillItem(billItems);
7762e7f2267 (Dr M H B Ariyaratne  2024-04-10 20:27:13 +0530  6279) //        
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6280)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6281) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6282)     public void createBillItemTableByKeywordAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6283)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6284) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6285)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6286)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6287)         m.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6288)         m.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6289)         m.put("bType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6290)         m.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6291) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6292)         sql = "select bi from BillItem bi where bi.bill.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6293)                 + " and bi.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6294)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6295) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6296)         if (searchKeyword.getPatientName() != null && !searchKeyword.getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6297)             sql += " and  ((bi.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6298)             m.put("patientName", "%" + searchKeyword.getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6299)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6300) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6301)         if (searchKeyword.getPatientPhone() != null && !searchKeyword.getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6302)             sql += " and  ((bi.bill.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6303)             m.put("patientPhone", "%" + searchKeyword.getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6304)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6305) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6306)         if (searchKeyword.getBillNo() != null && !searchKeyword.getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6307)             sql += " and  ((bi.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6308)             m.put("billNo", "%" + searchKeyword.getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6309)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6310) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6311)         if (searchKeyword.getItemName() != null && !searchKeyword.getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6312)             sql += " and  ((bi.item.name) like :itemName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6313)             m.put("itemName", "%" + searchKeyword.getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6314)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6315) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6316)         if (searchKeyword.getToInstitution() != null && !searchKeyword.getToInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6317)             sql += " and  ((bi.bill.toInstitution.name) like :toIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6318)             m.put("toIns", "%" + searchKeyword.getToInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6319)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6320) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6321)         sql += " order by bi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6322)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6323) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6324)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6325) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6326)         checkLabReportsApprovedBillItem(billItems);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6327) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6328)         //   searchBillItems = new LazyBillItem(tmp);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6329)     }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6330) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6331)     public void createPatientInvestigationsTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6332)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6333) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6334)         String sql = "select pi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6335)                 + " from PatientInvestigation pi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6336)                 + " join pi.investigation  i "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6337)                 + " join pi.billItem.bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6338)                 + " join b.patient.person p "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6339)                 + " where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6340)                 + " b.createdAt between :fromDate and :toDate  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6341) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6342)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6343) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6344)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6345)             sql += " and  (p.name like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6346)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6347)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6348) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6349)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
1f6e63f28ad (DamithDeshan         2024-05-15 22:56:09 +0530  6350)             sql += " and  (b.insId like :billNo or b.deptId like :billNo)";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6351)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6352)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6353) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6354)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6355)             sql += " and  (p.phone like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6356)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6357)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6358) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6359)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6360)             sql += " and  (i.name like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6361)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6362)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6363) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6364)         if (patientEncounter != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6365)             sql += "and pi.encounter=:en";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6366)             temMap.put("en", patientEncounter);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6367)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6368) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6369)         if (getReportKeyWord().getDepartment() != null) {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6370)             sql += " and b.toDepartment=:dep ";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6371)             temMap.put("dep", getReportKeyWord().getDepartment());
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6372)         }
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6373) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6374)         if (getReportKeyWord().getDepartmentFrom() != null) {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6375)             sql += " and b.fromDepartment=:depFrom ";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6376)             temMap.put("depFrom", getReportKeyWord().getDepartmentFrom());
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6377)         }
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6378) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6379)         sql += " order by pi.id desc  ";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6380) //    
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6381) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6382)         temMap.put("toDate", getToDate());
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6383)         temMap.put("fromDate", getFromDate());
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6384) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6385)         //System.err.println("Sql " + sql);
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6386)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6387)         checkRefundBillItems(patientInvestigations);
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6388) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6389)     }
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6390) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6391)     public void getPatientInvestigationsReportsTable() {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6392)         Date startTime = new Date();
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6393) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6394)         String sql = "select pi "
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6395)                 + " from PatientInvestigation pi "
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6396)                 + " join pi.investigation  i "
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6397)                 + " join pi.billItem.bill b "
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6398)                 + " join b.patient.person p "
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6399)                 + " where "
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6400)                 + " b.createdAt between :fromDate and :toDate  ";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6401) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6402)         Map temMap = new HashMap();
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6403) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6404)         if (institution == null) {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6405)             sql += " and b.collectingCentre in :ccs ";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6406)             temMap.put("ccs", sessionController.getLoggableCollectingCentres());
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6407)         } else {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6408)             sql += " and b.collectingCentre=:cc ";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6409)             temMap.put("cc", institution);
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6410)         }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530  6411) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6412)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6413)             sql += " and  (p.name like :patientName )";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6414)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6415)         }
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6416) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6417)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6418)             sql += " and  (b.insId like :billNo or b.deptId like :billNo)";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6419)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6420)         }
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6421) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6422)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6423)             sql += " and  (p.phone like :patientPhone )";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6424)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6425)         }
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6426) 
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6427)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6428)             sql += " and  (i.name like :itm )";
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6429)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6430)         }
ee2d7c06a9b (DamithDeshan         2024-08-24 00:35:23 +0530  6431) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6432)         if (getReportKeyWord().getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6433)             sql += " and b.toDepartment=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6434)             temMap.put("dep", getReportKeyWord().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6435)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6436) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6437)         if (getReportKeyWord().getDepartmentFrom() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6438)             sql += " and b.fromDepartment=:depFrom ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6439)             temMap.put("depFrom", getReportKeyWord().getDepartmentFrom());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6440)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6441) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6442)         sql += " order by pi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6443) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6444) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6445)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6446)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6447) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6448)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6449)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6450)         checkRefundBillItems(patientInvestigations);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6451) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6452)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6453) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6454)     public void createPatientInvestigationsTableByLoggedInstitution() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6455) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6456)         String sql = "select pi from PatientInvestigation pi join pi.investigation  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6457)                 + " i join pi.billItem.bill b join b.patient.person p where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6458)                 + " b.createdAt between :fromDate and :toDate  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6459)                 + " and b.institution =:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6460) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6461) //        String sql = "select pi from PatientInvestigation pi where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6462) //                + " pi.billItem.bill.createdAt between :fromDate and :toDate  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6463)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6464)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6465) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6466) //        if(webUserController.hasPrivilege("LabSearchBillLoggedInstitution")){
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6467) //            //System.out.println("inside ins");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6468) //            sql+="and b.institution =:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6469) //            temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6470) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6471)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6472)             sql += " and  ((p.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6473) //            sql += " and  ((pi.billItem.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6474)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6475)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6476) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6477)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6478)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6479)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6480)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6481) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6482)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6483)             sql += " and  ((p.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6484)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6485)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6486) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6487)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6488)             sql += " and  ((i.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6489)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6490)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6491) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6492)         sql += " order by pi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6493) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6494) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6495)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6496)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6497) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6498)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6499)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6500) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6501)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6502) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6503)     public void createPatientInvestigationsTableByLoggedDepartment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6504) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6505)         String sql = "select pi from PatientInvestigation pi join pi.investigation  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6506)                 + " i join pi.billItem.bill b join b.patient.person p where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6507)                 + " b.createdAt between :fromDate and :toDate  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6508)                 + " and b.department =:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6509) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6510) //        String sql = "select pi from PatientInvestigation pi where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6511) //                + " pi.billItem.bill.createdAt between :fromDate and :toDate  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6512)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6513)         temMap.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6514) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6515) //        if(webUserController.hasPrivilege("LabSearchBillLoggedInstitution")){
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6516) //            //System.out.println("inside ins");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6517) //            sql+="and b.institution =:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6518) //            temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6519) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6520)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6521)             sql += " and  ((p.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6522) //            sql += " and  ((pi.billItem.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6523)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6524)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6525) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6526)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6527)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6528)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6529)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6530) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6531)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6532)             sql += " and  ((p.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6533)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6534)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6535) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6536)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6537)             sql += " and  ((i.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6538)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6539)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6540) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6541)         sql += " order by pi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6542) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6543) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6544)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6545)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6546) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6547)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6548)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6549) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6550)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6551) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6552)     public void searchPatientInvestigations() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6553)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6554) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6555)         String sql = "select pi from PatientInvestigation pi join pi.investigation  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6556)                 + " i join pi.billItem.bill b join b.patient.person p where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6557)                 + " b.createdAt between :fromDate and :toDate  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6558)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6559)         sql += " order by pi.id ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6560)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6561)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6562)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6563) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6564)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6565) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6566)     public String fillUserPatientReportMobile() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6567)         return fillUserPatientReport(false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6568)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6569) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6570)     public String fillUserPatientReportWeb() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6571)         return fillUserPatientReport(true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6572)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6573) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6574)     public String toSearchReportsByBillNumber() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6575)         return "/report_search_by_bill_number";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6576)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6577) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6578)     private String fillUserPatientReport(boolean web) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6579)         String jpql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6580)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6581)         m.put("pn", getSessionController().getPhoneNo());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6582)         m.put("bn", getSessionController().getBillNo());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6583)         //System.out.println("getSessionController().getPhoneNo() = " + getSessionController().getPhoneNo());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6584)         if (getSessionController().getPhoneNo() == null || getSessionController().getPhoneNo().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6585)             getReportKeyWord().setString("Please Enter Phone Number");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6586)             JsfUtil.addErrorMessage("Please Enter Phone Number");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6587)             return "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6588)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6589)         if (getSessionController().getBillNo() == null || getSessionController().getBillNo().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6590)             getReportKeyWord().setString("Please Enter Bill Number");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6591)             JsfUtil.addErrorMessage("Please Enter Bill Number");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6592)             return "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6593)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6594) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6595)         jpql = " select pr from PatientInvestigation pr where pr.retired=false and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6596)                 + " (pr.billItem.bill.patient.person.phone)=:pn and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6597)                 + " ((pr.billItem.bill.insId)=:bn or (pr.billItem.bill.deptId)=:bn) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6598)                 + " order by pr.id desc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6599)         if (web) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6600)             m.put("pn", getSessionController().getPhoneNo());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6601)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6602)             m.put("pn", getSessionController().getPhoneNo().substring(0, 3) + "-" + getSessionController().getPhoneNo().substring(3));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6603)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6604)         m.put("bn", getSessionController().getBillNo());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6605) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6606)         userPatientInvestigations = patientInvestigationFacade.findByJpql(jpql, m, 20);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6607) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6608) //        return "/reports_list";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6609)         if (!userPatientInvestigations.isEmpty()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6610)             if (web) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6611)                 return "/reports_list_new";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6612)             } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6613)                 getReportKeyWord().setString("0");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6614)                 getSessionController().setPhoneNo("");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6615)                 getSessionController().setBillNo("");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6616)                 return "/reports_list_new_1";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6617)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6618)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6619)             getReportKeyWord().setString("Please Enter Correct Phone Number and Bill Number");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6620)             JsfUtil.addErrorMessage("Please Enter Correct Phone Number and Bill Number");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6621)             return "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6622)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6623)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6624) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6625)     public void createPatientInvestigationsTableSingle() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6626)         String sql = "select pi from PatientInvestigation pi join pi.investigation  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6627)                 + " i join pi.billItem.bill b join b.patient p where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6628)                 + " p=:pt ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6629)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6630)         sql += " order by pi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6631)         temMap.put("pt", getTransferController().getPatient());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6632) //        //////System.out.println("temMap = " + temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6633) //        //////System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6634)         patientInvestigationsSigle = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6635) //        //////System.out.println("patientInvestigations.size() = " + patientInvestigations.size());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6636)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6637) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6638)     public void createPatientInvestigationsTableAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6639)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6640) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6641)         String sql = "select pi from PatientInvestigation pi join pi.investigation  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6642)                 + " i join pi.billItem.bill b join b.patient.person p where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6643)                 + " b.createdAt between :fromDate and :toDate  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6644) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6645)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6646) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6647) //        if(webUserController.hasPrivilege("LabSearchBillLoggedInstitution")){
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6648) //            //System.out.println("inside ins");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6649) //            sql+="and b.institution =:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6650) //            temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6651) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6652)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6653)             sql += " and  ((p.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6654)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6655)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6656) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6657)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
d9fdbbec2f6 (Dr M H B Ariyaratne  2024-05-13 04:03:12 +0530  6658)             sql += " and  (b.insId like :billNo or b.deptId like :billNo)";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6659)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6660)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6661) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6662)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6663)             sql += " and  ((p.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6664)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6665)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6666) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6667)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6668)             sql += " and  ((i.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6669)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6670)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6671) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6672)         if (patientEncounter != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6673)             sql += "and pi.encounter=:en";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6674)             temMap.put("en", patientEncounter);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6675)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6676) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6677)         if (getReportKeyWord().getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6678)             sql += " and b.toDepartment=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6679)             temMap.put("dep", getReportKeyWord().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6680)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6681) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6682)         if (getReportKeyWord().getDepartmentFrom() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6683)             sql += " and b.fromDepartment=:depFrom ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6684)             temMap.put("depFrom", getReportKeyWord().getDepartmentFrom());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6685)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6686) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6687)         sql += " order by pi.id desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6688) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6689) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6690)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6691)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6692)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6693)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6694)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6695)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6696)         checkRefundBillItems(patientInvestigations);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6697) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6698)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6699) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6700)     public void searchApprovedReportsWithCancelledOrReturnedBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6701)         String sql = "select pr "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6702)                 + " from PatientReport pr"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6703)                 + " join pr.patientInvestigation pi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6704)                 + " join pi.billItem.bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6705)                 + " where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6706)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6707)                 //                + " and b.cancelled=:c "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6708)                 //                + " and pr.approved=:a "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6709)                 + " order by b.id";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6710) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6711)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6712)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6713)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6714)         temMap.put("c", true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6715)         temMap.put("a", true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6716)         patientReports = getPatientReportFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6717)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6718) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6719)     public void checkRefundBillItems(List<PatientInvestigation> pis) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6720)         for (PatientInvestigation pi : pis) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6721)             for (PatientReport pr : pi.getPatientReports()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6722)                 if (pr.getApproved()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6723)                     pi.getBillItem().getBill().setApprovedAnyTest(true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6724)                     break;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6725)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6726)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6727)             markRefundBillItem(pi);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6728)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6729)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6730) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6731)     public void markRefundBillItem(PatientInvestigation pi) {
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6732)         if (pi == null) {
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6733)             return;
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6734)         }
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6735)         if (pi.getBillItem() == null) {
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6736)             return;
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6737)         }
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6738)         if (pi.getBillItem().getId() == null) {
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6739)             return;
590e619d4bf (Buddhika             2023-11-03 21:11:45 +0530  6740)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6741)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6742)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6743)         sql = "select bi from BillItem bi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6744)                 + " where bi.referanceBillItem.id=:bi ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6745)         m.put("bi", pi.getBillItem().getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6746)         List<BillItem> bis = getBillItemFacade().findByJpql(sql, m);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6747)         if (bis.isEmpty()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6748)             pi.getBillItem().setTransRefund(false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6749)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6750)             pi.getBillItem().setTransRefund(true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6751)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6752)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6753) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6754)     public void fillPatientLabReports(Patient pt) {
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6755) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6756)         String sql = "select pi "
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6757)                 + "from PatientInvestigation pi "
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6758)                 + "join pi.billItem.bill b "
6bae0eb24e0 (Thiwanka Madushan    2023-12-01 15:25:19 +0530  6759)                 + "where b.patient=:cp "
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6760)                 + "and b.createdAt between :fromDate and :toDate ";
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6761) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6762)         Map temMap = new HashMap();
6bae0eb24e0 (Thiwanka Madushan    2023-12-01 15:25:19 +0530  6763)         temMap.put("cp", pt);
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6764) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6765)         sql += " order by pi.approveAt desc  ";
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6766) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6767)         temMap.put("toDate", getToDate());
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6768)         temMap.put("fromDate", getFromDate());
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6769) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6770)         //System.err.println("Sql " + sql);
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6771)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6772) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6773)     }
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6774) 
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6775)     public void fillPatientLabreportTable() {
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6776)         fillPatientLabReports(patient);
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6777)     }
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  6778) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6779)     public void createPatientInvestigationsTableAllByLoggedInstitution() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6780) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6781)         String sql = "select pi from PatientInvestigation pi join pi.investigation  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6782)                 + " i join pi.billItem.bill b join b.patient.person p where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6783)                 + " b.createdAt between :fromDate and :toDate  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6784)                 + " and b.institution =:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6785) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6786)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6787)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6788) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6789) //        if(webUserController.hasPrivilege("LabSearchBillLoggedInstitution")){
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6790) //            //System.out.println("inside ins");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6791) //            sql+="and b.institution =:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6792) //            temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6793) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6794)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6795)             sql += " and  ((p.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6796)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6797)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6798) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6799)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6800)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6801)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6802)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6803) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6804)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6805)             sql += " and  ((p.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6806)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6807)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6808) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6809)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6810)             sql += " and  ((i.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6811)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6812)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6813) 
c968f41f88d (Thiwanka Madushan    2023-11-28 12:13:32 +0530  6814)         sql += " order by pi.approveAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6815) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6816) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  6817)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6818)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6819) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6820)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6821)         patientInvestigations = getPatientInvestigationFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6822) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6823)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6824) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6825)     public void createPreBillsForReturn() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6826)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6827) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6828)         createPreBillsForReturn(BillType.PharmacyPre, BillType.PharmacySale);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6829) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6830)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6831) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6832)     public void createWholePreBillsForReturn() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6833)         createPreBillsForReturn(BillType.PharmacyWholesalePre, BillType.PharmacyWholeSale);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6834)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6835) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6836)     public void createPreBillsForReturn(BillType billType, BillType refBillType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6837)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6838)         String sql;
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6839)         Map<String, Object> temMap = new HashMap<>();
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6840)         if (getSearchKeyword().getItem() == null) {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6841)             sql = "select b from PreBill b where b.billType = :billType and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6842)                     + "b.institution = :ins and b.billedBill is null and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6843)                     + "b.department = :dept and b.referenceBill.billType = :refBillType and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6844)                     + "b.createdAt between :fromDate and :toDate and b.retired = false and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6845)                     + "b.referenceBill.cancelled = false ";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6846) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6847)             if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6848)                 sql += "and b.deptId like :billNo ";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6849)                 temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6850)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6851) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6852)             if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6853)                 sql += "and b.netTotal like :netTotal ";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6854)                 temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6855)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6856) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6857)             sql += "order by b.createdAt desc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6858) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6859)             temMap.put("billType", billType);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6860)             temMap.put("refBillType", refBillType);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6861)             temMap.put("toDate", toDate);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6862)             temMap.put("fromDate", fromDate);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6863)             temMap.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6864)             temMap.put("dept", getSessionController().getLoggedUser().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6865) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6866)             bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6867) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6868)         } else {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6869) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6870)             sql = "select DISTINCT(bi.bill) from BillItem bi where bi.bill.billType = :billType and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6871)                     + " bi.bill.institution=:ins and (bi.bill.billedBill is null) and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6872)                     + " bi.item=:item and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6873)                     + " bi.bill.department=:dept and "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6874)                     + " bi.bill.referenceBill.billType=:refBillType "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6875)                     + " and bi.createdAt between :fromDate and :toDate and bi.bill.retired=false "
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6876)                     // for remove cancel bills
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6877)                     + " and bi.bill.referenceBill.cancelled=false ";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6878) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6879)             if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6880)                 sql += " and  ((bi.bill.deptId) like :billNo )";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6881)                 temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6882)             }
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6883) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6884)             if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6885)                 sql += " and  ((bi.bill.netTotal) like :netTotal )";
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6886)                 temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6887)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6888) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6889)             sql += " order by bi.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6890) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6891)             temMap.put("billType", billType);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6892)             temMap.put("refBillType", refBillType);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6893)             temMap.put("toDate", toDate);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6894)             temMap.put("fromDate", fromDate);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6895)             temMap.put("item", getSearchKeyword().getItem());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6896)             temMap.put("ins", getSessionController().getInstitution());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6897)             temMap.put("dept", getSessionController().getLoggedUser().getDepartment());
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6898) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6899)             bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6900) 
d71e77424c9 (Senula88             2024-06-06 22:46:57 +0530  6901)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6902)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6903) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6904)     public BillBeanController getBillBean() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6905)         return billBean;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6906)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6907) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6908)     public void setBillBean(BillBeanController billBean) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6909)         this.billBean = billBean;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6910)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6911) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6912)     public void createPreBillsNotPaid() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6913)         bills = getBillBean().billsForTheDayNotPaid(BillType.PharmacyPre, getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6914)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6915) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6916)     public void createWholePreBillsNotPaid() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6917) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6918)         bills = getBillBean().billsForTheDayNotPaid(BillType.PharmacyWholesalePre, getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6919) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6920)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6921) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6922)     @Inject
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6923)     private BillController billController;
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6924) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6925)     @EJB
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6926)     private PharmaceuticalBillItemFacade pharmaceuticalBillItemFacade;
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6927) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6928)     private boolean printPreview = false;
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6929) 
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6930)     public String navigateToAddToStockBillPrint() {
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  6931)         printPreview = true;
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  6932)         duplicateBillView = true;
ff8e461bcd4 (H.K. Damith Deshan   2024-05-26 22:48:01 +0530  6933) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  6934)         return "/pharmacy/pharmacy_search_pre_bill_not_paid?faces-redirect=true";
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  6935)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6936) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530  6937)     public String navigateToItemizedSaleSummary() {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6938)         return "/opd/analytics/itemized_sale_summary?faces-redirect=true";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6939)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6940) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6941)     public String navigateToItemizedSaleReport() {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6942)         return "/opd/analytics/itemized_sale_report?faces-redirect=true";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530  6943)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6944) 
c35464b07d8 (Buddhika Ariyaratne  2024-09-13 03:17:06 +0530  6945)     public String navigateToItemizedSaleSummaryOpd() {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6946)         return "/opd/analytics/itemized_sale_summary?faces-redirect=true";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6947)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6948) 
c35464b07d8 (Buddhika Ariyaratne  2024-09-13 03:17:06 +0530  6949)     public String navigateToItemizedSaleReportOpd() {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530  6950)         return "/opd/analytics/itemized_sale_report?faces-redirect=true";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530  6951)     }
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530  6952) 
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530  6953)     public String navigateToIncomeBreakdownByCategoryOpd() {
c35464b07d8 (Buddhika Ariyaratne  2024-09-13 03:17:06 +0530  6954)         return "/opd/analytics/income_breakdown_by_category?faces-redirect=true";
c35464b07d8 (Buddhika Ariyaratne  2024-09-13 03:17:06 +0530  6955)     }
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530  6956) 
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6957)     public List<Payment> getPaymentDetals(Bill bill) {
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6958)         List<Payment> billPayments = new ArrayList<>();
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530  6959)         System.out.println("bill = " + bill);
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6960)         String jpql;
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6961)         Map temMap = new HashMap();
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6962) 
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6963)         jpql = "select p from Payment p "
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6964)                 + " where p.bill =:bill "
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6965)                 + " and p.retired =:ret ";
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530  6966) 
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6967)         temMap.put("bill", bill);
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6968)         temMap.put("ret", false);
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6969)         billPayments = paymentFacade.findByJpql(jpql, temMap);
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530  6970) 
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6971)         System.out.println("billPayments = " + billPayments);
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6972)         return billPayments;
bee45dad90c (DamithDeshan         2024-11-04 18:06:53 +0530  6973)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6974) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6975)     public void addToStock() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6976)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6977)         Date fromDate = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  6978)         Date toDate = null;
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6979) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6980)         bill = new Bill();
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6981) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6982)         bill.setBillDate(new Date());
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6983)         bill.setBillTime(new Date());
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6984)         bill.setCreatedAt(new Date());
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6985) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6986)         bill.setDeptId(billController.getBillNumberGenerator().departmentBillNumberGenerator(getSessionController().getDepartment(), getSessionController().getDepartment(), BillType.PharmacyAddtoStock, BillClassType.BilledBill));
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6987)         bill.setInsId(billController.getBillNumberGenerator().institutionBillNumberGenerator(getSessionController().getInstitution(), getSessionController().getDepartment(), BillType.PharmacyAddtoStock, BillClassType.BilledBill, BillNumberSuffix.NONE));
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6988) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6989)         bill.setBillClassType(BillClassType.Bill);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6990)         bill.setBillType(BillType.PharmacyAddtoStock);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6991)         bill.setBillTypeAtomic(BillTypeAtomic.PHARMACY_RETAIL_SALE_PRE_ADD_TO_STOCK);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6992) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6993)         bill.setCreater(getSessionController().getLoggedUser());
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6994)         bill.setDepartment(getSessionController().getDepartment());
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6995)         bill.setInstitution(sessionController.getInstitution());
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6996) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6997)         getBillFacade().create(bill);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  6998) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  6999)         List<BillItem> billItems = new ArrayList<>();
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7000) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  7001)         double totalValue = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7002) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7003)         for (Bill b : getSelectedBills()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7004)             b = getBillFacade().find(b.getId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7005)             if (b.getReferenceBill() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7006)                 JsfUtil.addErrorMessage("This Bill " + b.getDeptId() + " alrady Paid can't add to stock.");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7007)                 continue;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7008)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7009)             if (b.checkActiveCashPreBill()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7010)                 continue;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7011)             }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7012) 
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  7013)             totalValue += b.getNetTotal();
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7014) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7015)             for (BillItem bi : b.getBillItems()) {
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7016)                 BillItem nbi = new BillItem();
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7017)                 nbi.copy(bi);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7018)                 nbi.invertValue();
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7019)                 nbi.setBill(bill);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7020) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7021)                 billItemFacade.create(nbi);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7022) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7023)                 PharmaceuticalBillItem npi = new PharmaceuticalBillItem();
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7024)                 npi.copy(bi.getPharmaceuticalBillItem());
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7025)                 npi.invertValue(npi);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7026)                 npi.setBillItem(nbi);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7027) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7028)                 pharmaceuticalBillItemFacade.create(npi);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7029) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7030)                 nbi.setPharmaceuticalBillItem(npi);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7031) 
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7032)                 billItemFacade.edit(nbi);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7033)                 billItems.add(nbi);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7034)             }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7035) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7036)             Bill prebill = getPharmacyBean().reAddToStock(b, getSessionController().getLoggedUser(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7037)                     getSessionController().getDepartment(), BillNumberSuffix.PRECAN);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7038) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7039)             if (prebill != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7040)                 b.setCancelled(true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7041)                 b.setCancelledBill(prebill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7042)                 getBillFacade().edit(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7043)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7044)         }
9df63e1821a (DamithDeshan         2024-05-26 20:19:40 +0530  7045)         bill.setNetTotal(totalValue);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7046)         bill.setBillItems(billItems);
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7047)         getBillFacade().edit(bill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7048) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7049)         createPreBillsNotPaid();
9702aab5b10 (DamithDeshan         2024-05-26 15:22:27 +0530  7050)         printPreview = true;
73da990db92 (DamithDeshan         2024-05-26 21:31:47 +0530  7051)         duplicateBillView = false;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7052)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  7053) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7054)     public void cancelIssueToUnitBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7055)         if (cancellingIssueBill == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7056)             JsfUtil.addErrorMessage("Select a bill to cancel");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7057)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7058)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7059)         Bill b = cancellingIssueBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7060) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7061)         if (b.isCancelled() || b.isRefunded()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7062)             JsfUtil.addErrorMessage("Can not cancel already cancelled or returned bills");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7063)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7064)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7065)         if (b instanceof PreBill) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7066)             Bill prebill = getPharmacyBean().readdStockForIssueBills((PreBill) b, getSessionController().getLoggedUser(),
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7067)                     getSessionController().getDepartment(), BillNumberSuffix.DIC);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7068)             b.setCancelled(true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7069)             b.setCancelledBill(prebill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7070)             getBillFacade().edit(b);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7071)             JsfUtil.addSuccessMessage("Cancelled");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7072)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7073)             JsfUtil.addErrorMessage("Not an Issue Bill. Can not cancell");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7074)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7075) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7076)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7077) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7078)     private String createPharmacyPayKeyword(Map temMap) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7079)         String sql = "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7080)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7081)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7082)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7083)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7084) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7085)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7086)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7087)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7088)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7089) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7090)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7091)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7092)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7093)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7094) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7095)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7096)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7097)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7098)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7099) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7100)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7101)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7102)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7103)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7104) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7105)         if (getReportKeyWord().getDepartment() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7106)             sql += " and b.department=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7107)             temMap.put("dep", getReportKeyWord().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7108)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7109) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7110)         return sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7111) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7112)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7113) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7114)     public void createOpdBathcBillPreTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7115)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7116)         aceptPaymentBills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7117)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7118)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7119) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7120)         sql = "select b from PreBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7121)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7122)                 + " and b.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7123)                 //                + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7124)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7125)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7126) //                + " and b.deptId is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7127) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7128)         sql += createPharmacyPayKeyword(temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7129)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7130) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7131)         temMap.put("billType", BillType.OpdBathcBillPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7132)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7133)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7134)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7135) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7136)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7137)         aceptPaymentBills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7138) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7139)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7140) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7141)     public void createOpdBillSearch() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7142)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7143)         createTableByKeyword(BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7144) //        checkLabReportsApproved(bills);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7145) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7146)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7147) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7148)     public void createOpdBathcBillPreTablePaidOnly() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7149)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7150)         aceptPaymentBills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7151)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7152)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7153) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7154)         sql = "select b from PreBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7155)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7156)                 + " and b.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7157)                 + " and b.referenceBill.balance=0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7158)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7159)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7160) //                + " and b.deptId is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7161) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7162)         sql += createPharmacyPayKeyword(temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7163)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7164) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7165)         temMap.put("billType", BillType.OpdBathcBillPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7166)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7167)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7168)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7169) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7170)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7171)         aceptPaymentBills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7172) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7173)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7174) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7175)     public void createOpdBathcBillPreTableNotPaidOly() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7176)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7177)         aceptPaymentBills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7178)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7179)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7180) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7181)         List<Bill> abs = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7182) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7183)         sql = "select b from PreBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7184)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7185)                 + " and b.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7186)                 //                + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7187)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7188)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7189) //                + " and b.deptId is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7190) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7191)         sql += createPharmacyPayKeyword(temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7192)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7193) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7194)         temMap.put("billType", BillType.OpdBathcBillPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7195)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7196)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7197)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7198) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7199)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7200)         abs = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7201) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7202)         List<Bill> pbs = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7203)         Map temMap2 = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7204) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7205)         sql = "select b from PreBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7206)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7207)                 + " and b.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7208)                 + " and b.referenceBill.balance=0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7209)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7210)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7211) //                + " and b.deptId is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7212) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7213)         sql += createPharmacyPayKeyword(temMap2);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7214)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7215) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7216)         temMap2.put("billType", BillType.OpdBathcBillPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7217)         temMap2.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7218)         temMap2.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7219)         temMap2.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7220) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7221)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7222)         pbs = getBillFacade().findByJpqlWithoutCache(sql, temMap2, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7223) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7224)         abs.removeAll(pbs);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7225)         aceptPaymentBills.addAll(abs);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7226) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7227)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7228) 
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7229)     public String searchOpdBatchBillsSettledAtCashier() {
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7230)         bills = null;
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7231)         String jpql;
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7232)         Map m = new HashMap();
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7233)         jpql = "select b "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7234)                 + " from Bill b "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7235)                 + " where b.retired=false "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7236)                 + " and b.institution=:ins"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7237)                 + " and b.billedBill is null "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7238)                 + " and b.createdAt between :fromDate and :toDate"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7239)                 + " and b.deptId is not null "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7240)                 + " and b.cancelled=false"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7241)                 + " and b.referenceBill is not null ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7242)         jpql += " and b.billTypeAtomic = :billType ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7243)         m.put("billType", BillTypeAtomic.OPD_BATCH_BILL_TO_COLLECT_PAYMENT_AT_CASHIER);
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7244)         jpql += " order by b.createdAt desc  ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7245)         m.put("toDate", getToDate());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7246)         m.put("fromDate", getFromDate());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7247)         m.put("ins", getSessionController().getInstitution());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7248)         bills = getBillFacade().findByJpqlWithoutCache(jpql, m, TemporalType.TIMESTAMP, 25);
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7249)         return "/opd/opd_search_pre_bill?faces-redirect=true";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7250)     }
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  7251) 
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7252)     public String searchOpdBatchBillsToSettleAtCashier() {
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7253)         bills = null;
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7254)         String jpql;
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7255)         Map m = new HashMap();
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7256)         jpql = "select b "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7257)                 + " from Bill b "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7258)                 + " where b.retired=false "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7259)                 + " and b.institution=:ins"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7260)                 + " and b.billedBill is null "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7261)                 + " and b.createdAt between :fromDate and :toDate"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7262)                 + " and b.deptId is not null "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7263)                 + " and b.cancelled=false"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7264)                 + " and b.referenceBill is null ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7265)         jpql += " and b.billTypeAtomic = :billType ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7266)         m.put("billType", BillTypeAtomic.OPD_BATCH_BILL_TO_COLLECT_PAYMENT_AT_CASHIER);
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7267)         jpql += " order by b.createdAt desc  ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7268)         m.put("toDate", getToDate());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7269)         m.put("fromDate", getFromDate());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7270)         m.put("ins", getSessionController().getInstitution());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7271)         bills = getBillFacade().findByJpqlWithoutCache(jpql, m, TemporalType.TIMESTAMP, 25);
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7272)         return "/opd/opd_search_pre_bill?faces-redirect=true";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7273)     }
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7274) 
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7275)     public String searchOpdBatchBillsSettledOrNotSettled() {
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7276)         bills = null;
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7277)         String jpql;
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7278)         Map m = new HashMap();
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7279)         jpql = "select b "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7280)                 + " from Bill b "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7281)                 + " where b.retired=false "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7282)                 + " and b.institution=:ins"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7283)                 + " and b.billedBill is null "
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7284)                 + " and b.createdAt between :fromDate and :toDate"
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7285)                 + " and b.deptId is not null ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7286)         jpql += " and b.billTypeAtomic = :billType ";
a874f797164 (Dr. M H B Ariyaratne 2024-05-02 11:32:01 +0530  7287)         m.put("billType", BillTypeAtomic.OPD_BATCH_BILL_TO_COLLECT_PAYMENT_AT_CASHIER);
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7288)         jpql += " order by b.createdAt desc  ";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7289)         m.put("toDate", getToDate());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7290)         m.put("fromDate", getFromDate());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7291)         m.put("ins", getSessionController().getInstitution());
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7292)         bills = getBillFacade().findByJpqlWithoutCache(jpql, m, TemporalType.TIMESTAMP, 25);
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7293)         return "/opd/opd_search_pre_bill?faces-redirect=true";
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7294)     }
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  7295) 
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7296)     public String createOpdPreTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7297)         createPreTable(BillType.OpdPreBill);
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7298)         return "/opd/opd_search_pre_bill?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7299)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7300) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7301)     public void fillPatientBillsToPay() {
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7302)         if (patient == null) {
47e18e7aed2 (Dr M H B Ariyaratne  2024-02-24 16:47:07 +0530  7303)             JsfUtil.addErrorMessage("Please select a Patient");
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7304)             return;
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7305)         }
ac3cafa804b (Thiwanka Madushan    2024-01-10 17:11:37 +0530  7306)         fillPatientPreBills(BillType.OpdPreBill, patient, true, null);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7307)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7308) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7309)     public void fillPatientBillsPaid() {
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7310)         if (patient == null) {
47e18e7aed2 (Dr M H B Ariyaratne  2024-02-24 16:47:07 +0530  7311)             JsfUtil.addErrorMessage("Please select a Patient");
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7312)             return;
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7313)         }
ac3cafa804b (Thiwanka Madushan    2024-01-10 17:11:37 +0530  7314)         fillPatientPreBills(BillType.OpdPreBill, patient, null, false);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7315)     }
9ac514213c6 (Thiwanka Madushan    2023-12-01 12:28:59 +0530  7316) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7317)     public void fillPatientBillsPaidAndToPay() {
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7318)         if (patient == null) {
47e18e7aed2 (Dr M H B Ariyaratne  2024-02-24 16:47:07 +0530  7319)             JsfUtil.addErrorMessage("Please select a Patient");
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7320)             return;
cf82eab9ea9 (Senula88             2024-01-16 17:33:34 +0530  7321)         }
4ac707023a8 (Thiwanka Madushan    2024-01-10 17:00:06 +0530  7322)         fillPatientPreBills(BillType.OpdPreBill, patient, null, null);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7323)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7324) 
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7325)     public String createOpdPreTableNotPaid() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7326)         createPreTableNotPaid(BillType.OpdPreBill);
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7327)         return "/opd/opd_search_pre_bill?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7328)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7329) 
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7330)     public String createOpdPreTablePaid() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7331)         createPreTablePaid(BillType.OpdPreBill);
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7332)         return "/opd/opd_search_pre_bill?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7333)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7334) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7335)     public void fillPharmacyPreBillsToAcceptAtCashierGetPaid() {
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7336)         bills = null;
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7337)         String sql;
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7338)         Map temMap = new HashMap();
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7339) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7340)         sql = "select b from PreBill b "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7341)                 + " where b.billTypeAtomic = :billTypeAtomic "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7342)                 + " and b.institution=:ins "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7343)                 + " and b.billedBill is null "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7344)                 + " and b.createdAt between :fromDate and :toDate"
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7345)                 + " and b.retired=false "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7346)                 + " and b.deptId is not null "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7347)                 + " and b.cancelled=false"
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7348)                 + " and b.referenceBill is not null ";
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7349) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7350)         sql += createPharmacyPayKeyword(temMap);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7351)         sql += " order by b.createdAt desc  ";
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7352) //    
9dcc648db58 (Senula88             2024-05-03 17:19:53 +0530  7353)         temMap.put("billTypeAtomic", BillTypeAtomic.PHARMACY_RETAIL_SALE_PRE_TO_SETTLE_AT_CASHIER);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7354)         temMap.put("toDate", getToDate());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7355)         temMap.put("fromDate", getFromDate());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7356)         temMap.put("ins", getSessionController().getInstitution());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7357) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7358)         //System.err.println("Sql " + sql);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7359)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7360)     }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  7361) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7362)     public void fillPharmacyPreBillsToAcceptAtCashierNotPaid() {
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7363)         bills = null;
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7364)         String sql;
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7365)         Map temMap = new HashMap();
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7366) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7367)         sql = "select b from PreBill b "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7368)                 + " where b.billTypeAtomic = :billTypeAtomic "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7369)                 + " and b.institution=:ins "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7370)                 + " and b.billedBill is null "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7371)                 + " and b.createdAt between :fromDate and :toDate"
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7372)                 + " and b.retired=false "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7373)                 + " and b.billTypeAtomic is not null "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7374)                 + " and b.deptId is not null "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7375)                 + " and b.cancelled=false"
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7376)                 + " and b.referenceBill is null ";
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7377) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7378)         sql += createPharmacyPayKeyword(temMap);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7379)         sql += " order by b.createdAt desc  ";
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7380) //    
9dcc648db58 (Senula88             2024-05-03 17:19:53 +0530  7381)         temMap.put("billTypeAtomic", BillTypeAtomic.PHARMACY_RETAIL_SALE_PRE_TO_SETTLE_AT_CASHIER);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7382)         temMap.put("toDate", getToDate());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7383)         temMap.put("fromDate", getFromDate());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7384)         temMap.put("ins", getSessionController().getInstitution());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7385) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7386)         //System.err.println("Sql " + sql);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7387)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7388)     }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  7389) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7390)     public void fillPharmacyPreBillsToAcceptAtCashier() {
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7391)         bills = null;
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7392)         String sql;
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7393)         Map temMap = new HashMap();
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7394) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7395)         sql = "select b from PreBill b "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7396)                 + " where b.billTypeAtomic = :billTypeAtomic "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7397)                 + " and b.institution=:ins "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7398)                 + " and b.billedBill is null "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7399)                 + " and b.createdAt between :fromDate and :toDate"
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7400)                 + " and b.retired=false "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7401)                 + " and b.deptId is not null "
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7402)                 + " and b.cancelled=false";
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7403) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7404)         sql += createPharmacyPayKeyword(temMap);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7405)         sql += " order by b.createdAt desc  ";
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7406) //    
9dcc648db58 (Senula88             2024-05-03 17:19:53 +0530  7407)         temMap.put("billTypeAtomic", BillTypeAtomic.PHARMACY_RETAIL_SALE_PRE_TO_SETTLE_AT_CASHIER);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7408)         temMap.put("toDate", getToDate());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7409)         temMap.put("fromDate", getFromDate());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7410)         temMap.put("ins", getSessionController().getInstitution());
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7411) 
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7412)         //System.err.println("Sql " + sql);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7413)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7414)     }
513dd9c2262 (Senula88             2024-04-25 22:19:34 +0530  7415) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7416)     public void createPharmacyPreTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7417)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7418)         createPreTable(BillType.PharmacyPre);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  7419) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7420)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7421) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7422)     public void createPharmacyPreTableNotPaid() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7423)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7424)         createPreTableNotPaid(BillType.PharmacyPre);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  7425) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7426)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7427) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7428)     public void createPharmacyPreTablePaid() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7429)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7430)         createPreTablePaid(BillType.PharmacyPre);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  7431) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7432)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7433) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7434)     public void createPreTable(BillType bt) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7435)         createPreTable(bt, null);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7436)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7437) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7438)     public void createPreTable(BillType bt, Patient pt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7439)         bills = null;
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7440)         String jpql;
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7441)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7442) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7443)         jpql = "select b "
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7444)                 + " from PreBill b "
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7445)                 + " where b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7446)                 + " and b.institution=:ins"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7447)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7448)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7449)                 + " and b.deptId is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7450) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7451)         if (bt != null) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7452)             jpql += " and b.billType = :billType ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7453)             m.put("billType", bt);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7454)         }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7455) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7456)         if (pt != null) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7457)             jpql += " and b.patient=:pt ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7458)             m.put("pt", pt);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7459)         }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7460) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7461)         jpql += createPharmacyPayKeyword(m);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7462)         jpql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7463) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7464) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7465)         m.put("toDate", getToDate());
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7466)         m.put("fromDate", getFromDate());
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7467)         m.put("ins", getSessionController().getInstitution());
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7468) 
68ea99fe8df (Senula88             2024-01-17 12:17:13 +0530  7469)         bills = getBillFacade().findByJpqlWithoutCache(jpql, m, TemporalType.TIMESTAMP, 25);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7470) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7471)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7472) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7473)     public void fillPatientPreBills(BillType bt, Patient pt, Boolean paidOnly, Boolean toPayOnly) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7474)         bills = null;
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7475)         String jpql;
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7476)         Map m = new HashMap();
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7477) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7478)         jpql = "select b "
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7479)                 + " from PreBill b "
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7480)                 + " where b.retired=false "
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7481)                 + " and b.institution=:ins"
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7482)                 + " and b.billedBill is null "
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7483)                 + " and b.createdAt between :fromDate and :toDate"
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7484)                 + " and b.deptId is not null ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7485) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7486)         if (bt != null) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7487)             jpql += " and b.billType = :billType ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7488)             m.put("billType", bt);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7489)         }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7490) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7491)         if (pt != null) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7492)             jpql += " and b.patient=:pt ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7493)             m.put("pt", pt);
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7494)         }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7495) 
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7496)         if (paidOnly != null) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7497)             jpql += " and b.referenceBill is not null ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7498)         }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7499) 
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7500)         if (toPayOnly != null) {
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7501)             jpql += " and b.referenceBill is null ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7502)         }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7503) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7504)         jpql += " order by b.createdAt desc  ";
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7505) 
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7506)         m.put("toDate", getToDate());
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7507)         m.put("fromDate", getFromDate());
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7508)         m.put("ins", getSessionController().getInstitution());
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7509)         bills = getBillFacade().findByJpql(jpql, m, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7510) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7511)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7512) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7513)     public void createPreTableNotPaid(BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7514)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7515)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7516)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7517) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7518)         sql = "select b from PreBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7519)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7520)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7521)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7522)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7523)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7524)                 + " and b.deptId is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7525)                 + " and b.cancelled=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7526)                 + " and b.referenceBill is null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7527) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7528)         sql += createPharmacyPayKeyword(temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7529)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7530) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7531)         temMap.put("billType", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7532)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7533)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7534)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7535) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7536)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7537)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7538) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7539)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7540) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7541)     public void createPreTablePaid(BillType bt) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7542)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7543)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7544)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7545) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7546)         sql = "select b from PreBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7547)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7548)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7549)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7550)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7551)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7552)                 + " and b.deptId is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7553)                 + " and b.cancelled=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7554)                 + " and b.referenceBill is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7555) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7556)         sql += createPharmacyPayKeyword(temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7557)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7558) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7559)         temMap.put("billType", bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7560)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7561)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7562)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7563) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7564)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7565)         bills = getBillFacade().findByJpqlWithoutCache(sql, temMap, TemporalType.TIMESTAMP, 25);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7566) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7567)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7568) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7569)     public void createGrnPaymentTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7570)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7571)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7572)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7573) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7574)         sql = "select b from BilledBill b"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7575)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7576)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7577)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7578)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7579)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7580) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7581)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7582)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7583)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7584)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7585) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7586)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7587)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7588)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7589)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7590) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7591)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7592)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7593)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7594)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7595) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7596)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7597)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7598)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7599)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7600) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7601)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7602)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7603)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7604)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7605) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7606)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7607) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7608)         temMap.put("billType", BillType.GrnPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7609)         temMap.put("insTp", InstitutionType.Dealer);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7610)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7611)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7612)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7613) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7614)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7615)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7616) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7617)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7618) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7619)     public void createGrnPaymentTableStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7620)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7621)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7622)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7623) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7624)         sql = "select b from BilledBill b"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7625)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7626)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7627)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7628)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7629)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7630) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7631)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7632)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7633)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7634)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7635) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7636)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7637)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7638)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7639)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7640) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7641)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7642)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7643)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7644)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7645) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7646)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7647)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7648)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7649)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7650) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7651)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7652)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7653)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7654)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7655) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7656)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7657) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7658)         temMap.put("billType", BillType.GrnPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7659)         temMap.put("insTp", InstitutionType.StoreDealor);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7660)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7661)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7662)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7663) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7664)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7665)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7666) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7667)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7668) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7669)     public void createPharmacyPayment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7670)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7671) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7672)         InstitutionType[] institutionTypes = {InstitutionType.Dealer};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7673)         createGrnPaymentTable(Arrays.asList(institutionTypes), BillType.GrnPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7674) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7675)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7676) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7677)     public void createStorePayment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7678)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7679) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7680)         InstitutionType[] institutionTypes = {InstitutionType.StoreDealor};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7681)         createGrnPaymentTable(Arrays.asList(institutionTypes), BillType.GrnPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7682) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7683)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7684) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7685)     public void createStorePaharmacyPayment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7686)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7687) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7688)         InstitutionType[] institutionTypes = {InstitutionType.Dealer, InstitutionType.StoreDealor};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7689)         createGrnPaymentTable(Arrays.asList(institutionTypes), BillType.GrnPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7690) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7691)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7692) 
eb839f92fd6 (Buddhika Ariyaratne  2024-10-27 13:46:06 +0530  7693)     @Deprecated //Use supplierPaymentController
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7694)     public void createPharmacyPaymentPre() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7695)         InstitutionType[] institutionTypes = {InstitutionType.Dealer};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7696)         createGrnPaymentTable(Arrays.asList(institutionTypes), BillType.GrnPaymentPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7697)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7698) 
eb839f92fd6 (Buddhika Ariyaratne  2024-10-27 13:46:06 +0530  7699)     @Deprecated //Use supplierPaymentController
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7700)     public void createStorePaymentPre() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7701)         InstitutionType[] institutionTypes = {InstitutionType.StoreDealor};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7702)         createGrnPaymentTable(Arrays.asList(institutionTypes), BillType.GrnPaymentPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7703)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7704) 
eb839f92fd6 (Buddhika Ariyaratne  2024-10-27 13:46:06 +0530  7705)     @Deprecated //Use supplierPaymentController
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7706)     public void createStorePaharmacyPaymentPre() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7707)         InstitutionType[] institutionTypes = {InstitutionType.Dealer, InstitutionType.StoreDealor};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7708)         createGrnPaymentTable(Arrays.asList(institutionTypes), BillType.GrnPaymentPre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7709)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7710) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7711)     private void createGrnPaymentTable(List<InstitutionType> institutionTypes, BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7712)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7713)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7714)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7715) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7716)         sql = "select b from BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7717)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7718)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7719)                 + " and b.toInstitution.institutionType in :insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7720)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7721) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7722)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7723)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7724)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7725)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7726) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7727)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7728)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7729)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7730)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7731) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7732)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7733)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7734)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7735)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7736) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7737)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7738)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7739)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7740)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7741) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7742)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7743)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7744)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7745)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7746) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7747)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7748) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7749)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7750)         temMap.put("insTp", institutionTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7751)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7752)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7753)         //  temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7754) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7755)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7756) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7757)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7758) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7759)     public void createGrnPaymentTableAllStore() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7760)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7761)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7762)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7763) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7764)         sql = "select b from BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7765)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7766)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7767)                 + " and b.toInstitution.institutionType=:insTp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7768)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7769) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7770)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7771)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7772)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7773)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7774) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7775)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7776)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7777)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7778)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7779) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7780)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7781)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7782)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7783)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7784) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7785)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7786)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7787)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7788)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7789) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7790)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7791)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7792)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7793)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7794) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7795)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7796) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7797)         temMap.put("billType", BillType.GrnPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7798)         temMap.put("insTp", InstitutionType.StoreDealor);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7799)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7800)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7801)         //  temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7802) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7803)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7804)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7805) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7806)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7807) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7808)     @Deprecated
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7809)     public void searchDepartmentOpdBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7810)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7811) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7812)         if (fromDate != null && toDate != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7813) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7814)             long timeGapInMillis = toDate.getTime() - fromDate.getTime();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7815) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7816)             long daysGap = timeGapInMillis / (1000 * 60 * 60 * 24);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7817) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7818)             if (daysGap > 3) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7819) //                if (searchKeyword.getBillNo() == null && searchKeyword.getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7820) //                    JsfUtil.addErrorMessage("Please select upto 3 days or Use filtering data option");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7821) //                    return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7822) //                } else if (searchKeyword.getPatientName() == null && searchKeyword.getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7823) //                    JsfUtil.addErrorMessage("Please select upto 3 days or Use filtering data option");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7824) //                    return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7825) //                } else if (searchKeyword.getPatientPhone() == null && searchKeyword.getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7826) //                    JsfUtil.addErrorMessage("Please select upto 3 days or Use filtering data option");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7827) //                    return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7828) //                }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7829)                 JsfUtil.addErrorMessage("Please select upto 3 days");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7830)                 return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7831)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7832)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7833) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7834)         createTableByKeyword(BillType.OpdBill, null, sessionController.getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7835)         checkLabReportsApproved(bills);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  7836) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7837)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7838) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7839)     public void searchDepartmentOpdBillLights() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7840)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7841)         fillBills(BillType.OpdBill, null, sessionController.getDepartment());
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  7842) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7843)     }
a21992ac680 (Dr M H B Ariyaratne  2024-01-18 15:49:45 +0530  7844) 
e182cd8f78b (Thiwanka Madushan    2024-01-11 12:06:51 +0530  7845)     public void searchOpdBatchBills() {
e182cd8f78b (Thiwanka Madushan    2024-01-11 12:06:51 +0530  7846)         Date startTime = new Date();
e182cd8f78b (Thiwanka Madushan    2024-01-11 12:06:51 +0530  7847)         createTableByKeyword(BillType.OpdBathcBill, institution, department, fromInstitution, fromDepartment, toInstitution, toDepartment);
e182cd8f78b (Thiwanka Madushan    2024-01-11 12:06:51 +0530  7848)         checkLabReportsApproved(bills);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  7849) 
e182cd8f78b (Thiwanka Madushan    2024-01-11 12:06:51 +0530  7850)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7851) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7852)     public void searchOpdBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7853)         Date startTime = new Date();
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  7854)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  7855)         billTypesAtomics.add(BillTypeAtomic.OPD_BILL_WITH_PAYMENT);
3a1d517b77d (Senula88             2024-07-02 09:57:22 +0530  7856)         billTypesAtomics.add(BillTypeAtomic.PACKAGE_OPD_BILL_WITH_PAYMENT);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  7857)         billTypesAtomics.add(BillTypeAtomic.OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  7858)         createTableByKeyword(billTypesAtomics, institution, department, fromInstitution, fromDepartment, toInstitution, toDepartment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7859)         checkLabReportsApproved(bills);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  7860) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7861)     }
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530  7862) 
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7863)     @Deprecated
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7864)     public void listPaymentsExtra() {
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7865)         String jpql = "select p "
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7866)                 + " from Payment p "
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7867)                 + " where p.retired=:ret "
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7868)                 + " p.createdAt between :fd and :td ";
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7869)         Map params = new HashMap<>();
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7870)         params.put("ret", false);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7871)         params.put("fd", fromDate);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7872)         params.put("td", toDate);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7873)         if (institution != null) {
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7874)             jpql = " and p.institution=:ins ";
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7875)             params.put("ins", institution);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7876)         }
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7877)         if (department != null) {
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7878)             jpql = " and p.department=:dep ";
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7879)             params.put("dep", department);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7880)         }
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7881)         payments = paymentFacade.findByJpql(jpql, params);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7882) 
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7883)     }
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  7884) 
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530  7885)     public void searchChannelBills() {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7886)         Date startTime = new Date();
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7887)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7888)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_BOOKING_WITHOUT_PAYMENT);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7889)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_BOOKING_WITH_PAYMENT);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7890)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_BOOKING_WITH_PAYMENT_ONLINE);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7891)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_CANCELLATION_WITH_PAYMENT_FOR_CREDIT_SETTLED_BOOKINGS);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7892)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_PAYMENT_FOR_BOOKING_BILL);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7893)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_CANCELLATION_WITH_PAYMENT);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7894)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_CANCELLATION_WITHOUT_PAYMENT);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7895)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_REFUND);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7896)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_REFUND_WITH_PAYMENT);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7897)         billTypesAtomics.add(BillTypeAtomic.CHANNEL_REFUND_WITH_PAYMENT_FOR_CREDIT_SETTLED_BOOKINGS);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7898)         createTableByKeywordForChannelBills(billTypesAtomics, institution, department, fromInstitution, fromDepartment, toInstitution, toDepartment, staff, speciality);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  7899) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  7900)     }
777c82c8c23 (Dr M H B Ariyaratne  2023-12-01 06:58:49 +0530  7901) 
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7902)     public void fillOpdSummaryByItem() {
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7903)         Date startTime = new Date();
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7904)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7905)         ReportTemplateType type = ReportTemplateType.ITEM_SUMMARY_BY_BILL;
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7906)         billTypesAtomics.add(BillTypeAtomic.OPD_BILL_WITH_PAYMENT);
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7907)         billTypesAtomics.add(BillTypeAtomic.PACKAGE_OPD_BILL_WITH_PAYMENT);
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7908)         billTypesAtomics.add(BillTypeAtomic.OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER);
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7909)         bundle = reportTemplateController.generateReport(type,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7910)                 billTypesAtomics,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7911)                 null,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7912)                 fromDate,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7913)                 toDate,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7914)                 institution,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7915)                 department,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7916)                 fromInstitution,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7917)                 fromDepartment,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7918)                 toInstitution,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7919)                 toDepartment,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7920)                 webUser,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7921)                 creditCompany,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7922)                 startBillId,
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7923)                 endBillId);
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7924) 
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7925)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  7926) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7927)     public void searchChannelProfessionalPaymentBills() {
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7928)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7929)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7930)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7931)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7932)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7933)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7934)         createTableByKeyword(billTypesAtomics, institution, department, null, null, null, null);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7935)         checkLabReportsApproved(bills);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7936) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7937)     }
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  7938) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  7939)     public void searchOpdProfessionalPaymentBills() {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  7940)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
93066eadd8c (Dr. M H B Ariyaratne 2024-08-06 10:07:47 +0530  7941)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
93066eadd8c (Dr. M H B Ariyaratne 2024-08-06 10:07:47 +0530  7942)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
93066eadd8c (Dr. M H B Ariyaratne 2024-08-06 10:07:47 +0530  7943)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
93066eadd8c (Dr. M H B Ariyaratne 2024-08-06 10:07:47 +0530  7944)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  7945)         bundle = createBundleByKeywordForBills(billTypesAtomics, institution, department, null, null, null, null);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  7946)         bundle.calculateTotalByBills();
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  7947)     }
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7948) 
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7949)     public void searchMyProfessionalPaymentBills() {
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7950)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7951)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7952)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7953)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7954)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7955)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7956)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7957)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7958)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7959)         bundle = billService.createBundleByKeywordForBills(billTypesAtomics,
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7960)                 institution,
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7961)                 department,
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7962)                 null,
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7963)                 null,
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7964)                 null,
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7965)                 null,
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7966)                 sessionController.getLoggedUser(),
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7967)                 fromDate,
d15889de3e8 (Buddhika Ariyaratne  2024-11-03 11:03:50 +0530  7968)                 toDate,
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7969)                 searchKeyword);
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7970)         bundle.calculateTotalByBills();
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  7971)     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  7972) 
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7973)     public void processWhtReport() {
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7974)         switch (reportType) {
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7975)             case "individualReceipts":
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7976)                 processWhtReceipts();
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7977)                 break;
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7978)             case "monthlySummary":
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7979)                 processWhtMonthlySymmary();
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7980)                 break;
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7981)             case "consultantSummary":
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7982)                 processWhtConsultantSymmary();
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7983)                 break;
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7984)         }
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7985)     }
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7986) 
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7987)     public void processWhtReceipts() {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7988)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  7989)         if (searchType == null || searchType.isEmpty()) {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7990)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7991)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7992)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7993)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7994)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7995)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7996)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7997)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7998)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  7999)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8000)         } else if (searchType.equalsIgnoreCase("op")) {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8001)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8002)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8003)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8004)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8005)         } else if (searchType.equalsIgnoreCase("ip")) {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8006)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8007)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8008)         } else if (searchType.equalsIgnoreCase("ch")) {
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8009)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8010)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8011)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8012)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8013)         }
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8014)         bundle = createBundleForBills(billTypesAtomics, institution, department, null, null, null, null);
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8015)         bundle.calculateTotalNetTotalTaxByBills();
bc10884cb47 (Dr M H B Ariyaratne  2024-10-18 14:47:00 +0530  8016)         reportType = "irs";
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8017)     }
4213bdf1f12 (Dr M H B Ariyaratne  2024-10-18 13:48:53 +0530  8018) 
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8019)     public void processWhtMonthlySymmary() {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8020)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8021)         if (searchType == null || searchType.isEmpty()) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8022)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8023)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8024)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8025)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8026)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8027)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8028)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8029)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8030)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8031)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8032)         } else if (searchType.equalsIgnoreCase("op")) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8033)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8034)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8035)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8036)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8037)         } else if (searchType.equalsIgnoreCase("ip")) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8038)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8039)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8040)         } else if (searchType.equalsIgnoreCase("ch")) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8041)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8042)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8043)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8044)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8045)         }
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8046)         bundle = createBundleForBills(billTypesAtomics, institution, department, null, null, null, null);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8047)         bundle.calculateTotalNetTotalTaxByBills();
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8048)         reportType = "mr";
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8049) 
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8050)     }
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8051) 
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8052)     public void processWhtConsultantSymmary() {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8053)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8054)         if (searchType == null || searchType.isEmpty()) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8055)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8056)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8057)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8058)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8059)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8060)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8061)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8062)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8063)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8064)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8065)         } else if (searchType.equalsIgnoreCase("op")) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8066)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8067)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8068)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8069)             billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8070)         } else if (searchType.equalsIgnoreCase("ip")) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8071)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8072)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8073)         } else if (searchType.equalsIgnoreCase("ch")) {
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8074)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8075)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8076)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8077)             billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8078)         }
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8079)         bundle = createBundleForBills(billTypesAtomics, institution, department, null, null, null, null);
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8080)         bundle.calculateTotalNetTotalTaxByBills();
37a93a528a5 (SandithP2001         2024-10-28 16:06:45 +0530  8081)         reportType = "cr";
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8082) 
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8083)     }
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8084) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8085)     public void updateToStaffForChannelProfessionalPaymentBills() {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8086)         Date startTime = new Date();
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8087)         System.out.println("Start time: " + startTime);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8088) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8089)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8090)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8091)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8092)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES_RETURN);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8093)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8094)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8095)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8096)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8097)         billTypesAtomics.add(BillTypeAtomic.INWARD_SERVICE_PROFESSIONAL_PAYMENT_BILL);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8098)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8099)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8100)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8101)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8102) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8103)         System.out.println("Bill types for atomic operations added: " + billTypesAtomics);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8104) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8105)         createTableByKeywordForBillsWithoutToStaff(billTypesAtomics, institution, department, null, null, null, null);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8106) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8107)         for (Bill b : bills) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8108)             Staff bs = null;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8109)             if (b.getToStaff() == null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8110)                 System.out.println("Bill without ToStaff found: " + b.getId());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8111) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8112)                 List<BillFee> bfs;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8113)                 if (b.getBillFees() == null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8114)                     bfs = billBean.getBillFee(b);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8115)                     System.out.println("Fetched BillFees from billBean: " + bfs);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8116)                 } else {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8117)                     for (BillFee tbf : b.getBillFees()) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8118)                     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8119)                     bfs = b.getBillFees();
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8120)                     System.out.println("BillFees already present: " + bfs);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8121)                 }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8122) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8123)                 if (bfs != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8124)                     boolean sameStaff = true;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8125) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8126)                     for (BillFee bf : bfs) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8127)                         System.out.println("bf = " + bf);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8128) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8129)                         if (bf.getReferenceBillFee() != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8130)                             if (bf.getReferenceBillFee().getStaff() != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8131)                                 if (bs == null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8132)                                     bs = bf.getReferenceBillFee().getStaff();
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8133)                                     System.out.println("Initial staff set: " + bs);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8134)                                 } else {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8135)                                     if (!bs.equals(bf.getReferenceBillFee().getStaff())) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8136)                                         sameStaff = false;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8137)                                         System.out.println("Different staff found: " + bf.getReferenceBillFee().getStaff());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8138)                                     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8139)                                 }
9ae58bc1491 (Piyankara N W M G P  2024-08-03 12:02:28 +0530  8140) 
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8141)                             } else {
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8142)                                 if (bf.getReferenceBillFee().getBill().getStaff() != null) {
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8143)                                     if (bs == null) {
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8144)                                         bs = bf.getReferenceBillFee().getBill().getStaff();
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8145)                                         System.out.println("Initial staff set: " + bs);
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8146)                                     } else {
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8147)                                         if (!bs.equals(bf.getReferenceBillFee().getBill().getStaff())) {
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8148)                                             sameStaff = false;
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8149)                                             System.out.println("Different staff found: " + bf.getReferenceBillFee().getBill().getStaff());
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8150)                                         }
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8151)                                     }
c4fb004f5af (buddhika75           2024-07-31 11:48:45 +0530  8152)                                 }
9ae58bc1491 (Piyankara N W M G P  2024-08-03 12:02:28 +0530  8153) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8154)                             }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8155)                         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8156)                     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8157) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8158)                     if (sameStaff && bs != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8159)                         b.setToStaff(bs);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8160)                         if (b.getComments() == null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8161)                             b.setComments("To Staff Added " + bs + " at " + new Date());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8162)                         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8163)                         billFacade.edit(b);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8164)                         System.out.println("Bill updated with ToStaff: " + b.getToStaff());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8165)                         bs = null;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8166)                     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8167)                 }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8168)             }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8169)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8170) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8171)         System.out.println("Update process completed.");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8172)     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8173) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8174)     public void searchProfessionalPaymentBills() {
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8175)         Date startTime = new Date();
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8176)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8177)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8178)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8179)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8180)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8181)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8182)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8183)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8184)         billTypesAtomics.add(BillTypeAtomic.INWARD_SERVICE_PROFESSIONAL_PAYMENT_BILL);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8185)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8186)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8187)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8188)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8189) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8190)         createTableByKeyword(billTypesAtomics, institution, department, null, null, null, null);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8191) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8192)     }
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8193) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8194)     public void searchChannelProfessionalPaymentBillFees() {
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8195)         Date startTime = new Date();
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8196)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8197)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8198)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8199)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8200)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8201)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8202)         createTableByKeywordForBillFees(billTypesAtomics, institution, department, null, null, null, null);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  8203) 
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8204)     }
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530  8205) 
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8206)     public void searchOpdProfessionalPaymentBillFees() {
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8207)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8208)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8209)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8210)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8211)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  8212)         bundle = createBundleByKeywordForBillFees(billTypesAtomics, institution, department, null, null, null, null, category);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  8213)         bundle.calculateTotalsForProfessionalFees();
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8214)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  8215) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8216)     public String searchOpdProfessionalPayments() {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8217)         List<BillTypeAtomic> billTypesAtomics = new ArrayList<>();
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8218)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8219)         billTypesAtomics.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8220)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8221)         billTypesAtomics.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8222)         createTableByKeywordForBillFee(billTypesAtomics, institution, department, null, null, null, null, staff);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8223)         createTableByKeywords(billTypesAtomics, institution, department, null, null, null, null, staff);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8224)         return "/opd/opd_doctor_payments_done";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8225)     }
987aaa194a1 (buddhika75           2024-07-31 07:55:39 +0530  8226) 
f7b477032f0 (Dr M H B Ariyaratne  2023-11-06 07:52:18 +0530  8227)     public void listOpdBatcuBills() {
f7b477032f0 (Dr M H B Ariyaratne  2023-11-06 07:52:18 +0530  8228)         Date startTime = new Date();
f7b477032f0 (Dr M H B Ariyaratne  2023-11-06 07:52:18 +0530  8229)         createTableByKeyword(BillType.OpdBathcBill, institution, department);
f7b477032f0 (Dr M H B Ariyaratne  2023-11-06 07:52:18 +0530  8230)         checkLabReportsApproved(bills);
f7b477032f0 (Dr M H B Ariyaratne  2023-11-06 07:52:18 +0530  8231)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8232) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8233)     public void listOpdBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8234)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8235)         createTableByKeyword(BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8236)         checkLabReportsApproved(bills);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8237) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8238)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8239) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8240)     @Deprecated
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8241)     public void createCollectingCentreBillSearch() {
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  8242)         createCCBillTableByKeyword(BillType.CollectingCentreBill, null, null);
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8243)         //checkLabReportsApproved(bills);
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8244) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8245)     }
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  8246) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8247)     public void collectingCentreBillSearch() {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8248)         createCcBillList(BillType.CollectingCentreBill, null, null);
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8249)     }
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8250) 
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8251)     public void createStaffCreditBillList() {
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8252)         String jpql;
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8253)         Map m = new HashMap();
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8254)         List<BillTypeAtomic> btas = new ArrayList<>();
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8255)         jpql = "select b from Bill b "
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8256)                 + "where b.toStaff is not null "
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8257)                 + "and b.createdAt between :fromDate and :toDate "
2c2e4486e7e (Lawan Samarasekara   2024-08-03 15:23:43 +0530  8258)                 + "and b.retired = false "
2c2e4486e7e (Lawan Samarasekara   2024-08-03 15:23:43 +0530  8259)                 + "and b.cancelled = false "
2c2e4486e7e (Lawan Samarasekara   2024-08-03 15:23:43 +0530  8260)                 + "and b.refunded = false ";
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8261)         jpql += " and b.billTypeAtomic in :btas ";
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8262)         if (staff != null) {
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8263)             jpql += " and b.toStaff=:staff ";
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8264)             m.put("staff", staff);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8265)         }
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8266) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8267)         btas.addAll(BillTypeAtomic.findByServiceType(ServiceType.OPD));
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8268)         btas.addAll(BillTypeAtomic.findByServiceType(ServiceType.CHANNELLING));
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8269)         btas.removeAll(BillTypeAtomic.findByCategory(BillCategory.PAYMENTS));
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8270) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8271)         jpql += " order by b.createdAt desc";
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8272) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8273)         m.put("fromDate", fromDate);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8274)         m.put("toDate", toDate);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8275)         m.put("btas", btas);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8276) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8277)         System.out.println("m = " + m);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8278)         System.out.println("jpql = " + jpql);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8279) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8280)         bills = getBillFacade().findByJpql(jpql, m, TemporalType.TIMESTAMP);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8281)         System.out.println("bills = " + bills);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8282)     }
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8283) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8284)     public void createGeneralCreditBillList() {
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8285)         String jpql;
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8286)         Map m = new HashMap();
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8287)         List<BillTypeAtomic> btas = new ArrayList<>();
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8288)         jpql = "select b from Bill b "
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8289)                 + "where b.creditCompany is not null "
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8290)                 + "and b.createdAt between :fromDate and :toDate "
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8291)                 + "and b.retired = false ";
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8292)         jpql += " and b.billTypeAtomic in :btas ";
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  8293) 
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8294)         if (creditCompany != null) {
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8295)             jpql += " and b.creditCompany=:cc ";
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8296)             m.put("cc", creditCompany);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8297)         }
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8298) 
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8299)         btas.addAll(BillTypeAtomic.findByServiceType(ServiceType.OPD));
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8300)         btas.addAll(BillTypeAtomic.findByServiceType(ServiceType.CHANNELLING));
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8301)         btas.removeAll(BillTypeAtomic.findByCategory(BillCategory.PAYMENTS));
2c2e4486e7e (Lawan Samarasekara   2024-08-03 15:23:43 +0530  8302)         btas.removeAll(BillTypeAtomic.findByCategory(BillCategory.CANCELLATION));
2c2e4486e7e (Lawan Samarasekara   2024-08-03 15:23:43 +0530  8303)         btas.removeAll(BillTypeAtomic.findByCategory(BillCategory.REFUND));
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  8304) 
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8305)         jpql += " order by b.createdAt desc";
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8306) 
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8307)         m.put("fromDate", fromDate);
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8308)         m.put("toDate", toDate);
8fb7b2e5204 (buddhika75           2024-08-06 03:36:37 +0530  8309)         m.put("btas", btas);
3292029025c (buddhika75           2024-08-03 06:33:41 +0530  8310) 
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8311)         System.out.println("m = " + m);
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8312)         System.out.println("jpql = " + jpql);
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8313) 
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8314)         bills = getBillFacade().findByJpql(jpql, m, TemporalType.TIMESTAMP);
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8315)         System.out.println("bills = " + bills);
0dd9975b48a (buddhika75           2024-08-03 05:24:58 +0530  8316)     }
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  8317) 
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  8318)     public void createCCBillTableByKeyword(BillType billType, Institution ins, Department dep) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8319)         billLights = null;
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8320)         String sql;
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8321)         Map temMap = new HashMap();
d6b311f7aff (Buddhika             2024-09-06 02:06:36 +0530  8322)         sql = "select new com.divudi.light.common.BillLight(bill.id, bill.deptId, bill.createdAt, bill.fromInstitution.name, bill.institution.name, bill.toDepartment.name, bill.creater.name, bill.patient.person.name, bill.patient.person.phone, bill.total, bill.discount, bill.netTotal, bill.patient.id) "
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8323)                 + " from BilledBill bill "
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8324)                 + " where bill.billType = :billType "
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8325)                 + " and bill.createdAt between :fromDate and :toDate "
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8326)                 + " and bill.retired=false ";
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  8327) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8328)         if (ins != null) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8329)             sql += " and bill.institution=:ins ";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8330)             temMap.put("ins", ins);
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8331)         }
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8332) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8333)         if (dep != null) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8334)             sql += " and bill.department=:dep ";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8335)             temMap.put("dep", dep);
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8336)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  8337) 
b406961ed75 (DamithDeshan         2024-07-09 20:41:13 +0530  8338)         if (getInstitution() != null) {
b406961ed75 (DamithDeshan         2024-07-09 20:41:13 +0530  8339)             sql += " and  ((bill.fromInstitution) =:ccName )";
b406961ed75 (DamithDeshan         2024-07-09 20:41:13 +0530  8340)             temMap.put("ccName", getInstitution());
b406961ed75 (DamithDeshan         2024-07-09 20:41:13 +0530  8341)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  8342) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  8343)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
b406961ed75 (DamithDeshan         2024-07-09 20:41:13 +0530  8344)             sql += " and  ((bill.fromInstitution.institutionCode) like :code )";
b406961ed75 (DamithDeshan         2024-07-09 20:41:13 +0530  8345)             temMap.put("code", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
b406961ed75 (DamithDeshan         2024-07-09 20:41:13 +0530  8346)         }
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8347) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8348)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8349)             sql += " and  ((bill.patient.person.name) like :patientName )";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8350)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8351)         }
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8352) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8353)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8354)             sql += " and  ((bill.patient.person.phone) like :patientPhone )";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8355)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8356)         }
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8357) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8358)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8359)             sql += " and  (((bill.insId) like :billNo )or((bill.deptId) like :billNo ))";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8360)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8361)         }
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8362) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8363)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8364)             sql += " and  ((bill.netTotal) like :netTotal )";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8365)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8366)         }
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8367) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8368)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8369)             sql += " and  ((bill.total) like :total )";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8370)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8371)         }
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8372)         sql += " order by bill.createdAt desc  ";
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8373) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8374)         temMap.put("billType", billType);
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8375)         temMap.put("toDate", toDate);
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8376)         temMap.put("fromDate", fromDate);
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530  8377) 
ea087085e66 (DamithDeshan         2024-07-03 16:10:52 +0530  8378)         billLights = getBillFacade().findLightsByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8379)     }
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530  8380) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8381)     public void createCcBillList(BillType billType, Institution ins, Department dep) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8382)         bills = null;
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8383)         String sql;
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8384)         Map temMap = new HashMap();
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8385)         sql = "select bill "
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8386)                 + " from BilledBill bill "
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8387)                 + " where bill.billType = :billType "
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8388)                 + " and bill.createdAt between :fromDate and :toDate "
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8389)                 + " and bill.retired=false ";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8390) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8391)         if (ins != null) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8392)             sql += " and bill.institution=:ins ";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8393)             temMap.put("ins", ins);
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8394)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8395) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8396)         if (dep != null) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8397)             sql += " and bill.department=:dep ";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8398)             temMap.put("dep", dep);
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8399)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8400) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8401)         if (getInstitution() != null) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8402)             sql += " and  ((bill.fromInstitution) =:ccName )";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8403)             temMap.put("ccName", getInstitution());
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8404)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8405) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8406)         if (getSearchKeyword().getCode() != null && !getSearchKeyword().getCode().trim().equals("")) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8407)             sql += " and  ((bill.fromInstitution.institutionCode) like :code )";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8408)             temMap.put("code", "%" + getSearchKeyword().getCode().trim().toUpperCase() + "%");
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8409)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8410) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8411)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8412)             sql += " and  ((bill.patient.person.name) like :patientName )";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8413)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8414)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8415) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8416)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8417)             sql += " and  ((bill.patient.person.phone) like :patientPhone )";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8418)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8419)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8420) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8421)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8422)             sql += " and  (((bill.insId) like :billNo )or((bill.deptId) like :billNo ))";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8423)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8424)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8425) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8426)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8427)             sql += " and  ((bill.netTotal) like :netTotal )";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8428)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8429)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8430) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8431)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8432)             sql += " and  ((bill.total) like :total )";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8433)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8434)         }
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8435)         sql += " order by bill.createdAt desc  ";
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8436) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8437)         temMap.put("billType", billType);
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8438)         temMap.put("toDate", toDate);
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8439)         temMap.put("fromDate", fromDate);
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8440) 
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8441)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
029a0079140 (Buddhika Ariyaratne  2024-09-24 04:33:08 +0530  8442)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8443) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8444)     public void listOpdBilledBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8445)         listBills(BillType.OpdBill, BilledBill.class, false, false, null, null, null, null, null, null);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8446)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8447) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8448)     public void listBills(BillType billType, Class billClass, Boolean onlyCancelledBills, Boolean onlyReturnedBills,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8449)             Institution fromInstitution, Department fromDepartment,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8450)             Institution toInstitution, Department toDepartment,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8451)             Doctor referredDoctor, Institution referredInstitution) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8452)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8453)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8454)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8455) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8456)         sql = "select b from Bill b where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8457)                 + " and b.createdAt between :fromDate and :toDate and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8458) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8459)         if (billClass != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8460)             sql += " and type(b.bill)=:class ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8461)             temMap.put("class", billClass);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8462)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8463) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8464)         if (onlyCancelledBills == true) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8465)             sql += " and b.cancelled=:cancelled ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8466)             temMap.put("cancelled", true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8467)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8468)         if (onlyReturnedBills == true) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8469)             sql += " and b.refunded=:refunded ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8470)             temMap.put("refunded", true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8471)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8472)         if (fromInstitution != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8473)             sql += " and b.fromInstitution=:fromIns ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8474)             temMap.put("fromIns", fromInstitution);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8475)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8476)         if (fromDepartment != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8477)             sql += " and b.fromDepartment=:fromDepartment ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8478)             temMap.put("fromDepartment", fromDepartment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8479)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8480)         if (toInstitution != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8481)             sql += " and b.toInstitution=:toIns ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8482)             temMap.put("toIns", toInstitution);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8483)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8484)         if (toDepartment != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8485)             sql += " and b.toDepartment=:toDepartment ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8486)             temMap.put("toDepartment", toDepartment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8487)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8488)         if (referredDoctor != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8489)             sql += " and b.referredBy=:referredDoctor ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8490)             temMap.put("fromIns", referredDoctor);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8491)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8492)         if (referredInstitution != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8493)             sql += " and b.referredByInstitution=:referredInstitution ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8494)             temMap.put("fromDepartment", referredInstitution);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8495)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8496) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8497)         /**
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8498)          *
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8499)          *
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8500)          *
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8501)          *
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8502)          * temp.setStaff(staff); temp.setToStaff(toStaff);
a3684348a93 (Dr M H B Ariyaratne  2023-12-19 06:03:25 +0530  8503)          * temp.setReferredBy(referredBy); temp.setReferenceNumber(referralId);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8504)          * temp.setReferredByInstitution(referredByInstitution);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8505)          * temp.setCreditCompany(creditCompany);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8506)          * temp.setCollectingCentre(collectingCentre);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8507)          *
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8508)          */
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8509)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8510) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8511)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8512)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8513)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8514) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8515)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8516) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8517)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8518) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8519)     public void fillOpdClients() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8520)         fillClients(BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8521)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8522) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8523)     public void fillClients(BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8524)         patients = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8525)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8526)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8527) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8528)         sql = "select distinct(b.patient) from BilledBill b where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8529)                 + " and b.createdAt between :fromDate and :toDate and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8530) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8531)         if (fromDepartment != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8532)             sql += " and b.fromDepartment=:fdep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8533)             temMap.put("fdep", fromDepartment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8534)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8535)         if (toDepartment != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8536)             sql += " and b.toDepartment=:tdep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8537)             temMap.put("tdep", toDepartment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8538)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8539) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8540)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8541) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8542)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8543)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8544)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8545) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8546)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8547)         patients = getPatientFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8548) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8549)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8550) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8551)     public void createTableByKeyword(BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8552)         fillBills(billType, null, null);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8553)     }
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  8554) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8555)     public void fillBills(BillType billType, Institution ins, Department dep) {
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8556)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8557)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8558)         Map temMap = new HashMap();
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530  8559)         sql = "select new com.divudi.light.common.BillLight(bill.id, bill.deptId, bill.createdAt, bill.institution.name, bill.toDepartment.name, bill.creater.name, bill.patient.person.name, bill.patient.person.phone, bill.total, bill.discount, bill.netTotal, bill.patient.id) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8560)                 + " from BilledBill bill "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8561)                 + " where bill.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8562)                 + " and bill.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8563)                 + " and bill.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8564)         if (ins != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8565)             sql += " and bill.institution=:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8566)             temMap.put("ins", ins);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8567)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8568) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8569)         if (dep != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8570)             sql += " and bill.department=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8571)             temMap.put("dep", dep);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8572)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8573) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8574)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8575)             sql += " and  ((bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8576)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8577)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8578) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8579)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8580)             sql += " and  ((bill.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8581)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8582)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8583) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8584)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8585)             sql += " and  (((bill.insId) like :billNo )or((bill.deptId) like :billNo ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8586)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8587)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8588) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8589)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8590)             sql += " and  ((bill.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8591)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8592)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8593) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8594)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8595)             sql += " and  ((bill.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8596)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8597)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8598)         sql += " order by bill.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8599) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8600)         temMap.put("billType", billType);
540e6b28f10 (DamithDeshan         2024-04-18 16:09:34 +0530  8601)         temMap.put("toDate", toDate);
540e6b28f10 (DamithDeshan         2024-04-18 16:09:34 +0530  8602)         temMap.put("fromDate", fromDate);
4774a9d9681 (Thiwanka Madushan    2024-01-10 11:03:11 +0530  8603) 
540e6b28f10 (DamithDeshan         2024-04-18 16:09:34 +0530  8604)         billLights = getBillFacade().findLightsByJpql(sql, temMap, TemporalType.TIMESTAMP);
39795bd5851 (Dr M H B Ariyaratne  2024-04-25 04:35:19 +0530  8605) 
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8606)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8607) 
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8608)     public List<Bill> fillBills(BillType billType, Institution ins, Department dep, Patient patient) {
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8609)         return fillBills(billType, ins, dep, patient, 10);
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8610)     }
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8611) 
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8612)     public List<Bill> fillBills(BillType billType, Institution ins, Department dep, Patient patient, Integer maxCount) {
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8613)         List<Bill> bs;
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8614)         String jpql;
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8615)         Map m = new HashMap();
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8616)         jpql = "select bill"
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8617)                 + " from BilledBill bill "
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8618)                 + " where bill.retired=:ret ";
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8619)         m.put("ret", false);
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8620)         if (billType != null) {
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8621)             jpql += " and bill.billType=:billType ";
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8622)             m.put("billType", billType);
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8623)         }
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8624) 
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8625)         if (ins != null) {
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8626)             jpql += " and bill.institution=:ins ";
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8627)             m.put("ins", ins);
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8628)         }
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8629) 
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8630)         if (dep != null) {
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8631)             jpql += " and bill.department=:dep ";
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8632)             m.put("dep", dep);
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8633)         }
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8634)         if (patient != null) {
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8635)             jpql += " and  bill.patient=:pt";
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8636)             m.put("pt", patient);
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8637)         }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8638) 
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8639)         jpql += " order by bill.id desc  ";
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8640) 
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8641)         bs = getBillFacade().findByJpql(jpql, m, TemporalType.TIMESTAMP, maxCount);
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8642) 
a5cae1a63a8 (Dr M H B Ariyaratne  2023-12-01 15:17:17 +0530  8643)         return bs;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8644)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8645) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8646)     public List<BillLight> listBillsLights(
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8647)             BillType billType,
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8648)             Institution ins,
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8649)             Department dep,
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8650)             SearchKeyword searchKw,
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8651)             Date fd,
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8652)             Date td) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8653)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8654)         Map temMap = new HashMap();
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530  8655)         sql = "select new com.divudi.light.common.BillLight(bill.id, bill.deptId, bill.createdAt, bill.institution.name, bill.toDepartment.name, bill.creater.name, bill.patient.person.name, bill.patient.person.phone, bill.total, bill.discount, bill.netTotal, bill.patient.id) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8656)                 + " from BilledBill bill "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8657)                 + " where bill.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8658)                 + " and bill.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8659)                 + " and bill.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8660)         if (ins != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8661)             sql += " and bill.institution=:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8662)             temMap.put("ins", ins);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8663)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8664)         if (dep != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8665)             sql += " and bill.department=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8666)             temMap.put("dep", dep);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8667)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8668)         if (searchKw != null && !searchKw.getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8669)             sql += " and  ((bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8670)             temMap.put("patientName", "%" + searchKw.getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8671)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8672)         if (searchKw != null && searchKw.getPatientPhone() != null && !searchKw.getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8673)             sql += " and  ((bill.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8674)             temMap.put("patientPhone", "%" + searchKw.getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8675)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8676)         if (searchKw != null && searchKw.getBillNo() != null && !searchKw.getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8677)             sql += " and  (((bill.insId) like :billNo )or((bill.deptId) like :billNo ))";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8678)             temMap.put("billNo", "%" + searchKw.getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8679)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8680)         if (searchKw != null && searchKw.getNetTotal() != null && !searchKw.getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8681)             sql += " and  ((bill.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8682)             temMap.put("netTotal", "%" + searchKw.getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8683)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8684)         if (searchKw != null && searchKw.getTotal() != null && !searchKw.getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8685)             sql += " and  ((bill.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8686)             temMap.put("total", "%" + searchKw.getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8687)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8688)         sql += " order by bill.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8689)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8690)         temMap.put("toDate", td);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8691)         temMap.put("fromDate", fd);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8692)         return (List<BillLight>) getBillFacade().findLightsByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8693)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8694) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  8695)     @Deprecated
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8696)     public void createTableByKeyword(BillType billType, Institution ins, Department dep) {
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  8697)         createTableByKeyword(billType, ins, dep, null, null, null, null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  8698)     }
a947820d798 (buddhika75           2024-07-09 10:27:27 +0530  8699) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  8700)     public ReportTemplateRowBundle createBundleByKeywordForBills(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8701)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8702)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8703)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8704)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8705)             Department toDep) {
2a6d4531d0f (Dr M H B Ariyaratne  2024-10-31 08:53:52 +0530  8706)         return billService.createBundleByKeywordForBills(billTypesAtomics, ins, dep, fromIns, fromDep, toIns, toDep, null, fromDate, toDate, searchKeyword);
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8707)     }
41dd708742c (Dr M H B Ariyaratne  2024-10-19 02:09:23 +0530  8708) 
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8709)     public ReportTemplateRowBundle createBundleForBills(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8710)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8711)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8712)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8713)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8714)             Department toDep) {
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8715)         ReportTemplateRowBundle outputBundle = new ReportTemplateRowBundle();
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8716)         List<ReportTemplateRow> outputRows;
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8717)         bills = null;
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8718)         String jpql;
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8719)         Map params = new HashMap();
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8720) 
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8721)         jpql = "select new com.divudi.data.ReportTemplateRow(b) "
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8722)                 + " from Bill b "
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8723)                 + " where b.billTypeAtomic in :billTypesAtomics "
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8724)                 + " and b.createdAt between :fromDate and :toDate "
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8725)                 + " and b.retired=false ";
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8726) 
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8727)         if (ins != null) {
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8728)             jpql += " and b.institution=:ins ";
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8729)             params.put("ins", ins);
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8730)         }
d8cca8a7b61 (Dr M H B Ariyaratne  2024-10-18 20:22:34 +0530  8731) 
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8732)         if (dep != null) {
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8733)             jpql += " and b.department=:dep ";
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8734)             params.put("dep", dep);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8735)         }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8736) 
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8737)         if (toDep != null) {
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8738)             jpql += " and b.toDepartment=:todep ";
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8739)             params.put("todep", toDep);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8740)         }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8741) 
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8742)         if (fromDep != null) {
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8743)             jpql += " and b.fromDepartment=:fromdep ";
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8744)             params.put("fromdep", fromDep);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8745)         }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8746) 
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8747)         if (fromIns != null) {
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8748)             jpql += " and b.fromInstitution=:fromins ";
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8749)             params.put("fromins", fromIns);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8750)         }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8751) 
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8752)         if (toIns != null) {
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8753)             jpql += " and b.toInstitution=:toins ";
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8754)             params.put("toins", toIns);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8755)         }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8756) 
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8757)         jpql += " order by b.createdAt desc  ";
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8758) 
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8759)         params.put("billTypesAtomics", billTypesAtomics);
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8760)         params.put("toDate", getToDate());
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8761)         params.put("fromDate", getFromDate());
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8762)         System.out.println("params = " + params);
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8763)         System.out.println("jpql = " + jpql);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8764) 
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8765)         outputRows = (List<ReportTemplateRow>) getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
b364261fa6f (Dr M H B Ariyaratne  2024-10-19 01:13:45 +0530  8766)         System.out.println("outputRows = " + outputRows);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8767)         outputBundle.setReportTemplateRows(outputRows);
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8768)         return outputBundle;
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8769)     }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530  8770) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8771)     public void createTableByKeyword(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8772)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8773)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8774)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8775)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8776)             Department toDep) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8777)         bills = null;
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8778)         String sql;
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8779)         Map temMap = new HashMap();
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8780) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8781)         sql = "select b "
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8782)                 + " from Bill b "
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8783)                 + " where b.billTypeAtomic in :billTypesAtomics "
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8784)                 + " and b.createdAt between :fromDate and :toDate "
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8785)                 + " and b.retired=false ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8786) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8787)         if (ins != null) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8788)             sql += " and b.institution=:ins ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8789)             temMap.put("ins", ins);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8790)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8791) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8792)         if (dep != null) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8793)             sql += " and b.department=:dep ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8794)             temMap.put("dep", dep);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8795)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8796) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8797)         if (toDep != null) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8798)             sql += " and b.toDepartment=:todep ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8799)             temMap.put("todep", toDep);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8800)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8801) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8802)         if (fromDep != null) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8803)             sql += " and b.fromDepartment=:fromdep ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8804)             temMap.put("fromdep", fromDep);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8805)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8806) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8807)         if (fromIns != null) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8808)             sql += " and b.fromInstitution=:fromins ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8809)             temMap.put("fromins", fromIns);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8810)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8811) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8812)         if (toIns != null) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8813)             sql += " and b.toInstitution=:toins ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8814)             temMap.put("toins", toIns);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8815)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8816) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8817)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8818)             sql += " and  ((b.patient.person.name) like :patientName )";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8819)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8820)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8821) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8822)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8823)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8824)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8825)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8826) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8827)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8828)             sql += " and  b.deptId like :billNo";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8829)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8830)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8831) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8832)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8833)             sql += " and  ((b.netTotal) like :netTotal )";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8834)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8835)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8836) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8837)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8838)             sql += " and  ((b.total) like :total )";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8839)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8840)         }
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8841) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8842)         sql += " order by b.createdAt desc  ";
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8843) //    
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8844)         temMap.put("billTypesAtomics", billTypesAtomics);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8845)         temMap.put("toDate", getToDate());
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8846)         temMap.put("fromDate", getFromDate());
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8847) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8848)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8849) 
8e2fbddf6b4 (Dr M H B Ariyaratne  2024-06-29 09:31:49 +0530  8850)     }
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530  8851) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8852)     public void createTableByKeywordForChannelBills(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8853)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8854)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8855)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8856)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8857)             Department toDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8858)             Staff consultant,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8859)             Speciality speciality
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530  8860)     ) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8861)         bills = null;
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8862)         String sql;
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8863)         Map temMap = new HashMap();
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8864) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8865)         sql = "select b "
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8866)                 + " from Bill b "
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8867)                 + " where b.billTypeAtomic in :billTypesAtomics "
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8868)                 + " and b.createdAt between :fromDate and :toDate "
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8869)                 + " and b.retired=false ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8870) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8871)         if (ins != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8872)             sql += " and b.institution=:ins ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8873)             temMap.put("ins", ins);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8874)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8875) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8876)         if (dep != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8877)             sql += " and b.department=:dep ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8878)             temMap.put("dep", dep);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8879)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8880) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8881)         if (toDep != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8882)             sql += " and b.toDepartment=:todep ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8883)             temMap.put("todep", toDep);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8884)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8885) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8886)         if (fromDep != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8887)             sql += " and b.fromDepartment=:fromdep ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8888)             temMap.put("fromdep", fromDep);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8889)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8890) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8891)         if (fromIns != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8892)             sql += " and b.fromInstitution=:fromins ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8893)             temMap.put("fromins", fromIns);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8894)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8895) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8896)         if (toIns != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8897)             sql += " and b.toInstitution=:toins ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8898)             temMap.put("toins", toIns);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8899)         }
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530  8900) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8901)         if (consultant != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8902)             sql += " and b.singleBillSession.sessionInstance.originatingSession.staff=:toStaff ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8903)             temMap.put("toStaff", consultant);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8904)         }
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530  8905) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8906)         if (speciality != null) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8907)             sql += " and b.singleBillSession.sessionInstance.originatingSession.staff.speciality=:sp ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8908)             temMap.put("sp", speciality);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8909)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8910) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8911)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8912)             sql += " and  ((b.patient.person.name) like :patientName )";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8913)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8914)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8915) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8916)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8917)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8918)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8919)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8920) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8921)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8922)             sql += " and  b.deptId like :billNo";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8923)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8924)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8925) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8926)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8927)             sql += " and  ((b.netTotal) like :netTotal )";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8928)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8929)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8930) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8931)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8932)             sql += " and  ((b.total) like :total )";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8933)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8934)         }
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8935) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8936)         sql += " order by b.createdAt desc  ";
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8937) //    
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8938)         temMap.put("billTypesAtomics", billTypesAtomics);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8939)         temMap.put("toDate", getToDate());
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8940)         temMap.put("fromDate", getFromDate());
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8941) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8942)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8943) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  8944)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  8945) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8946)     public void createTableByKeywords(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8947)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8948)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8949)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8950)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8951)             Department toDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  8952)             Staff stf) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8953)         bills = null;
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8954)         String sql;
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8955)         Map temMap = new HashMap();
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8956) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8957)         sql = "select b "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8958)                 + " from Bill b "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8959)                 + " where b.billTypeAtomic in :billTypesAtomics "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8960)                 + " and b.createdAt between :fromDate and :toDate "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8961)                 + " and b.retired=false ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8962) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8963)         if (ins != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8964)             sql += " and b.institution=:ins ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8965)             temMap.put("ins", ins);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8966)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8967) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8968)         if (dep != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8969)             sql += " and b.department=:dep ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8970)             temMap.put("dep", dep);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8971)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8972) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8973)         if (toDep != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8974)             sql += " and b.toDepartment=:todep ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8975)             temMap.put("todep", toDep);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8976)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8977) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8978)         if (fromDep != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8979)             sql += " and b.fromDepartment=:fromdep ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8980)             temMap.put("fromdep", fromDep);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8981)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8982) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8983)         if (fromIns != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8984)             sql += " and b.fromInstitution=:fromins ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8985)             temMap.put("fromins", fromIns);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8986)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8987) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8988)         if (toIns != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8989)             sql += " and b.toInstitution=:toins ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8990)             temMap.put("toins", toIns);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8991)         }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  8992) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8993)         if (stf != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8994)             sql += " and b.toStaff=:staff ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8995)             temMap.put("staff", stf);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8996)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8997) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8998)         sql += " order by b.createdAt desc  ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  8999) //    
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9000)         temMap.put("billTypesAtomics", billTypesAtomics);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9001)         temMap.put("toDate", getToDate());
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9002)         temMap.put("fromDate", getFromDate());
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9003) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9004)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9005) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9006)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  9007) 
4b06d91d03c (buddhika75           2024-08-06 06:57:59 +0530  9008)     public void createTableByKeywordForBillFees(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9009)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9010)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9011)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9012)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9013)             Department toDep) {
4b06d91d03c (buddhika75           2024-08-06 06:57:59 +0530  9014)         createTableByKeywordForBillFees(billTypesAtomics, ins, dep, fromIns, fromDep, toIns, toDep, null);
4b06d91d03c (buddhika75           2024-08-06 06:57:59 +0530  9015)     }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9016) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9017)     public ReportTemplateRowBundle createBundleByKeywordForBillFees(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9018)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9019)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9020)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9021)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9022)             Department toDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9023)             Category cat) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9024)         ReportTemplateRowBundle outputBundle = new ReportTemplateRowBundle();
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9025)         List<ReportTemplateRow> outputRows;
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9026)         String sql;
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9027)         Map temMap = new HashMap();
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9028) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9029)         sql = "select new com.divudi.data.ReportTemplateRow(bf) "
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9030)                 + " from BillFee bf "
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9031)                 + " where bf.bill.billTypeAtomic in :billTypesAtomics "
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9032)                 + " and bf.bill.createdAt between :fromDate and :toDate "
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9033)                 + " and bf.bill.retired=false ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9034) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9035)         if (ins != null) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9036)             sql += " and bf.bill.institution=:ins ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9037)             temMap.put("ins", ins);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9038)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9039) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9040)         if (dep != null) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9041)             sql += " and bf.bill.department=:dep ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9042)             temMap.put("dep", dep);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9043)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9044) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9045)         if (toDep != null) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9046)             sql += " and bf.bill.toDepartment=:todep ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9047)             temMap.put("todep", toDep);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9048)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9049) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9050)         if (fromDep != null) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9051)             sql += " and bf.bill.fromDepartment=:fromdep ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9052)             temMap.put("fromdep", fromDep);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9053)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9054) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9055)         if (fromIns != null) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9056)             sql += " and bf.bill.fromInstitution=:fromins ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9057)             temMap.put("fromins", fromIns);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9058)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9059) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9060)         if (toIns != null) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9061)             sql += " and bf.bill.toInstitution=:toins ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9062)             temMap.put("toins", toIns);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9063)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9064) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9065)         if (cat != null) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9066)             sql += " and bf.referenceBillFee.billItem.bill.category=:rbfcc ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9067)             temMap.put("rbfcc", cat);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9068)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9069) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9070)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9071)             sql += " and  ((bf.bill.patient.person.name) like :patientName )";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9072)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9073)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9074) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9075)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9076)             sql += " and  ((bf.bill.patient.person.phone) like :patientPhone )";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9077)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9078)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9079) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9080)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9081)             sql += " and  bf.bill.deptId like :billNo";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9082)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9083)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9084) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9085)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9086)             sql += " and  ((bf.bill.netTotal) like :netTotal )";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9087)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9088)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9089) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9090)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9091)             sql += " and  ((bf.bill.total) like :total )";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9092)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9093)         }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530  9094) 
9194c978ee0 (Lawan Samarasekara   2024-10-29 10:55:04 +0530  9095)         if (mrnNo != null && !mrnNo.isEmpty()) {
9194c978ee0 (Lawan Samarasekara   2024-10-29 10:55:04 +0530  9096)             sql += " and UPPER(bf.patient.phn) LIKE :phn ";
9194c978ee0 (Lawan Samarasekara   2024-10-29 10:55:04 +0530  9097)             temMap.put("phn", "%" + mrnNo.toUpperCase() + "%");
9194c978ee0 (Lawan Samarasekara   2024-10-29 10:55:04 +0530  9098)         }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9099) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9100)         sql += " order by bf.bill.createdAt desc  ";
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9101) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9102)         temMap.put("billTypesAtomics", billTypesAtomics);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9103)         temMap.put("toDate", getToDate());
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9104)         temMap.put("fromDate", getFromDate());
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9105) 
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9106)         outputRows = (List<ReportTemplateRow>) getBillFacade().findLightsByJpql(sql, temMap, TemporalType.TIMESTAMP);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9107)         outputBundle.setReportTemplateRows(outputRows);
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9108)         return outputBundle;
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9109)     }
b8835b09b12 (Buddhika Ariyaratne  2024-10-07 04:13:44 +0530  9110) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9111)     public void createTableByKeywordForBillFees(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9112)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9113)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9114)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9115)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9116)             Department toDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9117)             Category cat) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9118) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9119)         String sql;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9120)         Map temMap = new HashMap();
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9121) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9122)         sql = "select bf "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9123)                 + " from BillFee bf "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9124)                 + " where bf.bill.billTypeAtomic in :billTypesAtomics "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9125)                 + " and bf.bill.createdAt between :fromDate and :toDate "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9126)                 + " and bf.bill.retired=false ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9127) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9128)         if (ins != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9129)             sql += " and bf.bill.institution=:ins ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9130)             temMap.put("ins", ins);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9131)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9132) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9133)         if (dep != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9134)             sql += " and bf.bill.department=:dep ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9135)             temMap.put("dep", dep);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9136)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9137) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9138)         if (toDep != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9139)             sql += " and bf.bill.toDepartment=:todep ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9140)             temMap.put("todep", toDep);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9141)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9142) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9143)         if (fromDep != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9144)             sql += " and bf.bill.fromDepartment=:fromdep ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9145)             temMap.put("fromdep", fromDep);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9146)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9147) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9148)         if (fromIns != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9149)             sql += " and bf.bill.fromInstitution=:fromins ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9150)             temMap.put("fromins", fromIns);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9151)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9152) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9153)         if (toIns != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9154)             sql += " and bf.bill.toInstitution=:toins ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9155)             temMap.put("toins", toIns);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9156)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9157) 
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  9158)         if (cat != null) {
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  9159)             sql += " and bf.referenceBillFee.billItem.bill.category=:rbfcc ";
4b06d91d03c (buddhika75           2024-08-06 06:57:59 +0530  9160)             temMap.put("rbfcc", cat);
ac0676d7bd7 (buddhika75           2024-08-06 06:22:36 +0530  9161)         }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  9162) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9163)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9164)             sql += " and  ((bf.bill.patient.person.name) like :patientName )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9165)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9166)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9167) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9168)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9169)             sql += " and  ((bf.bill.patient.person.phone) like :patientPhone )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9170)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9171)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9172) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9173)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9174)             sql += " and  bf.bill.deptId like :billNo";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9175)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9176)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9177) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9178)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9179)             sql += " and  ((bf.bill.netTotal) like :netTotal )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9180)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9181)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9182) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9183)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9184)             sql += " and  ((bf.bill.total) like :total )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9185)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9186)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9187) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9188)         sql += " order by bf.bill.createdAt desc  ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9189) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9190)         temMap.put("billTypesAtomics", billTypesAtomics);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9191)         temMap.put("toDate", getToDate());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9192)         temMap.put("fromDate", getFromDate());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9193) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9194)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9195)         System.out.println("Bill fees retrieved: " + billFees.size());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9196)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  9197) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9198)     public void createTableByKeywordForBillFee(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9199)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9200)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9201)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9202)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9203)             Department toDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9204)             Staff stf) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9205)         createTableByKeywordBillFee(billTypesAtomics, ins, dep, fromIns, fromDep, toIns, toDep, stf);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9206)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530  9207) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9208)     public void createTableByKeywordBillFee(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9209)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9210)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9211)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9212)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9213)             Department toDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9214)             Staff stf) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9215) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9216)         String sql;
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9217)         Map temMap = new HashMap();
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9218) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9219)         sql = "select bf "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9220)                 + " from BillFee bf "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9221)                 + " where bf.bill.billTypeAtomic in :billTypesAtomics "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9222)                 + " and bf.bill.createdAt between :fromDate and :toDate "
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9223)                 + " and bf.bill.retired=false ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9224) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9225)         if (ins != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9226)             sql += " and bf.bill.institution=:ins ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9227)             temMap.put("ins", ins);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9228)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9229) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9230)         if (dep != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9231)             sql += " and bf.bill.department=:dep ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9232)             temMap.put("dep", dep);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9233)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9234) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9235)         if (toDep != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9236)             sql += " and bf.bill.toDepartment=:todep ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9237)             temMap.put("todep", toDep);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9238)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9239) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9240)         if (fromDep != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9241)             sql += " and bf.bill.fromDepartment=:fromdep ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9242)             temMap.put("fromdep", fromDep);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9243)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9244) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9245)         if (fromIns != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9246)             sql += " and bf.bill.fromInstitution=:fromins ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9247)             temMap.put("fromins", fromIns);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9248)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9249) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9250)         if (toIns != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9251)             sql += " and bf.bill.toInstitution=:toins ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9252)             temMap.put("toins", toIns);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9253)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9254) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9255)         if (stf != null) {
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9256)             sql += " and bf.bill.toStaff=:staff ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9257)             temMap.put("staff", stf);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9258)         }
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9259) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9260)         sql += " order by bf.bill.createdAt desc  ";
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9261) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9262)         temMap.put("billTypesAtomics", billTypesAtomics);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9263)         temMap.put("toDate", getToDate());
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9264)         temMap.put("fromDate", getFromDate());
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9265) 
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9266)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9267)         System.out.println("Bill fees retrieved: " + billFees.size());
17ea2d1ce75 (PasinduW99           2024-08-17 18:39:07 +0530  9268)     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9269) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9270)     public void createTableByKeywordForBillsWithoutToStaff(List<BillTypeAtomic> billTypesAtomics,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9271)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9272)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9273)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9274)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9275)             Department toDep) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9276)         bills = null;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9277)         String sql;
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9278)         Map temMap = new HashMap();
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9279) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9280)         sql = "select b "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9281)                 + " from Bill b "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9282)                 + " where b.billTypeAtomic in :billTypesAtomics "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9283)                 + " and b.createdAt between :fromDate and :toDate "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9284)                 + " and b.retired=false "
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9285)                 + " and b.toStaff is null ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9286) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9287)         if (ins != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9288)             sql += " and b.institution=:ins ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9289)             temMap.put("ins", ins);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9290)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9291) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9292)         if (dep != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9293)             sql += " and b.department=:dep ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9294)             temMap.put("dep", dep);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9295)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9296) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9297)         if (toDep != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9298)             sql += " and b.toDepartment=:todep ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9299)             temMap.put("todep", toDep);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9300)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9301) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9302)         if (fromDep != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9303)             sql += " and b.fromDepartment=:fromdep ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9304)             temMap.put("fromdep", fromDep);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9305)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9306) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9307)         if (fromIns != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9308)             sql += " and b.fromInstitution=:fromins ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9309)             temMap.put("fromins", fromIns);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9310)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9311) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9312)         if (toIns != null) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9313)             sql += " and b.toInstitution=:toins ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9314)             temMap.put("toins", toIns);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9315)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9316) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9317)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9318)             sql += " and  ((b.patient.person.name) like :patientName )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9319)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9320)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9321) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9322)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9323)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9324)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9325)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9326) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9327)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9328)             sql += " and  b.deptId like :billNo";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9329)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9330)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9331) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9332)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9333)             sql += " and  ((b.netTotal) like :netTotal )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9334)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9335)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9336) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9337)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9338)             sql += " and  ((b.total) like :total )";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9339)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9340)         }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9341) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9342)         sql += " order by b.createdAt desc  ";
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9343) //    
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9344)         temMap.put("billTypesAtomics", billTypesAtomics);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9345)         temMap.put("toDate", getToDate());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9346)         temMap.put("fromDate", getFromDate());
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9347) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9348)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 100);
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9349) 
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9350)     }
b81b95266a2 (buddhika75           2024-07-31 07:37:25 +0530  9351) 
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9352)     public void createTableByKeyword(BillType billType,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9353)             Institution ins, Department dep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9354)             Institution fromIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9355)             Department fromDep,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9356)             Institution toIns,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530  9357)             Department toDep) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9358)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9359)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9360)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9361) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9362)         sql = "select b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9363)                 + " from BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9364)                 + " where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9365)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9366)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9367) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9368)         if (ins != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9369)             sql += " and b.institution=:ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9370)             temMap.put("ins", ins);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9371)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9372) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9373)         if (dep != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9374)             sql += " and b.department=:dep ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9375)             temMap.put("dep", dep);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9376)         }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9377) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9378)         if (toDep != null) {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9379)             sql += " and b.toDepartment=:todep ";
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9380)             temMap.put("todep", toDep);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9381)         }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9382) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9383)         if (fromDep != null) {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9384)             sql += " and b.fromDepartment=:fromdep ";
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9385)             temMap.put("fromdep", fromDep);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9386)         }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9387) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9388)         if (fromIns != null) {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9389)             sql += " and b.fromInstitution=:fromins ";
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9390)             temMap.put("fromins", fromIns);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9391)         }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9392) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9393)         if (toIns != null) {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9394)             sql += " and b.toInstitution=:toins ";
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9395)             temMap.put("toins", toIns);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9396)         }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9397) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9398)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9399)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9400)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9401)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9402) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9403)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9404)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9405)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9406)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9407) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9408)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
a5cd0078da7 (Buddhika             2024-01-21 08:59:01 +0530  9409)             sql += " and  b.deptId like :billNo";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9410)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9411)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9412) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9413)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9414)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9415)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9416)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9417) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9418)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9419)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9420)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9421)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9422) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9423)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9424) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9425)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9426)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9427)         temMap.put("fromDate", getFromDate());
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530  9428) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9429)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530  9430) 
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9431)     }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9432) 
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9433)     public void clearOpdBillSearchData() {
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9434)         getSearchKeyword().setPatientName(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9435)         getSearchKeyword().setPatientPhone(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9436)         getSearchKeyword().setTotal(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9437)         getSearchKeyword().setNetTotal(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9438)         getSearchKeyword().setBillNo(null);
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9439)         fromInstitution = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9440)         fromDepartment = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9441)         toInstitution = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9442)         toDepartment = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9443) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9444)     }
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530  9445) 
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  9446)     public void clearChannelBillSearchData() {
9e9a5c31872 (thiwanka570          2024-09-09 23:08:02 +0530  9447)         getSearchKeyword().setPatientName(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9448)         getSearchKeyword().setPatientPhone(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9449)         getSearchKeyword().setTotal(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9450)         getSearchKeyword().setNetTotal(null);
43eaf33cc6d (Thiwanka Madushan    2023-12-02 14:56:25 +0530  9451)         getSearchKeyword().setBillNo(null);
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9452)         fromInstitution = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9453)         fromDepartment = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9454)         toInstitution = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9455)         toDepartment = null;
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530  9456) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530  9457)     }
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  9458) 
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9459)     public void processAllFinancialTransactionalSummary() {
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9460)         billSummaryRows = null;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9461)         grossTotal = 0.0;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9462)         discount = 0.0;
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9463)         netTotal = 0.0;
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9464)         String jpql;
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9465)         Map params = new HashMap();
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9466)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9467)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9468)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9469)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9470)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9471)         jpql = "select new com.divudi.light.common.BillSummaryRow("
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9472)                 + "b.billTypeAtomic, "
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9473)                 + "sum(b.total), "
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9474)                 + "sum(b.discount), "
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9475)                 + "sum(b.netTotal),"
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9476)                 + "count(b)) "
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9477)                 + " from Bill b "
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9478)                 + " where b.retired=:ret"
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9479)                 + " and b.createdAt between :fromDate and :toDate "
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9480)                 + " and b.billTypeAtomic in :abts ";
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9481) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9482)         Bill b = new Bill();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9483)         b.getTotal();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9484)         b.getDiscount();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9485)         b.getNetTotal();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9486)         b.getBillTypeAtomic();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9487)         b.getCreater();
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9488)         if (institution == null && department == null) {
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9489)             jpql += " and b.institution=:ins";
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9490)             params.put("ins", sessionController.getInstitution());
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9491) 
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9492)         } else if (institution != null && department == null) {
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9493)             jpql += " and b.institution=:ins";
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9494)             params.put("ins", getInstitution());
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9495) 
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9496)             jpql += " and b.department=:dept";
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9497)             params.put("dept", sessionController.getDepartment());
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9498) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9499)         } else if (institution != null && department != null) {
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9500)             jpql += " and b.institution=:ins";
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9501)             params.put("ins", getInstitution());
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9502) 
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9503)             jpql += " and b.department=:dept";
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9504)             params.put("dept", getDepartment());
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9505)         }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9506) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9507)         if (webUser != null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9508)             jpql += " and b.creater=:wu";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9509)             params.put("wu", webUser);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9510)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9511) 
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9512)         jpql += " group by b.billTypeAtomic order by b.billTypeAtomic";
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9513) 
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9514)         params.put("toDate", getToDate());
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9515)         params.put("fromDate", getFromDate());
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9516)         params.put("ret", false);
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9517)         params.put("abts", billTypesToFilter);
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530  9518) 
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9519)         billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9520) 
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9521)         for (BillSummaryRow bss : billSummaryRows) {
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9522)             grossTotal += bss.getGrossTotal();
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9523)             discount += bss.getDiscount();
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9524)             netTotal += bss.getNetTotal();
5894bdda2e2 (Dr M H B Ariyaratne  2024-04-25 07:59:48 +0530  9525)         }
b43ae6934a0 (Dr M H B Ariyaratne  2024-04-25 03:27:24 +0530  9526)     }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9527) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9528)     public void processUserFinancialTransactionalSummaryByBillForBillTypeAtomic() {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9529)         reportTemplateType = ReportTemplateType.BILL_TYPE_ATOMIC_SUMMARY_USING_BILLS;
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9530)         billSummaryRows = null;
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9531)         grossTotal = 0.0;
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9532)         discount = 0.0;
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9533)         netTotal = 0.0;
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9534)         String jpql;
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9535)         Map params = new HashMap();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9536)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9537)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9538)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9539)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9540)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9541)         jpql = "select new com.divudi.light.common.BillSummaryRow("
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9542)                 + "b.billTypeAtomic, "
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9543)                 + "sum(b.total), "
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9544)                 + "sum(b.discount), "
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9545)                 + "sum(b.netTotal),"
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9546)                 + "count(b)) "
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9547)                 + " from Bill b "
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9548)                 + " where b.retired=:ret"
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9549)                 + " and b.createdAt between :fromDate and :toDate "
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9550)                 + " and b.billTypeAtomic in :abts "
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9551)                 + " and b.creater=:user";
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9552) 
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9553) //        Bill b = new Bill();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9554) //        b.getTotal();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9555) //        b.getDiscount();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9556) //        b.getNetTotal();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9557) //        b.getBillTypeAtomic();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9558) //        b.getCreater();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9559)         jpql += " group by b.billTypeAtomic order by b.billTypeAtomic";
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9560) 
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9561)         params.put("user", getWebUser());
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9562)         params.put("toDate", getToDate());
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9563)         params.put("fromDate", getFromDate());
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9564)         params.put("ret", false);
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9565)         params.put("abts", billTypesToFilter);
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9566) 
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9567)         billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9568) 
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9569)         for (BillSummaryRow bss : billSummaryRows) {
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9570)             grossTotal += bss.getGrossTotal();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9571)             discount += bss.getDiscount();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9572)             netTotal += bss.getNetTotal();
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9573)         }
52ffd866b71 (buddhika75           2024-07-12 23:29:31 +0530  9574)     }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  9575) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9576)     public void processUserFinancialTransactionalSummarybyBillForPaymentMethodAndBillTypeAtomic() {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9577)         reportTemplateType = ReportTemplateType.BILLT_TYPE_AND_PAYMENT_METHOD_SUMMARY_PAYMENTS;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9578)         System.out.println("institution = " + institution);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9579)         if (institution == null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9580)             setDepartments(null);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9581)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9582)         billSummaryRows = null;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9583)         totalPaying = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9584)         cashTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9585)         cardTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9586)         chequeTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9587)         slipTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9588)         totalOfOtherPayments = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9589) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9590)         String jpql;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9591)         Map params = new HashMap();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9592)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9593)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9594)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9595)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9596)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9597) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9598)         jpql = "select new com.divudi.light.common.BillSummaryRow("
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9599)                 + "p.bill.billTypeAtomic, "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9600)                 + "sum(p.paidValue), "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9601)                 + "count(p.bill), "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9602)                 + "p.paymentMethod ) "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9603)                 + " from Payment p "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9604)                 + " where p.bill.retired=:ret"
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9605)                 + " and p.createdAt between :fromDate and :toDate "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9606)                 + " and p.bill.billTypeAtomic in :abts ";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9607) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9608)         if (webUser != null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9609)             jpql += " and p.bill.creater=:wu";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9610)             params.put("wu", webUser);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9611)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9612) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9613) //        if (institution == null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9614) //            jpql += " and p.bill.institution=:ins";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9615) //            params.put("ins", sessionController.getInstitution());
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9616) //        } else {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9617) //            jpql += " and p.bill.institution=:ins";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9618) //            params.put("ins", institution);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9619) //        }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9620) //
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9621) //        if (department == null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9622) ////            jpql += " and p.bill.department=:dept";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9623) ////            params.put("dept", sessionController.getLoggedUser().getDepartment());
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9624) //        } else {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9625) //            jpql += " and p.bill.department=:dept";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9626) //            params.put("dept", department);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9627) //        }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9628)         jpql += " group by p.paymentMethod, p.bill.billTypeAtomic "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9629)                 + " order by p.bill.billTypeAtomic";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9630) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9631)         params.put("toDate", getToDate());
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9632)         params.put("fromDate", getFromDate());
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9633)         params.put("ret", false);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9634)         params.put("abts", billTypesToFilter);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9635)         billSummaryRows = paymentFacade.findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9636) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9637)         for (BillSummaryRow bss : billSummaryRows) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9638)             if (bss.getPaymentMethod() == PaymentMethod.Cash) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9639)                 cashTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9640)             } else if (bss.getPaymentMethod() == PaymentMethod.Card) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9641)                 cardTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9642)             } else if (bss.getPaymentMethod() == PaymentMethod.Cheque) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9643)                 chequeTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9644)             } else if (bss.getPaymentMethod() == PaymentMethod.Slip) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9645)                 slipTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9646)             } else {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9647) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9648)                 totalOfOtherPayments += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9649)             }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9650)             totalPaying += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9651)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9652) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9653)     }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9654) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9655)     public void processUserFinancialTransactionalSummaryByPaymentMethod() {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9656)         reportTemplateType = ReportTemplateType.PAYMENT_METHOD_SUMMARY_USING_BILLS;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9657)         System.out.println("institution = " + institution);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9658)         if (institution == null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9659)             setDepartments(null);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9660)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9661)         billSummaryRows = null;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9662)         totalPaying = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9663)         cashTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9664)         cardTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9665)         chequeTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9666)         slipTotal = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9667)         totalOfOtherPayments = 0.0;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9668) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9669)         String jpql;
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9670)         Map<String, Object> params = new HashMap<>();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9671) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9672)         jpql = "select new com.divudi.light.common.BillSummaryRow("
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9673)                 + "p.paymentMethod, "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9674)                 + "sum(p.paidValue), "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9675)                 + "count(p.bill)) "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9676)                 + "from Payment p "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9677)                 + "where p.bill.retired = :ret "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9678)                 + "and p.createdAt between :fromDate and :toDate ";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9679) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9680)         if (webUser != null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9681)             jpql += " and p.bill.creater = :wu";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9682)             params.put("wu", webUser);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9683)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9684) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9685)         jpql += " group by p.paymentMethod "
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9686)                 + "order by p.paymentMethod";
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9687) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9688)         params.put("toDate", getToDate());
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9689)         params.put("fromDate", getFromDate());
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9690)         params.put("ret", false);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9691) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9692)         List<?> result = paymentFacade.findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9693) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9694)         billSummaryRows = new ArrayList<>();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9695)         for (Object obj : result) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9696)             if (obj instanceof BillSummaryRow) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9697)                 billSummaryRows.add((BillSummaryRow) obj);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9698)             } else {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9699)                 System.err.println("Unexpected result type: " + obj.getClass().getName());
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9700)             }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9701)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9702) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9703)         for (BillSummaryRow bss : billSummaryRows) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9704)             if (bss.getPaymentMethod() == PaymentMethod.Cash) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9705)                 cashTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9706)             } else if (bss.getPaymentMethod() == PaymentMethod.Card) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9707)                 cardTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9708)             } else if (bss.getPaymentMethod() == PaymentMethod.Cheque) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9709)                 chequeTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9710)             } else if (bss.getPaymentMethod() == PaymentMethod.Slip) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9711)                 slipTotal += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9712)             } else {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9713)                 totalOfOtherPayments += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9714)             }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9715)             totalPaying += bss.getPaidValue();
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9716)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9717)     }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530  9718) 
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  9719)     private List<Department> departments;
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  9720) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  9721)     public void fillInstitutionInDepartment(Institution ins) {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  9722)         if (ins == null) {
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  9723)             setDepartments(null);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  9724)         } else {
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  9725)             setDepartments(getDepartmentController().getInstitutionDepatrments(ins));
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  9726)         }
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  9727)     }
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9728) 
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9729)     public void processAllFinancialTransactionalSummarybyPaymentMethod() {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  9730)         if (institution == null) {
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  9731)             setDepartments(null);
8d6d0347472 (DamithDeshan         2024-04-26 10:08:52 +0530  9732)         }
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9733)         billSummaryRows = null;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9734)         totalPaying = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9735)         cashTotal = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9736)         cardTotal = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9737)         chequeTotal = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9738)         slipTotal = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9739)         totalOfOtherPayments = 0.0;
f28d4959934 (Dr M H B Ariyaratne  2024-05-22 22:45:34 +0530  9740) 
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9741)         String jpql;
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9742)         Map params = new HashMap();
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9743)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9744)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9745)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9746)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9747)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  9748) 
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9749)         jpql = "select new com.divudi.light.common.BillSummaryRow("
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9750)                 + "p.bill.billTypeAtomic, "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9751)                 + "sum(p.paidValue), "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9752)                 + "count(p.bill), "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9753)                 + "p.paymentMethod ) "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9754)                 + " from Payment p "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9755)                 + " where p.bill.retired=:ret"
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9756)                 + " and p.createdAt between :fromDate and :toDate "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9757)                 + " and p.bill.billTypeAtomic in :abts ";
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  9758) 
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9759)         if (institution == null) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9760)             jpql += " and p.bill.institution=:ins";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9761)             params.put("ins", sessionController.getInstitution());
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9762)         } else {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9763)             jpql += " and p.bill.institution=:ins";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9764)             params.put("ins", institution);
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9765)         }
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  9766) 
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9767)         if (department == null) {
9f9139ff05e (Lawan Samarasekara   2024-06-12 19:44:09 +0530  9768) //            jpql += " and p.bill.department=:dept";
9f9139ff05e (Lawan Samarasekara   2024-06-12 19:44:09 +0530  9769) //            params.put("dept", sessionController.getLoggedUser().getDepartment());
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9770)         } else {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9771)             jpql += " and p.bill.department=:dept";
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9772)             params.put("dept", department);
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  9773)         }
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  9774) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9775)         jpql += " group by p.paymentMethod, p.bill.billTypeAtomic "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9776)                 + " order by p.bill.billTypeAtomic";
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9777) 
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9778)         params.put("toDate", getToDate());
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9779)         params.put("fromDate", getFromDate());
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9780)         params.put("ret", false);
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9781)         params.put("abts", billTypesToFilter);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9782)         billSummaryRows = paymentFacade.findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9783) 
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9784)         for (BillSummaryRow bss : billSummaryRows) {
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9785)             if (bss.getPaymentMethod() == PaymentMethod.Cash) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9786)                 cashTotal += bss.getPaidValue();
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9787)             } else if (bss.getPaymentMethod() == PaymentMethod.Card) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9788)                 cardTotal += bss.getPaidValue();
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9789)             } else if (bss.getPaymentMethod() == PaymentMethod.Cheque) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9790)                 chequeTotal += bss.getPaidValue();
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9791)             } else if (bss.getPaymentMethod() == PaymentMethod.Slip) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9792)                 slipTotal += bss.getPaidValue();
c13f7406fdf (Thiwanka570          2024-05-27 18:31:19 +0530  9793)             } else {
9e6740d1901 (H.K. Damith Deshan   2024-05-25 22:47:51 +0530  9794) 
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9795)                 totalOfOtherPayments += bss.getPaidValue();
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9796)             }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9797)             totalPaying += bss.getPaidValue();
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9798)         }
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9799) 
ebbe8a76946 (DamithDeshan         2024-04-25 18:30:57 +0530  9800)     }
7233b3da64c (DamithDeshan         2024-04-25 21:06:43 +0530  9801) 
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530  9802)     //    public void processAllFinancialTransactionalSummarybyPaymentMethod() {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9803) //        System.out.println("institution = " + institution);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9804) //        if (institution == null) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9805) //            setDepartments(null);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9806) //        }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9807) //        billSummaryRows = null;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9808) //        grossTotal = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9809) //        discount = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9810) //        netTotal = 0.0;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9811) //        String jpql;
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9812) //        Map params = new HashMap();
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9813) //        List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9814) //        billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9815) //        billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9816) //        billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9817) //        billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9818) //
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9819) //        jpql = "select new com.divudi.light.common.BillSummaryRow("
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9820) //                + "b.billTypeAtomic, "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9821) //                + "sum(b.total), "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9822) //                + "sum(b.discount), "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9823) //                + "sum(b.netTotal), "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9824) //                + "count(b), "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9825) //                + "b.paymentMethod ) "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9826) //                + " from Bill b "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9827) //                + " where b.retired=:ret"
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9828) //                + " and b.createdAt between :fromDate and :toDate "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9829) //                + " and b.billTypeAtomic in :abts ";
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9830) //
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9831) //        if (institution == null) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9832) //            jpql += " and b.institution=:ins";
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9833) //            params.put("ins", sessionController.getInstitution());
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9834) //        } else {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9835) //            jpql += " and b.institution=:ins";
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9836) //            params.put("ins", institution);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9837) //        }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9838) //
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9839) //        if (department == null) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9840) //            jpql += " and b.department=:dept";
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9841) //            params.put("dept", sessionController.getLoggedUser().getDepartment());
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9842) //        } else {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9843) //            jpql += " and b.department=:dept";
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9844) //            params.put("dept", department);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9845) //        }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9846) //
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9847) //        jpql += " group by b.paymentMethod, b.billTypeAtomic "
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9848) //                + " order by b.billTypeAtomic";
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9849) //
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9850) //        params.put("toDate", getToDate());
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9851) //        params.put("fromDate", getFromDate());
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9852) //        params.put("ret", false);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9853) //        params.put("abts", billTypesToFilter);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9854) //        billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9855) //
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9856) //        for (BillSummaryRow bss : billSummaryRows) {
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9857) //            grossTotal += bss.getGrossTotal();
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9858) //            discount += bss.getDiscount();
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9859) //            netTotal += bss.getNetTotal();
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9860) //        }
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9861) //
f9bb5c608d5 (Senula88             2024-05-22 01:01:35 +0530  9862) //    }
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9863)     public void processAllFinancialTransactionalSummarybyUsers() {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530  9864)         if (institution == null) {
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9865)             setDepartments(null);
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9866)         }
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9867)         billSummaryRows = null;
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9868)         grossTotal = 0.0;
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9869)         discount = 0.0;
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9870)         netTotal = 0.0;
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9871)         totalBillCount = 0.0;
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9872)         String jpql;
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9873)         Map params = new HashMap();
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9874)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9875)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9876)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9877)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9878)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9879) 
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9880)         jpql = "select new com.divudi.light.common.BillSummaryRow("
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9881)                 + "sum(b.total), "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9882)                 + "sum(b.discount), "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9883)                 + "sum(b.netTotal), "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9884)                 + "count(b), "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9885)                 + "b.creater.webUserPerson ) "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9886)                 + " from Bill b "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9887)                 + " where b.retired=:ret"
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9888)                 + " and b.createdAt between :fromDate and :toDate "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9889)                 + " and b.billTypeAtomic in :abts ";
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9890) 
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9891)         if (institution != null) {
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9892)             jpql += " and b.institution=:ins";
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9893)             params.put("ins", getInstitution());
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9894) 
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9895)             if (department != null) {
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9896)                 jpql += " and b.department=:dept";
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9897)                 params.put("dept", getDepartment());
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9898)             }
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9899)         }
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9900) 
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9901)         jpql += " group by b.creater "
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9902)                 + " order by  b.creater";
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9903) 
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9904)         params.put("toDate", getToDate());
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9905)         params.put("fromDate", getFromDate());
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9906)         params.put("ret", false);
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9907)         params.put("abts", billTypesToFilter);
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9908)         billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9909) 
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9910)         for (BillSummaryRow bss : billSummaryRows) {
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9911)             grossTotal += bss.getGrossTotal();
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9912)             discount += bss.getDiscount();
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9913)             netTotal += bss.getNetTotal();
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530  9914)             totalBillCount += bss.getBillCount();
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9915)         }
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9916)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9917) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9918)     public void processAllFinancialTransactionalSummarybyUserPayment() {
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9919)         billSummaryRows = null;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9920)         grossTotal = 0.0;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9921)         discount = 0.0;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9922)         netTotal = 0.0;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9923)         totalBillCount = 0.0;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9924)         String jpql;
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9925)         Map params = new HashMap();
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9926)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9927)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9928)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9929)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9930)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9931) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9932)         jpql = "select new com.divudi.light.common.BillSummaryRow("
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9933)                 + "sum(b.total), "
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9934)                 + "sum(b.discount), "
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9935)                 + "sum(b.netTotal), "
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9936)                 + "count(b), "
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9937)                 + "b.paymentMethod,"
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9938)                 + "b.creater.webUserPerson ) "
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9939)                 + " from Bill b "
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9940)                 + " where b.retired=:ret"
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9941)                 + " and b.createdAt between :fromDate and :toDate "
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9942)                 + " and b.billTypeAtomic in :abts ";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9943) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9944)         if (department != null) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9945)             jpql += " and b.department=:dept";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9946)             params.put("dept", getDepartment());
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9947)         }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9948) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9949)         jpql += " group by b.paymentMethod, b.creater.webUserPerson"
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9950)                 + " order by b.creater.webUserPerson";
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530  9951) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9952)         params.put("toDate", getToDate());
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9953)         params.put("fromDate", getFromDate());
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9954)         params.put("ret", false);
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530  9955)         params.put("abts", billTypesToFilter);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9956) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9957)         billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9958) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9959)         for (BillSummaryRow bss : billSummaryRows) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9960)             grossTotal += bss.getGrossTotal();
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9961)             discount += bss.getDiscount();
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9962)             netTotal += bss.getNetTotal();
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9963)             totalBillCount += bss.getBillCount();
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9964)         }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9965)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530  9966) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9967)     public void processAllFinancialTransactionalBillListBySingleUserByIds() {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9968)         if (startBillId == null && endBillId == null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9969)             JsfUtil.addErrorMessage("Enter at leat on bill number");
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9970)             return;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9971)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9972)         if (webUser == null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9973)             webUser = sessionController.getLoggedUser();
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9974)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9975)         billSummaryRows = null;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9976)         grossTotal = 0.0;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9977)         discount = 0.0;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9978)         netTotal = 0.0;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9979)         totalBillCount = 0.0;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9980)         String jpql;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9981)         Map params = new HashMap();
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9982)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9983)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9984)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9985)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9986)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9987) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9988)         jpql = "select b "
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9989)                 + " from Bill b "
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9990)                 + " where b.retired=:ret "
a759dfc6bf7 (Dr M H B Ariyaratne  2024-05-02 20:43:56 +0530  9991)                 + " and b.creater=:wu ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9992) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9993)         if (billTypeAtomic == null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9994)             jpql += "  and b.billTypeAtomic in :abts  ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9995)             params.put("abts", billTypesToFilter);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9996)         } else {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9997)             jpql += "  and b.billTypeAtomic=:abt  ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9998)             params.put("abt", billTypeAtomic);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530  9999)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10000) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10001)         if (startBillId != null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10002)             jpql += " and b.id > :sid ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10003)             params.put("sid", startBillId);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10004)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10005)         if (endBillId != null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10006)             jpql += " and b.id < :eid ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10007)             params.put("eid", endBillId);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10008)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10009) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10010)         if (paymentMethod != null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10011)             jpql += " and b.paymentMethod=:pm ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10012)             params.put("pm", paymentMethod);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10013)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10014)         if (paymentMethods != null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10015)             jpql += " and b.paymentMethod in :pms ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10016)             params.put("pms", paymentMethods);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10017)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10018)         jpql += " order by b.paymentMethod, b.billTypeAtomic ";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10019) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10020)         params.put("wu", webUser);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10021)         params.put("ret", false);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10022) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10023)         bills = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10024) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10025)         for (Bill bss : bills) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10026)             grossTotal += bss.getTotal();
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10027)             discount += bss.getDiscount();
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10028)             netTotal += bss.getNetTotal();
6dcbe361bb5 (Thiwanka Madushan    2024-05-04 17:57:31 +0530 10029)             totalBillCount++;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10030)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10031)     }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10032) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10033)     public void processAllFinancialTransactionalSummarybySingleUserByIds() {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10034)         if (startBillId == null && endBillId == null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10035)             JsfUtil.addErrorMessage("Enter at leat on bill number");
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10036)             return;
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10037)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10038)         if (webUser == null) {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10039)             webUser = sessionController.getLoggedUser();
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10040)         }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10041)         billSummaryRows = null;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10042)         grossTotal = 0.0;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10043)         discount = 0.0;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10044)         netTotal = 0.0;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10045)         totalBillCount = 0.0;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10046)         String jpql;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10047)         Map params = new HashMap();
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10048)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10049)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10050)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10051)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10052)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10053) 
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10054)         jpql = "select new com.divudi.light.common.BillSummaryRow("
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10055)                 + "b.billTypeAtomic, "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10056)                 + "sum(b.total), "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10057)                 + "sum(b.discount), "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10058)                 + "sum(b.netTotal), "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10059)                 + "count(b),"
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10060)                 + "b.paymentMethod "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10061)                 + ") "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10062)                 + " from Bill b "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10063)                 + " where b.retired=:ret "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10064)                 + " and b.creater=:wu "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10065)                 + " and b.billTypeAtomic in :abts ";
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10066) 
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10067)         if (startBillId != null) {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10068)             jpql += " and b.id > :sid ";
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10069)             params.put("sid", startBillId);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10070)         }
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10071)         if (endBillId != null) {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10072)             jpql += " and b.id < :eid ";
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10073)             params.put("eid", endBillId);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10074)         }
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10075) 
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10076)         if (paymentMethod != null) {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10077)             jpql += " and b.paymentMethod=:pm ";
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10078)             params.put("pm", paymentMethod);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10079)         }
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10080)         if (paymentMethods != null) {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10081)             jpql += " and b.paymentMethod in :pms ";
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10082)             params.put("pms", paymentMethods);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10083)         }
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10084)         jpql += " group by b.paymentMethod, b.billTypeAtomic "
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10085)                 + " order by b.creater.webUserPerson";
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10086) 
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10087)         params.put("wu", webUser);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10088)         params.put("ret", false);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10089)         params.put("abts", billTypesToFilter);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10090) 
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10091)         billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10092) 
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10093)         for (BillSummaryRow bss : billSummaryRows) {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10094)             grossTotal += bss.getGrossTotal();
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10095)             discount += bss.getDiscount();
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10096)             netTotal += bss.getNetTotal();
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10097)             totalBillCount += bss.getBillCount();
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10098)         }
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10099)     }
ccb62084882 (buddhika75           2024-07-31 05:28:52 +0530 10100) 
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10101)     public void processAllFinancialTransactionalSummarybySingleUserByIdsAdmin() {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10102)         if (startBillId == null && endBillId == null) {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10103)             JsfUtil.addErrorMessage("Enter at leat on bill number");
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10104)             return;
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10105)         }
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10106)         if (webUser == null) {
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10107)             webUser = sessionController.getLoggedUser();
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10108)         }
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10109)         billSummaryRows = null;
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10110)         grossTotal = 0.0;
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10111)         discount = 0.0;
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10112)         netTotal = 0.0;
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10113)         totalBillCount = 0.0;
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10114)         String jpql;
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10115)         Map params = new HashMap();
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10116)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10117)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10118)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
be15df119c4 (buddhika75           2024-07-19 16:33:09 +0530 10119)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10120)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10121) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10122)         jpql = "select new com.divudi.light.common.BillSummaryRow("
e83261b5d89 (Dr M H B Ariyaratne  2024-05-02 17:07:13 +0530 10123)                 + "b.billTypeAtomic, "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10124)                 + "sum(b.total), "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10125)                 + "sum(b.discount), "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10126)                 + "sum(b.netTotal), "
e83261b5d89 (Dr M H B Ariyaratne  2024-05-02 17:07:13 +0530 10127)                 + "count(b),"
e83261b5d89 (Dr M H B Ariyaratne  2024-05-02 17:07:13 +0530 10128)                 + "b.paymentMethod "
e83261b5d89 (Dr M H B Ariyaratne  2024-05-02 17:07:13 +0530 10129)                 + ") "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10130)                 + " from Bill b "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10131)                 + " where b.retired=:ret "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10132)                 + " and b.creater=:wu "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10133)                 + " and b.billTypeAtomic in :abts ";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10134) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10135)         if (startBillId != null) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10136)             jpql += " and b.id > :sid ";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10137)             params.put("sid", startBillId);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10138)         }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10139)         if (endBillId != null) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10140)             jpql += " and b.id < :eid ";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10141)             params.put("eid", endBillId);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10142)         }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10143) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10144)         if (paymentMethod != null) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10145)             jpql += " and b.paymentMethod=:pm ";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10146)             params.put("pm", paymentMethod);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10147)         }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 10148)         if (paymentMethods != null) {
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10149)             jpql += " and b.paymentMethod in :pms ";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10150)             params.put("pms", paymentMethods);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10151)         }
e83261b5d89 (Dr M H B Ariyaratne  2024-05-02 17:07:13 +0530 10152)         jpql += " group by b.paymentMethod, b.billTypeAtomic "
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10153)                 + " order by b.creater.webUserPerson";
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10154) 
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10155)         params.put("wu", webUser);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10156)         params.put("ret", false);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10157)         params.put("abts", billTypesToFilter);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10158) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530 10159)         billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10160) 
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530 10161)         for (BillSummaryRow bss : billSummaryRows) {
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530 10162)             grossTotal += bss.getGrossTotal();
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530 10163)             discount += bss.getDiscount();
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530 10164)             netTotal += bss.getNetTotal();
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530 10165)             totalBillCount += bss.getBillCount();
9a61db9e64b (DamithDeshan         2024-05-01 00:38:57 +0530 10166)         }
de0b5ebbe18 (DamithDeshan         2024-04-26 11:58:14 +0530 10167)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10168) 
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10169)     public void processAllFinancialTransactionalSummarybyDepartment() {
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10170)         billSummaryRows = null;
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10171)         grossTotal = 0.0;
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10172)         discount = 0.0;
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10173)         netTotal = 0.0;
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10174)         totalBillCount = 0.0;
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10175) 
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10176)         String jpql;
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10177)         Map params = new HashMap();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10178)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10179)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10180)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10181)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10182)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10183) 
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10184)         jpql = "select new com.divudi.light.common.BillSummaryRow("
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10185)                 + "b.billTypeAtomic, "
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10186)                 + "sum(b.total), "
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10187)                 + "sum(b.discount), "
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10188)                 + "sum(b.netTotal),"
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10189)                 + "count(b)) "
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10190)                 + " from Bill b "
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10191)                 + " where b.retired=:ret"
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10192)                 + " and b.createdAt between :fromDate and :toDate "
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10193)                 + " and b.billTypeAtomic in :abts "
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10194)                 + " and b.department=:dept"
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10195)                 + " group by b.billTypeAtomic"
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10196)                 + " order by b.billTypeAtomic ";
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10197) //        Bill b = new Bill();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10198) //        b.getTotal();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10199) //        b.getDiscount();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10200) //        b.getNetTotal();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10201) //        b.getBillTypeAtomic();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10202)         params.put("toDate", getToDate());
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10203)         params.put("fromDate", getFromDate());
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10204)         params.put("ret", false);
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10205)         params.put("abts", billTypesToFilter);
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10206)         params.put("dept", getDepartment());
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10207)         billSummaryRows = getBillFacade().findLightsByJpql(jpql, params, TemporalType.TIMESTAMP);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10208) 
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10209)         for (BillSummaryRow bss : billSummaryRows) {
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10210)             grossTotal += bss.getGrossTotal();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10211)             discount += bss.getDiscount();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10212)             netTotal += bss.getNetTotal();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10213)             totalBillCount += bss.getBillCount();
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10214)         }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10215) 
137c2b49f1f (DamithDeshan         2024-05-01 00:57:47 +0530 10216)     }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10217) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10218)     public void listBills() {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10219)         bills = null;
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10220)         Map<String, Object> params = new HashMap<>();
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10221)         StringBuilder jpql = new StringBuilder("select b from Bill b where 1=1 ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10222)         if (toDate != null && fromDate != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10223)             jpql.append(" and b.createdAt between :fromDate and :toDate ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10224)             params.put("toDate", toDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10225)             params.put("fromDate", fromDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10226)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10227) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10228)         if (institution != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10229)             params.put("ins", institution);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10230)             jpql.append(" and b.department.institution = :ins ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10231)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10232) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10233)         if (department != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10234)             params.put("dep", department);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10235)             jpql.append(" and b.department = :dept ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10236)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10237) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10238)         if (site != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10239)             params.put("site", site);
6ab153fecce (Buddhika Ariyaratne  2024-11-07 12:46:14 +0530 10240)             jpql.append(" and b.department.site = :site ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10241)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10242) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10243)         if (webUser != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10244)             jpql.append(" and b.creater=:wu ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10245)             params.put("wu", webUser);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10246)         }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10247) 
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10248)         if (billClassType != null) {
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530 10249)             jpql.append(" and type(b)=:billClassType ");
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10250)             switch (billClassType) {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10251)                 case Bill:
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10252)                     params.put("billClassType", com.divudi.entity.Bill.class);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10253)                     break;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10254)                 case BilledBill:
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10255)                     params.put("billClassType", com.divudi.entity.BilledBill.class);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10256)                     break;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10257)                 case CancelledBill:
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10258)                     params.put("billClassType", com.divudi.entity.CancelledBill.class);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10259)                     break;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10260)                 case OtherBill:
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10261)                     params.put("billClassType", com.divudi.entity.Bill.class);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10262)                     break;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10263)                 case PreBill:
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10264)                     params.put("billClassType", com.divudi.entity.PreBill.class);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10265)                     break;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10266)                 case RefundBill:
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10267)                     params.put("billClassType", com.divudi.entity.RefundBill.class);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10268)                     break;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 10269) 
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530 10270)             }
ccf07783bdc (Buddhika Ariyaratne  2024-10-11 03:49:06 +0530 10271)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10272) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10273)         if (billType != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10274)             jpql.append(" and b.billType=:billType ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10275)             params.put("billType", billType);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10276)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10277) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10278)         if (billTypeAtomic != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10279)             jpql.append(" and b.billTypeAtomic=:billTypeAtomic ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10280)             params.put("billTypeAtomic", billTypeAtomic);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10281)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10282) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10283)         // Order by bill ID
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10284)         jpql.append(" order by b.id ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10285) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10286)         // Execute the query
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10287)         bills = getBillFacade().findByJpql(jpql.toString(), params, TemporalType.TIMESTAMP);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10288) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10289)         if (bills != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10290)             for (Bill bill : bills) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10291)                 if (bill != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10292)                     total += bill.getTotal();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10293)                     netTotal += bill.getNetTotal();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10294)                     discount += bill.getDiscount();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10295)                 }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10296)             }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10297)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10298) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10299)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10300) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10301)     public void listBillTypes() {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10302)         bundle = new ReportTemplateRowBundle();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10303)         Map<String, Object> params = new HashMap<>();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10304)         StringBuilder jpql = new StringBuilder("select new com.divudi.data.ReportTemplateRow("
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10305)                 + "b.billType, b.billClassType, b.billTypeAtomic, count(b), sum(b.total), sum(b.discount), sum(b.netTotal))"
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10306)                 + " from Bill b where b.retired=:ret ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10307)         params.put("ret", false);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10308)         if (toDate != null && fromDate != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10309)             jpql.append(" and b.createdAt between :fromDate and :toDate ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10310)             params.put("toDate", toDate);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10311)             params.put("fromDate", fromDate);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10312)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10313) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10314)         if (institution != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10315)             params.put("ins", institution);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10316)             jpql.append(" and b.department.institution = :ins ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10317)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10318) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10319)         if (department != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10320)             params.put("dep", department);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10321)             jpql.append(" and b.department = :dept ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10322)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10323) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10324)         if (site != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10325)             params.put("site", site);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10326)             jpql.append(" and b.department = :site ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10327)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10328) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10329)         if (webUser != null) {
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10330)             jpql.append(" and b.creater=:wu ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10331)             params.put("wu", webUser);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10332)         }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10333) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10334)         jpql.append(" group by b.billType, b.billClassType, b.billTypeAtomic ");
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10335) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10336)         System.out.println("jpql.toString() = " + jpql.toString());
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10337)         System.out.println("params = " + params);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10338) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10339)         // Execute the query
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10340)         List<ReportTemplateRow> rows = (List<ReportTemplateRow>) getBillFacade().findLightsByJpql(jpql.toString(), params, TemporalType.TIMESTAMP);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10341) 
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10342)         bundle.setReportTemplateRows(rows);
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10343)         bundle.calculateTotalByValues();
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 10344) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10345)     }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10346) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10347)     public void listBillItems() {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10348)         billItems = null;
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10349)         Map<String, Object> params = new HashMap<>();
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10350)         StringBuilder jpql = new StringBuilder("select b from BillItem bi join bi.bill b where 1=1 ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10351)         if (toDate != null && fromDate != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10352)             jpql.append(" and b.createdAt between :fromDate and :toDate ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10353)             params.put("toDate", toDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10354)             params.put("fromDate", fromDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10355)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10356) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10357)         if (institution != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10358)             params.put("ins", institution);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10359)             jpql.append(" and b.department.institution = :ins ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10360)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10361) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10362)         if (department != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10363)             params.put("dep", department);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10364)             jpql.append(" and b.department = :dept ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10365)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10366) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10367)         if (site != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10368)             params.put("site", site);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10369)             jpql.append(" and b.department.site = :site ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10370)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10371) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10372)         if (webUser != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10373)             jpql.append(" and b.creater=:wu ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10374)             params.put("wu", webUser);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10375)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10376) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10377)         // Order by bill ID
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10378)         jpql.append(" order by b.id ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10379) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10380)         System.out.println("jpql.toString() = " + jpql.toString());
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10381)         System.out.println("params = " + params);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10382) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10383)         // Execute the query
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10384)         billItems = getBillItemFacade().findByJpql(jpql.toString(), params, TemporalType.TIMESTAMP);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10385) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10386)     }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10387) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10388)     public void listBillFees() {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10389)         billFees = null;
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10390)         Map<String, Object> params = new HashMap<>();
b6233a428b9 (Buddhika             2024-11-22 17:33:51 +0530 10391)         StringBuilder jpql = new StringBuilder("select bf from BillFee bf join bf.bill b where 1=1 ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10392)         if (toDate != null && fromDate != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10393)             jpql.append(" and b.createdAt between :fromDate and :toDate ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10394)             params.put("toDate", toDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10395)             params.put("fromDate", fromDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10396)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10397) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10398)         if (institution != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10399)             params.put("ins", institution);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10400)             jpql.append(" and b.department.institution = :ins ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10401)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10402) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10403)         if (department != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10404)             params.put("dep", department);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10405)             jpql.append(" and b.department = :dept ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10406)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10407) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10408)         if (site != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10409)             params.put("site", site);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10410)             jpql.append(" and b.department.site = :site ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10411)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10412) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10413)         if (webUser != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10414)             jpql.append(" and b.creater=:wu ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10415)             params.put("wu", webUser);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10416)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10417) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10418)         // Order by bill ID
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10419)         jpql.append(" order by b.id ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10420) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10421)         System.out.println("jpql.toString() = " + jpql.toString());
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10422)         System.out.println("params = " + params);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10423) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10424)         // Execute the query
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10425)         billFees = getBillFeeFacade().findByJpql(jpql.toString(), params, TemporalType.TIMESTAMP);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10426) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10427)     }
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 10428) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10429)     public void listPayments() {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10430)         payments = null;
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10431)         Map<String, Object> params = new HashMap<>();
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10432)         StringBuilder jpql = new StringBuilder("select p from Payment p where p.retired=:ret");
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10433)         params.put("ret", false);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10434)         if (toDate != null && fromDate != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10435)             jpql.append(" and p.createdAt between :fromDate and :toDate ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10436)             params.put("toDate", toDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10437)             params.put("fromDate", fromDate);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10438)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10439) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10440)         if (institution != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10441)             params.put("ins", institution);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10442)             jpql.append(" and p.department.institution = :ins ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10443)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10444) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10445)         if (department != null) {
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10446)             params.put("dep", department);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10447)             jpql.append(" and p.department = :dept ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10448)         }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10449) 
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10450) //        if (site != null) {
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10451) //            params.put("site", site);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10452) //            jpql.append(" and p.department.site = :site ");
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10453) //        }
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10454) //
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10455) //        if (webUser != null) {
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10456) //            jpql.append(" and p.creater=:wu ");
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10457) //            params.put("wu", webUser);
f8d81a5bfb1 (Buddhika             2024-09-26 17:15:55 +0530 10458) //        }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10459)         // Order by bill ID
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10460)         jpql.append(" order by p.id ");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10461) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10462)         System.out.println("jpql.toString() = " + jpql.toString());
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10463)         System.out.println("params = " + params);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10464) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10465)         // Execute the query
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10466)         payments = paymentFacade.findByJpql(jpql.toString(), params, TemporalType.TIMESTAMP);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10467) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10468)     }
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 10469) 
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10470)     public String fillAllBills(Date fromDate, Date toDate, Institution institution, Department department, PaymentMethod paymentMethod, BillTypeAtomic billtypeAtomic) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10471)         bills = null;
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10472)         Map<String, Object> params = new HashMap<>();
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10473)         StringBuilder jpql = new StringBuilder("select b from Bill b where 1=1 ");
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10474) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10475)         // Handle date filtering
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10476)         if (toDate != null && fromDate != null) {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10477)             jpql.append(" and b.createdAt between :fromDate and :toDate ");
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10478)             params.put("toDate", toDate);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10479)             params.put("fromDate", fromDate);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10480)         }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10481) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10482)         // Include BillTypeAtomic filtering
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10483)         List<BillTypeAtomic> billTypesToFilter = new ArrayList<>();
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10484)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_IN));
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10485)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CASH_OUT));
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10486)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT));
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10487)         billTypesToFilter.addAll(BillTypeAtomic.findByFinanceType(BillFinanceType.CREDIT_SETTLEMENT_REVERSE));
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10488)         if (!billTypesToFilter.isEmpty()) {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10489)             jpql.append(" and b.billTypeAtomic in :abts ");
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10490)             params.put("abts", billTypesToFilter);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10491)         }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10492) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10493)         // Institution and department filtering
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10494)         if (institution != null) {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10495)             jpql.append(" and b.institution = :ins ");
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10496)             params.put("ins", institution);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10497)             if (department != null) {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10498)                 jpql.append(" and b.department = :dept ");
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10499)                 params.put("dept", department);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10500)             }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10501)         }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10502) 
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10503)         if (paymentMethod != null) {
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10504)             jpql.append(" and b.paymentMethod=:pm ");
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10505)             params.put("pm", paymentMethod);
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10506)         }
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10507) 
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10508)         if (billtypeAtomic != null) {
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10509)             jpql.append(" and b.billTypeAtomic=:ba ");
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10510)             params.put("ba", billtypeAtomic);
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10511)         }
7d75d8d3a19 (Thiwanka Madushan    2024-05-07 21:37:18 +0530 10512) 
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530 10513)         if (webUser != null) {
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530 10514)             jpql.append(" and b.creater=:wu ");
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530 10515)             params.put("wu", webUser);
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530 10516)         }
981d5bc715d (buddhika75           2024-07-13 16:42:35 +0530 10517) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10518)         // Order by bill ID
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10519)         jpql.append(" order by b.id ");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10520) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10521)         System.out.println("jpql.toString() = " + jpql.toString());
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10522)         System.out.println("params = " + params);
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 10523) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10524)         // Execute the query
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10525)         bills = getBillFacade().findByJpql(jpql.toString(), params, TemporalType.TIMESTAMP);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10526)         System.out.println("bills = " + bills);
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10527)         return "/analytics/all_bills";
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10528)     }
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10529) 
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10530)     public void fillAllBills() {
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10531)         bills = null;
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10532)         String jpql;
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10533)         Map params = new HashMap();
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10534)         jpql = "select b from "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10535)                 + " Bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10536)                 + " where b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10537)                 + " order by b.id ";
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10538)         params.put("toDate", getToDate());
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10539)         params.put("fromDate", getFromDate());
d5d837baa6c (Dr M H B Ariyaratne  2024-04-30 21:00:13 +0530 10540)         bills = getBillFacade().findByJpql(jpql, params, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10541)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10542) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10543)     public void fillOtherInstitutionBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10544)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10545)         if (otherInstitution == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10546)             JsfUtil.addErrorMessage("Select other Institution");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10547)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10548)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10549)         String jpql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10550)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10551) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10552)         jpql = "select b from "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10553)                 + " Bill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10554)                 + " where b.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10555)         jpql += " and b.institution in :ins ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10556)         m.put("ins", sessionController.getLoggableInstitutions());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10557) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10558)         jpql += " and (b.fromInstitution=:oi or b.toInstitution=:oi or b.bank=:oi or b.referenceInstitution=:oi or b.creditCompany=:oi and b.collectingCentre=:oi or b.paymentSchemeInstitution=:oi or b.referredByInstitution=:oi ) ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10559)         m.put("oi", otherInstitution);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10560) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10561)         jpql += " order by b.id ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10562)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10563)         m.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10564)         bills = getBillFacade().findByJpql(jpql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10565)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10566) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10567)     public String getInstitutionType(Bill bill) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10568)         if (bill == null || otherInstitution == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10569)             return "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10570)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10571)         if (bill.getFromInstitution() != null && bill.getFromInstitution().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10572)             return "From Institution";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10573)         } else if (bill.getToInstitution() != null && bill.getToInstitution().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10574)             return "To Institution";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10575)         } else if (bill.getBank() != null && bill.getBank().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10576)             return "Bank";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10577)         } else if (bill.getReferenceInstitution() != null && bill.getReferenceInstitution().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10578)             return "Reference Institution";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10579)         } else if (bill.getCreditCompany() != null && bill.getCreditCompany().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10580)             return "Credit Company";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10581)         } else if (bill.getCollectingCentre() != null && bill.getCollectingCentre().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10582)             return "Collecting Centre";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10583)         } else if (bill.getPaymentSchemeInstitution() != null && bill.getPaymentSchemeInstitution().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10584)             return "Payment Scheme Institution";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10585)         } else if (bill.getReferredByInstitution() != null && bill.getReferredByInstitution().equals(otherInstitution)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10586)             return "Referred By Institution";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10587)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10588)         return "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10589)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10590) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10591)     public String viewOPD(Bill b) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10592)         if (b.getBillType() == BillType.OpdBill) {
4d53eda9f92 (Dr M H B Ariyaratne  2024-03-29 19:13:33 +0530 10593)             return "/opd/bill_reprint?faces-redirect=true;";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10594)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10595)             JsfUtil.addErrorMessage("Please Search Again and View Bill");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10596)             bills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10597)             return "";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10598)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10599)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10600) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10601)     public String viewOPDBillById(Long billId) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10602)         if (billId == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10603)             return null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10604)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10605)         Bill tb = getBillFacade().find(billId);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10606)         if (tb == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10607)             return null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10608)         }
540e6b28f10 (DamithDeshan         2024-04-18 16:09:34 +0530 10609)         //System.out.println("tb = " + tb);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10610)         bill = tb;
540e6b28f10 (DamithDeshan         2024-04-18 16:09:34 +0530 10611)         //System.out.println("bill = " + bill);
4d53eda9f92 (Dr M H B Ariyaratne  2024-03-29 19:13:33 +0530 10612)         return "/opd/bill_reprint?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10613)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10614) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10615)     public void createTableCashIn() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10616)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10617)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10618)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10619) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10620)         sql = "select b from BilledBill b where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10621)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10622)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10623)                 + " and b.retired=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10624)                 + " and b.creater=:w ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10625) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10626)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10627)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10628)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10629)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10630) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10631)         if (getSearchKeyword().getPersonName() != null && !getSearchKeyword().getPersonName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10632)             sql += " and  ((b.fromWebUser.webUserPerson.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10633)             temMap.put("patientName", "%" + getSearchKeyword().getPersonName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10634)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10635) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10636)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10637)             sql += " and  ((b.netTotal) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10638)             temMap.put("total", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10639)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10640) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10641)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10642) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10643)         temMap.put("billType", BillType.CashIn);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10644)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10645)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10646)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10647)         temMap.put("w", getSessionController().getLoggedUser());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10648) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10649)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10650)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10651) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10652)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10653) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10654)     public void createTableCashOut() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10655)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10656)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10657)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10658) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10659)         sql = "select b from BilledBill b where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10660)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10661)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10662)                 + " and b.retired=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10663)                 + " and b.creater=:w ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10664) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10665)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10666)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10667)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10668)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10669) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10670)         if (getSearchKeyword().getPersonName() != null && !getSearchKeyword().getPersonName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10671)             sql += " and  ((b.toWebUser.webUserPerson.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10672)             temMap.put("patientName", "%" + getSearchKeyword().getPersonName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10673)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10674) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10675)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10676)             sql += " and  ((b.netTotal) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10677)             temMap.put("total", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10678)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10679) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10680)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10681) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10682)         temMap.put("billType", BillType.CashOut);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10683)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10684)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10685)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10686)         temMap.put("w", getSessionController().getLoggedUser());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10687) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10688)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10689)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10690) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10691)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10692) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10693)     public void createSearchBill() {
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10694)         // Check if getSearchKeyword() itself is null to prevent NPE
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10695)         if (getSearchKeyword() == null) {
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10696)             JsfUtil.addErrorMessage("Search keyword is null");
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10697)             return;
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10698)         }
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10699) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10700)         // Check if all necessary fields in getSearchKeyword() are null
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10701)         if ((getSearchKeyword().getInsId() == null || getSearchKeyword().getInsId().isEmpty())
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10702)                 && (getSearchKeyword().getDeptId() == null || getSearchKeyword().getDeptId().isEmpty())
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10703)                 && (getSearchKeyword().getBhtNo() == null || getSearchKeyword().getBhtNo().trim().isEmpty())
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10704)                 && getSearchKeyword().getRefBillNo() == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10705)             JsfUtil.addErrorMessage("Enter BHT No or Bill No");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10706)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10707)         }
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10708) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10709)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10710)         String sql;
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10711)         Map<String, Object> m = new HashMap<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10712) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10713)         sql = "select b from Bill b where b.id is not null";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10714) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10715)         // Check and handle InsId
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10716)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().isEmpty()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10717)             sql += " and (b.insId=:insId or b.deptId=:insId)  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10718)             m.put("insId", getSearchKeyword().getInsId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10719)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10720) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10721)         // Check and handle DeptId
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10722)         if (getSearchKeyword().getDeptId() != null && !getSearchKeyword().getDeptId().isEmpty()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10723)             sql += " and (b.insId=:deptId or b.deptId=:deptId)  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10724)             m.put("deptId", getSearchKeyword().getDeptId());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10725)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10726) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10727)         // Check and handle BhtNo
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10728)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().isEmpty()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10729)             sql += " and b.patientEncounter.bhtNo=:bht";
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10730)             m.put("bht", getSearchKeyword().getBhtNo().trim());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10731)         }
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10732) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10733)         // Check and handle RefBillNo
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10734)         if (getSearchKeyword().getRefBillNo() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10735)             try {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10736)                 long l = Long.parseLong(getSearchKeyword().getRefBillNo());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10737)                 sql += " and b.id=:id";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10738)                 m.put("id", l);
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10739)             } catch (NumberFormatException e) {
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10740)                 // Handle the case where RefBillNo is not a valid number
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10741)                 JsfUtil.addErrorMessage("Invalid Bill No");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10742)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10743)         }
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10744) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10745)         sql += " order by b.deptId";
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10746) 
429cd2db8f1 (Buddhika Ariyaratne  2024-10-03 03:51:41 +0530 10747)         // Fetch bills using the query
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10748)         bills = getBillFacade().findByJpql(sql, m, 5000);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10749)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10750) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10751)     public void createSearchAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10752)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10753)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10754)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10755) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10756)         sql = "select b from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10757)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10758)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10759) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10760)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10761)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10762)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10763)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10764) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10765)         if (getSearchKeyword().getInstitution() != null && !getSearchKeyword().getInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10766)             sql += " and  ((b.institution.name) like :ins )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10767)             temMap.put("ins", "%" + getSearchKeyword().getInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10768)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10769)         if (getSearchKeyword().getToInstitution() != null && !getSearchKeyword().getToInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10770)             sql += " and  ((b.toInstitution.name) like :toIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10771)             temMap.put("toIns", "%" + getSearchKeyword().getToInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10772)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10773)         if (getSearchKeyword().getToDepartment() != null && !getSearchKeyword().getToDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10774)             sql += " and  ((b.toDepartment.name) like :toDept )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10775)             temMap.put("toDept", "%" + getSearchKeyword().getToDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10776)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10777)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10778)             sql += " and  ((b.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10779)             temMap.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10780)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10781)         if (getSearchKeyword().getFromDepartment() != null && !getSearchKeyword().getFromDepartment().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10782)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10783)             temMap.put("patientName", "%" + getSearchKeyword().getFromDepartment().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10784)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10785) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10786)         if (getSearchKeyword().getPaymentScheme() != null && !getSearchKeyword().getPaymentScheme().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10787)             sql += " and  ((b.paymentScheme.name) like :pScheme )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10788)             temMap.put("pScheme", "%" + getSearchKeyword().getPaymentScheme().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10789)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10790) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10791)         if (getSearchKeyword().getPaymentmethod() != null && !getSearchKeyword().getPaymentmethod().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10792)             sql += " and  ((b.paymentMethod) like :pm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10793)             temMap.put("pm", "%" + getSearchKeyword().getPaymentmethod().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10794)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10795) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10796)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10797)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10798)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10799)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10800) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10801)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10802)             sql += " and  ((b.insId) like :insId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10803)             temMap.put("insId", "%" + getSearchKeyword().getInsId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10804)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10805) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10806)         if (getSearchKeyword().getDeptId() != null && !getSearchKeyword().getDeptId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10807)             sql += " and  ((b.insId) like :deptId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10808)             temMap.put("deptId", "%" + getSearchKeyword().getDeptId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10809)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10810) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10811)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10812)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10813)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10814)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10815) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10816)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10817)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10818)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10819)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10820) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10821)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10822) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10823) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10824)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10825)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10826) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10827)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10828)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10829) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10830)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10831) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10832)     public void createCollectingTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10833)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10834)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10835)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10836) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10837)         sql = "select b from BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10838)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10839)                 + " b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10840)                 + " and b.createdAt between :fromDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10841)                 + " and :toDate and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10842) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10843)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10844)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10845)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10846)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10847) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10848)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10849)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10850)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10851)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10852) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10853)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10854)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10855)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10856)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10857) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10858)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10859)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10860)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10861)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10862) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10863)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10864)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10865)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10866)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10867) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10868)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10869) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10870)         temMap.put("billType", BillType.LabBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10871)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10872)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10873)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10874) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10875)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10876)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10877) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10878)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10879) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10880)     public void createCollectingTableAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10881)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10882)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10883)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10884) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10885)         sql = "select b from BilledBill b where b.billType = :billType and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10886)                 + " and b.createdAt between :fromDate and :toDate and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10887) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10888)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10889)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10890)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10891)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10892) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10893)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10894)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10895)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10896)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10897) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10898)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10899)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10900)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10901)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10902) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10903)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10904)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10905)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10906)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10907) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10908)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10909)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10910)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10911)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10912) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10913)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10914) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10915)         temMap.put("billType", BillType.LabBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10916)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10917)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10918)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10919) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10920)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10921)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10922) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10923)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10924) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10925)     public void createCollectingBillItemTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10926)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10927)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10928)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10929) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10930)         sql = "select bi from BillItem bi join bi.bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10931)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10932)                 + " b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10933)                 + " and b.createdAt between :fromDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10934)                 + " and :toDate and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10935)                 + " and type(b)=:class ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10936) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10937)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10938)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10939)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10940)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10941) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10942)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10943)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10944)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10945)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10946) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10947)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10948)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10949)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10950)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10951) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10952)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10953)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10954)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10955)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10956) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10957)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10958)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10959)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10960)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10961) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10962)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10963)             sql += " and  ((bi.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10964)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10965)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10966) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10967)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10968) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10969)         temMap.put("billType", BillType.LabBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10970)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10971)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10972)         temMap.put("ins", getSessionController().getInstitution());
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 10973)         temMap
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 10974)                 .put("class", BilledBill.class
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 10975)                 );
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10976) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10977)         billItems = getBillItemFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10978)         ////System.out.println("billItems = " + billItems);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10979) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10980)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10981) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10982)     public void createCollectingBillItemTableAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10983)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10984)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10985)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10986) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10987)         sql = "select bi from BillItem bi join bi.bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10988)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10989)                 + " b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10990)                 + " and b.createdAt between :fromDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10991)                 + " and :toDate and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10992)                 + " and type(b)=:class ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10993) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10994)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10995)             sql += " and  ((b.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10996)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10997)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10998) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 10999)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11000)             sql += " and  ((b.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11001)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11002)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11003) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11004)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11005)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11006)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11007)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11008) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11009)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11010)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11011)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11012)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11013) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11014)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11015)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11016)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11017)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11018) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11019)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11020)             sql += " and  ((bi.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11021)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11022)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11023) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11024)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11025) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11026)         temMap.put("billType", BillType.LabBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11027)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11028)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11029)         temMap.put("ins", getSessionController().getInstitution());
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11030)         temMap
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11031)                 .put("class", BilledBill.class
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11032)                 );
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11033) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11034)         billItems = getBillItemFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11035)         ////System.out.println("billItems = " + billItems);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11036) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11037)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11038) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11039)     public void createCreditTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11040)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11041) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11042)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11043)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11044)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11045) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11046)         sql = "select b from BilledBill b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11047)                 + " where b.billType = :billType"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11048)                 + "  and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11049)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11050)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11051) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11052)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11053)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11054)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11055)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11056) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11057)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11058)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11059)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11060)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11061) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11062)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11063)             sql += " and  ((b.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11064)             temMap.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11065)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11066) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11067)         if (getSearchKeyword().getBank() != null && !getSearchKeyword().getBank().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11068)             sql += " and  ((b.bank.name) like :bank )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11069)             temMap.put("bank", "%" + getSearchKeyword().getBank().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11070)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11071) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11072)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11073)             sql += " and  ((b.chequeRefNo) like :num )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11074)             temMap.put("num", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11075)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11076) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11077)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11078) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11079)         temMap.put("billType", BillType.CashRecieveBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11080)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11081)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11082)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11083) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11084)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11085)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11086) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11087)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11088) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11089)     public void createCreditTableBillItemAll() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11090)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11091) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11092)         createCreditTableBillItem(null, true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11093) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11094)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11095) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11096)     public void createCreditTableBillItemOpd() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11097)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11098)         createCreditTableBillItem(BillType.OpdBill, false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11099) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11100)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11101) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11102)     public void createCreditTableBillItemBht() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11103)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11104)         createCreditTableBillItem(null, false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11105) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11106)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11107) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11108)     public void createCreditTableBillItem(BillType billType, boolean all) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11109)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11110)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11111)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11112) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11113)         sql = "select b from BillItem b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11114)                 + " where b.bill.billType = :billType"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11115)                 + "  and b.bill.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11116)                 + " and b.bill.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11117)                 + " and b.bill.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11118) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11119)         if (!all) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11120)             if (billType != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11121)                 sql += " and b.referenceBill.billType=:refBtp";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11122)                 temMap.put("refBtp", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11123)             } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11124)                 sql += " and b.patientEncounter is not null ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11125)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11126) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11127)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11128) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11129)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11130)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11131)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11132)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11133)         if (billType != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11134)             if (getSearchKeyword().getRefBillNo() != null && !getSearchKeyword().getRefBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11135)                 sql += " and  ((b.referenceBill.insId) like :reBillNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11136)                 temMap.put("reBillNo", "%" + getSearchKeyword().getRefBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11137)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11138)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11139) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11140)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11141)             sql += " and  ((b.bill.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11142)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11143)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11144) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11145)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11146)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11147)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11148)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11149) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11150)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11151)             sql += " and  ((b.bill.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11152)             temMap.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11153)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11154) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11155)         if (getSearchKeyword().getBank() != null && !getSearchKeyword().getBank().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11156)             sql += " and  ((b.bill.bank.name) like :bank )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11157)             temMap.put("bank", "%" + getSearchKeyword().getBank().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11158)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11159) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11160)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11161)             sql += " and  ((b.bill.chequeRefNo) like :num )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11162)             temMap.put("num", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11163)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11164) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11165)         sql += " order by b.bill.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11166) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11167)         temMap.put("billType", BillType.CashRecieveBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11168)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11169)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11170)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11171) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11172)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11173)         billItems = getBillItemFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11174) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11175)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11176) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11177)     public List<Bill> getChannelPaymentBillsOld() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11178)         if (bills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11179)             String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11180)             Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11181)             if (bills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11182)                 sql = "SELECT b FROM BilledBill b WHERE b.retired=false and b.id in"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11183)                         + "(Select bt.bill.id From BillItem bt Where bt.referenceBill.billType=:btp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11184)                         + " or bt.referenceBill.billType=:btp2) and b.billType=:type and b.createdAt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11185)                         + "between :fromDate and :toDate order by b.id";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11186) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11187)                 temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11188)                 temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11189)                 temMap.put("type", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11190)                 temMap.put("btp", BillType.ChannelPaid);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11191)                 temMap.put("btp2", BillType.ChannelCredit);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11192)                 bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 100);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11193) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11194)                 if (bills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11195)                     bills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11196)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11197)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11198)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11199)         return bills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11200) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11201)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11202) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11203)     public void channelPaymentBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11204)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11205) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11206)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11207)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11208) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11209)         BillType[] bt = {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11210)             BillType.ChannelOnCall,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11211)             BillType.ChannelCash,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11212)             BillType.ChannelAgent,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11213)             BillType.ChannelStaff,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11214)             BillType.ChannelCredit,};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11215) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11216)         List<BillType> bts = Arrays.asList(bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11217) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11218)         sql = "SELECT bi FROM BillItem bi WHERE bi.retired = false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11219)                 + " and bi.bill.billType=:bt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11220)                 + " and type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11221)                 + " and bi.paidForBillFee.bill.billType in :bts "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11222)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11223) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11224)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11225)             sql += " and  ((bi.paidForBillFee.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11226)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11227)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11228) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11229)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11230)             sql += " and  ((bi.paidForBillFee.bill.insId) like :billNo or (bi.paidForBillFee.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11231)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11232)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11233) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11234)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11235)             sql += " and  ((bi.bill.insId) like :insId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11236)             m.put("insId", "%" + getSearchKeyword().getInsId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11237)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11238) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11239)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11240)             sql += " and  ((bi.paidForBillFee.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11241)             m.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11242)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11243) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11244)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11245)             sql += " and  ((bi.paidForBillFee.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11246)             m.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11247)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11248) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11249)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11250)             sql += " and  ((bi.paidForBillFee.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11251)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11252)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11253) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11254)         sql += " order by bi.bill.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11255) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11256)         m.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11257)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11258)         m.put("bt", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11259)         m.put("bts", bts);
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11260)         m
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11261)                 .put("class", BilledBill.class
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11262)                 );
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11263) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11264)         if (getReportKeyWord().isAdditionalDetails()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11265)             billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11266)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11267)             billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11268)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11269) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11270)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11271) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11272)     public void channelPaymentBillsNew() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11273)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11274) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11275)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11276)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11277) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11278)         BillType[] bt = {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11279)             BillType.ChannelOnCall,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11280)             BillType.ChannelCash,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11281)             BillType.ChannelAgent,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11282)             BillType.ChannelStaff,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11283)             BillType.ChannelPaid,
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 11284)             BillType.ChannelCredit,};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11285) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11286)         List<BillType> bts = Arrays.asList(bt);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11287) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11288)         sql = "SELECT bi FROM BillItem bi WHERE bi.retired = false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11289)                 + " and bi.bill.billType=:bt "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11290)                 + " and type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11291)                 + " and bi.paidForBillFee.bill.billType in :bts "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11292)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11293) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11294)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11295)             sql += " and  ((bi.paidForBillFee.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11296)             m.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11297)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11298) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11299)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11300)             sql += " and  ((bi.paidForBillFee.bill.insId) like :billNo or (bi.paidForBillFee.bill.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11301)             m.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11302)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11303) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11304)         if (getSearchKeyword().getInsId() != null && !getSearchKeyword().getInsId().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11305)             sql += " and  ((bi.bill.insId) like :insId )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11306)             m.put("insId", "%" + getSearchKeyword().getInsId().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11307)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11308) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11309)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11310)             sql += " and  ((bi.paidForBillFee.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11311)             m.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11312)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11313) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11314)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11315)             sql += " and  ((bi.paidForBillFee.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11316)             m.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11317)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11318) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11319)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11320)             sql += " and  ((bi.paidForBillFee.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11321)             m.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11322)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11323) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11324)         sql += " order by bi.bill.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11325) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11326)         m.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11327)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11328)         m.put("bt", BillType.ChannelProPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11329)         m.put("bts", bts);
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11330)         m
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11331)                 .put("class", BilledBill.class
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11332)                 );
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11333)         if (getReportKeyWord().isAdditionalDetails()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11334)             billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11335)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11336)             billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11337)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11338) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11339)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11340) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11341)     public void channelAgentPaymentBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11342)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11343) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11344)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11345)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11346) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11347)         sql = "SELECT bi FROM BillItem bi WHERE bi.retired = false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11348)                 + " and bi.bill.billType=:bt"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11349)                 + " and bi.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11350) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11351)         if (getSearchKeyword().getIns() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11352)             sql += " and bi.bill.toInstitution=:ins";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11353)             m.put("ins", getSearchKeyword().getIns());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11354)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11355) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11356)         m.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11357)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11358)         m.put("bt", BillType.ChannelAgencyPayment);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11359)         billItems = getBillItemFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11360) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11361)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11362) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11363)     public void createChannelDueBillFeeOld() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11364) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11365)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11366)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11367) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11368)         sql = "select b from BillFee b where b.retired=false and (b.bill.billType=:btp or b.bill.billType=:btp2) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11369)                 + " and b.bill.id in(Select bs.bill.id From BillSession bs where bs.retired=false ) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11370)                 + "and b.bill.cancelled=false and (b.feeValue - b.paidValue) > 0 and  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11371)                 + "b.bill.createdAt between :fromDate and :toDate order by b.staff.id  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11372) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11373)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11374)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11375)         temMap.put("btp", BillType.ChannelPaid);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11376)         temMap.put("btp2", BillType.ChannelCredit);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11377) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11378)         billFees = getBillFeeFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11379) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11380)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11381) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11382)     public void createChannelDueBillFee() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11383)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11384) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11385)         selectedServiceSession = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11386) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11387)         BillType[] billTypes = {BillType.ChannelAgent, BillType.ChannelCash, BillType.ChannelOnCall, BillType.ChannelStaff};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11388)         List<BillType> bts = Arrays.asList(billTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11389)         String sql = " SELECT b FROM BillFee b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11390)                 + "  where type(b.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11391)                 + " and b.bill.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11392)                 + " and b.bill.paidAmount!=0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11393)                 + " and b.bill.refunded=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11394)                 + " and b.fee.feeType=:ftp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11395)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11396)                 + " and (b.feeValue - b.paidValue) > 0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11397)                 + " and b.bill.billType in :bt ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11398) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11399)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11400)         if (getFromDate() != null && getToDate() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11401)             sql += " and b.bill.appointmentAt between :frm and  :to";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11402)             hm.put("frm", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11403)             hm.put("to", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11404)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11405) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11406)         if (getSelectedServiceSession() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11407)             sql += " and bs.serviceSession=:ss";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11408)             hm.put("ss", getSelectedServiceSession());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11409)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11410) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11411)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11412)             sql += " and  ((b.bill.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11413)             hm.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11414)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11415) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11416)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11417)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11418)             hm.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11419)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11420) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11421)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11422)             sql += " and  ((b.feeValue) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11423)             hm.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11424)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11425) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11426)         if (getSearchKeyword().getSpeciality() != null && !getSearchKeyword().getSpeciality().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11427)             sql += " and  ((b.staff.speciality.name) like :special )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11428)             hm.put("special", "%" + getSearchKeyword().getSpeciality().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11429)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11430) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11431)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11432)             sql += " and  ((b.staff.person.name) like :staff )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11433)             hm.put("staff", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11434)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11435) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11436)         sql += " order by b.speciality.name ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11437) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11438)         //hm.put("ins", sessionController.getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11439)         hm.put("bt", bts);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11440)         hm.put("ftp", FeeType.Staff);
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11441)         hm
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11442)                 .put("class", BilledBill.class
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11443)                 );
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11444)         if (getReportKeyWord().isAdditionalDetails()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11445)             billFees = billFeeFacade.findByJpql(sql, hm, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11446)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11447)             billFees = billFeeFacade.findByJpql(sql, hm, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11448)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11449) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11450)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11451) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11452)     public void createChannelDueBillFeeByAgent() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11453)         selectedServiceSession = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11454) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11455)         //BillType[] billTypes = {BillType.ChannelAgent, BillType.ChannelCash, BillType.ChannelOnCall, BillType.ChannelStaff};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11456)         // List<BillType> bts = Arrays.asList(billTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11457)         String sql = " SELECT b FROM BillFee b "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11458)                 + "  where type(b.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11459)                 + " and b.bill.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11460)                 + " and b.bill.paidAmount!=0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11461)                 + " and b.bill.refunded=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11462)                 + " and b.fee.feeType=:ftp"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11463)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11464)                 + " and (b.feeValue - b.paidValue) > 0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11465)                 + " and b.bill.billType in :bt ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11466) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11467)         HashMap hm = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11468)         if (getFromDate() != null && getToDate() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11469)             sql += " and b.bill.appointmentAt between :frm and  :to";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11470)             hm.put("frm", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11471)             hm.put("to", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11472)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11473) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11474)         if (getSelectedServiceSession() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11475)             sql += " and bs.serviceSession=:ss";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11476)             hm.put("ss", getSelectedServiceSession());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11477)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11478) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11479) //        if (getCurrentStaff() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11480) //            sql += " and b.staff=:stf ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11481) //            hm.put("stf", getCurrentStaff());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11482) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11483)         //hm.put("ins", sessionController.getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11484)         hm.put("bt", BillType.ChannelAgent);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11485)         hm.put("ftp", FeeType.OtherInstitution);
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11486)         hm
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11487)                 .put("class", BilledBill.class
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11488)                 );
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11489)         billFees = billFeeFacade.findByJpql(sql, hm, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11490) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11491)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11492) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11493)     public void createChannelAgencyPaymentTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11494)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11495) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11496)         createAgentPaymentTable(BillType.AgentPaymentReceiveBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11497) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11498)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11499) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11500)     public void createChannelAgencyCreditNoteTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11501) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11502)         createAgentPaymentTable(BillType.AgentCreditNoteBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11503) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11504)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11505) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11506)     public void createChannelAgencyDebitNoteTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11507) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11508)         createAgentPaymentTable(BillType.AgentDebitNoteBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11509) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11510)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11511) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11512)     public void createCollectingCenterCreditNoteTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11513) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11514)         createAgentPaymentTable(BillType.CollectingCentreCreditNoteBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11515) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11516)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11517) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11518)     public void createCollectingCenterDebitNoteTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11519) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11520)         createAgentPaymentTable(BillType.CollectingCentreDebitNoteBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11521) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11522)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11523) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11524)     public void createCollectingCentrePaymentTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11525)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11526)         createAgentPaymentTable(BillType.CollectingCentrePaymentReceiveBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11527) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11528)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11529) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11530)     public void createPatientDepositTable() {
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11531)         Date startTime = new Date();
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11532)         createPatientDepositTable(BillType.PatientPaymentReceiveBill);
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11533) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11534)     }
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11535) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11536)     public void createAgentPaymentTable(BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11537)         bills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11538)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11539)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11540) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11541)         sql = "select b from BilledBill b where b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11542)                 + " and b.institution=:ins and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11543)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11544) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11545)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11546)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11547)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11548)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11549) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11550)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11551)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11552)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11553)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11554) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11555)         if (getSearchKeyword().getFromInstitution() != null && !getSearchKeyword().getFromInstitution().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11556)             sql += " and  ((b.fromInstitution.name) like :frmIns )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11557)             temMap.put("frmIns", "%" + getSearchKeyword().getFromInstitution().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11558)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11559) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11560)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11561)             sql += " and  ((b.fromInstitution.institutionCode) like :num )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11562)             temMap.put("num", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11563)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11564) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11565)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11566) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11567)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11568)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11569)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11570)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11571) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11572)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11573)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11574) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11575)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11576) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11577)     public void createPatientDepositTable(BillType billType) {
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11578)         bills = new ArrayList<>();
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11579)         String sql;
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11580)         Map temMap = new HashMap();
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11581) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11582)         sql = "select b from Bill b where b.billType = :billType "
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11583)                 + " and b.createdAt between :fromDate and :toDate "
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11584)                 + " and b.retired=false ";
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11585) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11586)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11587)             sql += " and  ((b.insId) like :billNo )";
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11588)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11589)         }
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11590) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11591)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11592)             sql += " and  ((b.netTotal) like :netTotal )";
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11593)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11594)         }
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11595) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11596)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11597)             sql += " and  ((b.patient.person.name) like :pn )";
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11598)             temMap.put("pn", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11599)         }
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11600) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11601)         sql += " order by b.createdAt desc  ";
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11602) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11603)         temMap.put("billType", billType);
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11604)         temMap.put("toDate", getToDate());
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11605)         temMap.put("fromDate", getFromDate());
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11606) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11607)         //System.err.println("Sql " + sql);
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11608)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11609) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11610)     }
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 11611) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11612)     public void createInwardServiceTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11613)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11614) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11615)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11616)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11617)         sql = "select (b.bill) from BillItem b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11618)                 + " b.bill.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11619)                 + " and type(b.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11620)                 + " and b.bill.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11621)                 + " and b.bill.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11622) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11623)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11624)             sql += " and  ((b.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11625)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11626)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11627) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11628)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11629)             sql += " and  ((b.bill.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11630)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11631)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11632) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11633)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11634)             sql += " and  ((b.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11635)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11636)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11637) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11638)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11639)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11640)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11641)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11642) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11643)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11644)             sql += " and  ((b.bill.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11645)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11646)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11647) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11648)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11649)             sql += " and  ((b.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11650)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11651)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11652) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 11653)         sql += " order by b.bill.deptId desc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11654)         temMap.put("billType", BillType.InwardBill);
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11655)         temMap
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11656)                 .put("class", BilledBill.class
4c438a05b07 (DamithDeshan         2024-06-24 13:09:11 +0530 11657)                 );
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11658)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11659)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11660) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11661)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11662) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11663)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11664) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11665)     public void createInwardServiceTablebyLoggedDepartment() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11666)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11667) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11668)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11669)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11670)         sql = "select (b.bill) from BillItem b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11671)                 + " b.bill.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11672)                 + " and b.bill.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11673)                 + " and b.bill.retired=false  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11674)                 + " and b.bill.department = :dep";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11675) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11676)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11677)             sql += " and  ((b.bill.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11678)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11679)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11680) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11681)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11682)             sql += " and  ((b.bill.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11683)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11684)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11685) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11686)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11687)             sql += " and  ((b.bill.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11688)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11689)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11690) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11691)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11692)             sql += " and  ((b.bill.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11693)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11694)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11695) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11696)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11697)             sql += " and  ((b.bill.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11698)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11699)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11700) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11701)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11702)             sql += " and  ((b.item.name) like :item )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11703)             temMap.put("item", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11704)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11705) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 11706)         sql += " order by b.bill.deptId desc ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11707)         temMap.put("dep", getSessionController().getDepartment());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11708)         temMap.put("billType", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11709)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11710)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11711) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11712)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11713) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11714)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11715) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11716)     public void createInwardServiceTableDischarged() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11717) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11718)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11719)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11720) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11721)         sql = "select b from BilledBill b where b.createdAt is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11722)                 + " and b.patientEncounter.discharged=true and"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11723)                 + " b.billType = :billType and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11724)                 + "and b.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11725) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11726)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11727)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11728)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11729)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11730) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11731)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11732)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11733)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11734)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11735) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11736)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11737)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11738)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11739)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11740) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11741)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11742)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11743)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11744)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11745) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11746)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11747)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11748)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11749)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11750) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 11751)         sql += "order by b.deptId desc";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11752) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11753)         temMap.put("billType", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11754)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11755)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11756) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11757)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11758) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11759)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11760) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11761)     public void createInwardFinalBillsCheck() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11762)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11763) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11764)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11765)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11766)         sql = "select b from BilledBill b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11767)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11768)                 + " b.patientEncounter.dateOfDischarge between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11769)                 + "and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11770) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11771)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11772)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11773)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11774)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11775) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11776)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11777)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11778)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11779)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11780) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11781)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11782)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11783)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11784)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11785) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11786)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11787)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11788)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11789)         }
6d37c491e24 (Thiwanka570          2024-04-04 19:09:13 +0530 11790) 
dde57c06c8d (Senula88             2024-02-19 12:37:33 +0530 11791)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
dde57c06c8d (Senula88             2024-02-19 12:37:33 +0530 11792)             sql += " and  ((b.total) like :total )";
dde57c06c8d (Senula88             2024-02-19 12:37:33 +0530 11793)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
dde57c06c8d (Senula88             2024-02-19 12:37:33 +0530 11794)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11795) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11796)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11797)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11798)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11799)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11800) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 11801)         sql += " order by b.deptId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11802) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11803)         temMap.put("billType", BillType.InwardFinalBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11804)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11805)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11806) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11807)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11808) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11809)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11810) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11811)     public void createInwardFinalBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11812) //        double d = commonController.dateDifferenceInMinutes(fromDate, toDate) / (60 * 24);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11813) //        if (d > 32 && getReportKeyWord().isBool1()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11814) //            JsfUtil.addErrorMessage("Date Range To Long");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11815) //            return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11816) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11817)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11818) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11819)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11820)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11821)         sql = "select b from BilledBill b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11822)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11823)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11824)                 + "and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11825) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11826)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11827)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11828)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11829)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11830) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11831)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11832)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11833)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11834)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11835) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11836)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11837)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11838)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11839)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11840) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11841)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11842)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11843)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11844)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11845) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11846)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11847)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11848)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11849)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11850) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 11851)         sql += " order by b.deptId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11852) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11853)         temMap.put("billType", BillType.InwardFinalBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11854)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11855)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11856) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11857) //        if (getReportKeyWord().isBool1()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11858)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11859) //        } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11860) //            bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11861) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11862) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11863)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11864) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11865)     public void createCancelledInwardFinalBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11866)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11867)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11868)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11869)         sql = "select b from BilledBill b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11870)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11871)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11872)                 + " and b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11873)                 + " and b.cancelled=true ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11874) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11875)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11876)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11877)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11878)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11879) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11880)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11881)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11882)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11883)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11884) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11885)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11886)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11887)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11888)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11889) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11890)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11891)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11892)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11893)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11894) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11895)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11896)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11897)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11898)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11899) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 11900)         sql += " order by b.deptId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11901) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11902)         temMap.put("billType", BillType.InwardFinalBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11903)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11904)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11905) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11906) //        if (getReportKeyWord().isBool1()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11907)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11908) //        } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11909) //            bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11910) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11911) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11912)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11913) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11914)     public void createInwardIntrimBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11915)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11916) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11917)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11918)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11919)         sql = "select b from BilledBill b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11920)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11921)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11922)                 + "and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11923) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11924)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11925)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11926)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11927)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11928) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11929)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11930)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11931)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11932)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11933) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11934)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11935)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11936)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11937)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11938) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11939)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11940)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11941)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11942)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11943) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11944)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11945)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11946)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11947)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11948) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11949)         sql += " order by b.insId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11950) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11951)         temMap.put("billType", BillType.InwardIntrimBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11952)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11953)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11954) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11955)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11956) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11957)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11958) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11959)     public void createInwardPaymentBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11960)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11961) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11962)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11963)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11964)         sql = "select b from BilledBill b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11965)                 + " b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11966)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11967)                 + " and b.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11968) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11969)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11970)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11971)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11972)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11973) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11974)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11975)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11976)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11977)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11978) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11979)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11980)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11981)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11982)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11983) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11984)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11985)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11986)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11987)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11988) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11989)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11990)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11991)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11992)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11993) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 11994)         sql += " order by b.deptId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11995) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11996)         temMap.put("billType", BillType.InwardPaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11997)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11998)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 11999) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12000)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12001) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12002)     }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530 12003) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12004)     public void createInwardRefundBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12005)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12006) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12007)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12008)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12009)         sql = "select b from RefundBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12010)                 + " b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12011)                 + " and b.billedBill is null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12012)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12013)                 + " and b.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12014) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12015)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12016)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12017)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12018)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12019) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12020)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12021)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12022)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12023)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12024) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12025)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12026)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12027)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12028)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12029) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12030)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12031)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12032)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12033)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12034) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12035)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12036)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12037)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12038)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12039) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 12040)         sql += " order by b.deptId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12041) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12042)         temMap.put("billType", BillType.InwardPaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12043)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12044)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12045) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12046)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12047) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12048)     }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530 12049) 
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530 12050)     public void searchSurgery() {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12051)         Date startTime = new Date();
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12052) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12053)         if (searchKeyword.isActiveAdvanceOption() && searchKeyword.getItem() == null && searchKeyword.getItemName().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12054)             JsfUtil.addErrorMessage("You Need To select Surgury to Search All");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12055)             return;
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12056)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12057) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12058)         String sql;
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12059)         Map temMap = new HashMap();
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12060)         sql = "select b from BilledBill b where "
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12061)                 + " b.billType = :billType and "
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12062)                 + " b.createdAt between :fromDate and :toDate "
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12063)                 + " and b.retired=false  ";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12064) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12065)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12066)             sql += " and  ((b.staff.person.name) like :staffName )";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12067)             temMap.put("staffName", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12068)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12069) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12070)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12071)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12072)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12073)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12074) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12075)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12076)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12077)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12078)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12079) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12080)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12081)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12082)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12083)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12084) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12085)         if (getSearchKeyword().getBillNo() != null
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12086)                 && !getSearchKeyword().getBillNo().trim().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12087)             sql += " and  ((b.insId) like :billNo )";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12088)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12089)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12090) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12091)         if (getSearchKeyword().getItemName() != null && !getSearchKeyword().getItemName().trim().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12092)             sql += " and  ((b.procedure.item.name) like :itm )";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12093)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12094)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12095) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12096)         if (getSearchKeyword().getItem() != null) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12097)             sql += " and b.procedure.item=:item ";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12098)             temMap.put("item", getSearchKeyword().getItem());
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12099)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12100) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12101)         if (getSearchKeyword().getTotal() != null && !getSearchKeyword().getTotal().trim().equals("")) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12102)             sql += " and  ((b.total) like :total )";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12103)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12104)         }
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12105) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12106)         sql += " order by b.createdAt desc  ";
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12107) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12108)         temMap.put("billType", BillType.SurgeryBill);
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12109)         temMap.put("toDate", toDate);
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12110)         temMap.put("fromDate", fromDate);
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12111) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12112)         if (searchKeyword.isActiveAdvanceOption()) {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12113)             bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12114)         } else {
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12115)             bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12116)         }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530 12117) 
b0b1d462611 (DamithDeshan         2023-12-07 14:00:19 +0530 12118)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12119) 
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530 12120)     public void createInwardSurgeryBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12121)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12122) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12123)         if (searchKeyword.isActiveAdvanceOption() && searchKeyword.getItem() == null && searchKeyword.getItemName().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12124)             JsfUtil.addErrorMessage("You Need To select Surgury to Search All");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12125)             return;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12126)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12127) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12128)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12129)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12130)         sql = "select b from BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12131)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12132)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12133)                 + " and b.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12134) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12135)         if (getSearchKeyword().getStaffName() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12136)                 && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12137)             sql += " and  ((b.staff.person.name) like :staffName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12138)             temMap.put("staffName", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12139)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12140) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12141)         if (getSearchKeyword().getPatientName() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12142)                 && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12143)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12144)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12145)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12146) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12147)         if (getSearchKeyword().getPatientPhone() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12148)                 && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12149)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12150)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12151)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12152) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12153)         if (getSearchKeyword().getBhtNo() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12154)                 && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12155)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12156)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12157)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12158) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12159)         if (getSearchKeyword().getBillNo() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12160)                 && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12161)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12162)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12163)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12164) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12165)         if (getSearchKeyword().getItemName() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12166)                 && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12167)             sql += " and  ((b.procedure.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12168)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12169)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12170) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12171)         if (getSearchKeyword().getItem() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12172)             sql += " and b.procedure.item=:item ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12173)             temMap.put("item", getSearchKeyword().getItem());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12174)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12175) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12176)         if (getSearchKeyword().getTotal() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12177)                 && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12178)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12179)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12180)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12181) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 12182)         sql += " order by b.deptId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12183) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12184)         temMap.put("billType", BillType.SurgeryBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12185)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12186)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12187) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12188)         if (searchKeyword.isActiveAdvanceOption()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12189)             bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12190)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12191)             bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12192)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12193) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12194)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12195) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12196)     public void createInwardSurgeryBillsReport() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12197) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12198)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12199)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12200)         sql = "select b from BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12201)                 + " b.billType = :billType and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12202)                 + " b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12203)                 + " and b.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12204) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12205)         if (getSearchKeyword().getStaffName() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12206)                 && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12207)             sql += " and  ((b.staff.person.name) like :staffName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12208)             temMap.put("staffName", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12209)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12210) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12211)         if (getSearchKeyword().getPatientName() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12212)                 && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12213)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12214)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12215)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12216) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12217)         if (getSearchKeyword().getPatientPhone() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12218)                 && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12219)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12220)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12221)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12222) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12223)         if (getSearchKeyword().getBhtNo() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12224)                 && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12225)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12226)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12227)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12228) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12229)         if (getSearchKeyword().getBillNo() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12230)                 && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12231)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12232)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12233)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12234) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12235)         if (getSearchKeyword().getItemName() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12236)                 && !getSearchKeyword().getItemName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12237)             sql += " and  ((b.procedure.item.name) like :itm )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12238)             temMap.put("itm", "%" + getSearchKeyword().getItemName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12239)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12240) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12241)         if (getSearchKeyword().getTotal() != null
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12242)                 && !getSearchKeyword().getTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12243)             sql += " and  ((b.total) like :total )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12244)             temMap.put("total", "%" + getSearchKeyword().getTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12245)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12246) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 12247)         sql += " order by b.deptId desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12248) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12249)         temMap.put("billType", BillType.SurgeryBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12250)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12251)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12252) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12253)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12254) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12255)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12256) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12257)     public void createInwardPaymentBillsDischarged() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12258) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12259)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12260)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12261) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12262)         sql = "select b from BilledBill b where  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12263)                 + " and b.patientEncounter.discharged=true"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12264)                 + " and b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12265)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12266)                 + " and b.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12267) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12268)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12269)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12270)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12271)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12272) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12273)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12274)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12275)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12276)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12277) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12278)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12279)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12280)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12281)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12282) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12283)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12284)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12285)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12286)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12287) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12288)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12289)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12290)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12291)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12292) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 12293)         sql += "order by b.deptId desc";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12294) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12295)         temMap.put("billType", BillType.InwardPaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12296)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12297)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12298) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12299)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12300) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12301)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12302) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12303)     public void createInwardProBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12304)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12305) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12306)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12307)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12308)         sql = "select b from BilledBill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12309)                 + " b.billType = :billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12310)                 + " and b.createdAt between :fromDate and :toDate"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12311)                 + " and b.retired=false";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12312) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12313)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12314)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12315)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12316)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12317) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12318)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12319)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12320)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12321)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12322) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12323)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12324)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12325)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12326)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12327) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12328)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12329)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12330)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12331)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12332) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12333)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12334)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12335)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12336)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12337) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12338)         sql += " order by b.insId desc";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12339) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12340)         temMap.put("billType", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12341)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12342)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12343) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12344)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12345) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12346)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12347) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12348)     public void createInwardProBillsDischarged() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12349) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12350)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12351)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12352) //        sql = "select b from BilledBill b where b.createdAt is not null and b.billType = :billType and b.patientEncounter.discharged=true and "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12353) //                + " b.id in(Select bf.bill.id From BillFee bf where bf.retired=false and bf.createdAt between :fromDate and :toDate and bf.billItem is null)"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12354) //                + " and b.createdAt between :fromDate and :toDate and b.retired=false";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12355) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12356)         sql = "select b from BilledBill b where b.createdAt is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12357)                 + " and b.patientEncounter.discharged=true and"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12358)                 + " b.billType = :billType and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12359)                 + "and b.retired=false  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12360) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12361)         if (getSearchKeyword().getPatientName() != null && !getSearchKeyword().getPatientName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12362)             sql += " and  ((b.patientEncounter.patient.person.name) like :patientName )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12363)             temMap.put("patientName", "%" + getSearchKeyword().getPatientName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12364)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12365) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12366)         if (getSearchKeyword().getPatientPhone() != null && !getSearchKeyword().getPatientPhone().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12367)             sql += " and  ((b.patientEncounter.patient.person.phone) like :patientPhone )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12368)             temMap.put("patientPhone", "%" + getSearchKeyword().getPatientPhone().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12369)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12370) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12371)         if (getSearchKeyword().getBhtNo() != null && !getSearchKeyword().getBhtNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12372)             sql += " and  ((b.patientEncounter.bhtNo) like :bht )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12373)             temMap.put("bht", "%" + getSearchKeyword().getBhtNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12374)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12375) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12376)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12377)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12378)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12379)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12380) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12381)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12382)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12383)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12384)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12385) 
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 12386)         sql += "order by b.deptId desc";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12387) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12388)         temMap.put("billType", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12389)         temMap.put("toDate", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12390)         temMap.put("fromDate", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12391) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12392)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12393) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12394)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12395) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12396)     public void createPettyTable() {
6dcbe361bb5 (Thiwanka Madushan    2024-05-04 17:57:31 +0530 12397)         List<BillType> billTypes = new ArrayList<>();
6dcbe361bb5 (Thiwanka Madushan    2024-05-04 17:57:31 +0530 12398)         billTypes.add(BillType.PettyCash);
6dcbe361bb5 (Thiwanka Madushan    2024-05-04 17:57:31 +0530 12399)         billTypes.add(BillType.IouIssue);
7d3eb739b80 (Thiwanka Madushan    2024-05-07 17:04:21 +0530 12400) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12401)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12402) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12403)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12404)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12405)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12406) 
6dcbe361bb5 (Thiwanka Madushan    2024-05-04 17:57:31 +0530 12407)         sql = "select b from BilledBill b where b.billType IN :billTypes and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12408)                 + " and b.createdAt between :fromDate and :toDate and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12409) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12410)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
ad843f42eef (Buddhika             2024-09-06 02:15:14 +0530 12411)             sql += " and  ((b.deptId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12412)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12413)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12414) 
63158a78a18 (DamithDeshan         2024-11-24 10:59:23 +0530 12415)         if (getStaff() != null) {
63158a78a18 (DamithDeshan         2024-11-24 10:59:23 +0530 12416)             sql += " and  ((b.staff) =:stf )";
63158a78a18 (DamithDeshan         2024-11-24 10:59:23 +0530 12417)             temMap.put("stf", getStaff());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12418)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12419) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12420)         if (getSearchKeyword().getPersonName() != null && !getSearchKeyword().getPersonName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12421)             sql += " and  ((b.person.name) like :per )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12422)             temMap.put("per", "%" + getSearchKeyword().getPersonName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12423)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12424) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12425)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12426)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12427)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12428)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12429) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12430)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12431)             sql += " and  ((b.invoiceNumber) like :num )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12432)             temMap.put("num", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12433)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12434) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12435)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12436) //    
6dcbe361bb5 (Thiwanka Madushan    2024-05-04 17:57:31 +0530 12437) 
6dcbe361bb5 (Thiwanka Madushan    2024-05-04 17:57:31 +0530 12438)         temMap.put("billTypes", billTypes);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12439)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12440)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12441)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12442) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12443)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12444)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12445) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12446)     }
20f85a55700 (DamithDeshan         2024-08-23 06:27:13 +0530 12447) 
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12448)     public void createPettyApproveTable() {
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12449)         List<BillType> billTypes = new ArrayList<>();
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12450)         billTypes.add(BillType.PettyCashCancelApprove);
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12451) 
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12452)         bills = null;
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12453)         String sql;
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12454)         Map temMap = new HashMap();
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12455)         System.out.println("getFromDate() = " + getFromDate());
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12456)         System.out.println("getToDate() = " + getToDate());
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12457)         sql = "select b from Bill b where b.billType IN :billTypes and b.createdAt between :fromDate and :toDate and b.retired=false";
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12458)         System.out.println("sql = " + sql);
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12459)         temMap.put("toDate", getToDate());
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12460)         temMap.put("fromDate", getFromDate());
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12461)         temMap.put("billTypes", billTypes);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 12462)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12463) 
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12464)     }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 12465) 
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12466)     public void createPettyCashToApproveTable() {
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12467)         List<BillTypeAtomic> billTypes = new ArrayList<>();
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12468)         billTypes.add(BillTypeAtomic.PETTY_CASH_ISSUE);
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12469) 
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12470)         bills = null;
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12471)         String sql;
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12472)         Map temMap = new HashMap();
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12473)         System.out.println("getFromDate() = " + getFromDate());
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12474)         System.out.println("getToDate() = " + getToDate());
25a397512c8 (Lawan Samarasekara   2024-10-20 23:20:38 +0530 12475)         sql = "select b from Bill b where b.billTypeAtomic IN :billTypes and b.createdAt between :fromDate and :toDate and b.retired=false order by b.id desc";
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12476)         System.out.println("sql = " + sql);
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12477)         temMap.put("toDate", getToDate());
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12478)         temMap.put("fromDate", getFromDate());
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12479)         temMap.put("billTypes", billTypes);
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12480)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12481) 
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12482)     }
a92299881cf (Buddhika Ariyaratne  2024-11-08 00:22:14 +0530 12483) 
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12484)     public void createCreditCompanyPaymentToApproveTable() {
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12485)         List<BillTypeAtomic> billTypes = new ArrayList<>();
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12486)         billTypes.add(BillTypeAtomic.OPD_CREDIT_COMPANY_PAYMENT_RECEIVED);
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12487) 
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12488)         bills = null;
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12489)         String sql;
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12490)         Map temMap = new HashMap();
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12491)         System.out.println("getFromDate() = " + getFromDate());
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12492)         System.out.println("getToDate() = " + getToDate());
cf0463057e2 (Lawan Samarasekara   2024-11-07 04:30:07 +0530 12493)         sql = "select b from Bill b where b.billTypeAtomic IN :billTypes and b.createdAt between :fromDate and :toDate and b.retired=false order by b.id desc";
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12494)         System.out.println("sql = " + sql);
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12495)         temMap.put("toDate", getToDate());
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12496)         temMap.put("fromDate", getFromDate());
e2c99483fa1 (Lawan Samarasekara   2024-10-09 02:40:46 +0530 12497)         temMap.put("billTypes", billTypes);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 12498)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12499) 
ce6ebc6f640 (thiwanka570          2024-08-08 08:56:07 +0530 12500)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12501) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12502)     public void createIncomeBillTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12503)         fetchBillTable(BillType.ChannelIncomeBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12504)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12505) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12506)     public void createExpensesBillTable() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12507)         fetchBillTable(BillType.ChannelExpenesBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12508)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12509) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12510)     public void fetchBillTable(BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12511)         Date startTime = new Date();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12512) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12513)         bills = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12514)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12515)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12516) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12517)         sql = "select b from BilledBill b where b.billType =:billType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12518)                 + " and b.institution=:ins "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12519)                 + " and b.createdAt between :fromDate and :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12520)                 + " and b.retired=false ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12521) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12522)         if (getSearchKeyword().getBillNo() != null && !getSearchKeyword().getBillNo().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12523)             sql += " and  ((b.insId) like :billNo )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12524)             temMap.put("billNo", "%" + getSearchKeyword().getBillNo().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12525)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12526) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12527)         if (getSearchKeyword().getStaffName() != null && !getSearchKeyword().getStaffName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12528)             sql += " and  ((b.staff.person.name) like :stf )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12529)             temMap.put("stf", "%" + getSearchKeyword().getStaffName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12530)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12531) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12532)         if (getSearchKeyword().getPersonName() != null && !getSearchKeyword().getPersonName().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12533)             sql += " and  ((b.person.name) like :per )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12534)             temMap.put("per", "%" + getSearchKeyword().getPersonName().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12535)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12536) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12537)         if (getSearchKeyword().getNetTotal() != null && !getSearchKeyword().getNetTotal().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12538)             sql += " and  ((b.netTotal) like :netTotal )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12539)             temMap.put("netTotal", "%" + getSearchKeyword().getNetTotal().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12540)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12541) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12542)         if (getSearchKeyword().getNumber() != null && !getSearchKeyword().getNumber().trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12543)             sql += " and  ((b.invoiceNumber) like :num )";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12544)             temMap.put("num", "%" + getSearchKeyword().getNumber().trim().toUpperCase() + "%");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12545)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12546) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12547)         sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12548) //    
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12549)         temMap.put("billType", billType);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12550)         temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12551)         temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12552)         temMap.put("ins", getSessionController().getInstitution());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12553) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12554)         //System.err.println("Sql " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12555)         bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 50);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12556) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12557)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12558) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12559)     public void createAllBillContacts() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12560)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12561)         Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12562)         telephoneNumbers = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12563) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12564)         if (getReportKeyWord().getString1().equals("0")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12565)             sql = "select b.patient.person.phone from Bill b where ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12566)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12567)             sql = "select b from Bill b where ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12568)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12569) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12570)         sql += " b.retired = false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12571)                 + " and b.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12572)                 + " and b.refunded=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12573)                 + " and (b.patient.person.phone is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12574)                 + " or b.patient.person.phone!=:em) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12575)                 + " and b.createdAt between :fd and :td  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12576) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12577)         if (getReportKeyWord().getString().equals("0")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12578)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12579)         if (getReportKeyWord().getString().equals("1")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12580)             BillType[] billTypes = {BillType.ChannelCash, BillType.ChannelPaid};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12581)             sql += " and b.billType in :bts ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12582)             temMap.put("bts", Arrays.asList(billTypes));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12583)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12584)         if (getReportKeyWord().getString().equals("2")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12585)             BillType[] billTypes = {BillType.OpdBill};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12586)             sql += " and b.billType in :bts ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12587)             temMap.put("bts", Arrays.asList(billTypes));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12588)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12589)         if (getReportKeyWord().getString().equals("3")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12590)             BillType[] billTypes = {BillType.PharmacySale};
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12591)             sql += " and b.billType in :bts ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12592)             temMap.put("bts", Arrays.asList(billTypes));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12593)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12594)         if (getReportKeyWord().getArea() != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12595)             sql += " and b.patient.person.area=:a ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12596)             temMap.put("a", getReportKeyWord().getArea());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12597)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12598) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12599)         if (getReportKeyWord().getString1().equals("0")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12600)             sql += " group by b.patient.person.phone ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12601)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12602)         sql += " order by b.patient.person.phone ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12603) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12604)         temMap.put("em", "");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12605)         temMap.put("fd", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12606)         temMap.put("td", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12607) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12608)         if (getReportKeyWord().getString1().equals("0")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12609)             List<Object> objs = getBillFacade().findObjectByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12610) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12611)             for (Object o : objs) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12612)                 String s = (String) o;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12613)                 if (s != null && !"".equals(s)) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12614)                     String ss = s.substring(0, 3);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12615) //                //System.out.println("ss = " + ss);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12616)                     if (ss.equals("077") || ss.equals("076")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12617)                             || ss.equals("071") || ss.equals("072")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12618)                             || ss.equals("075") || ss.equals("078")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12619)                         telephoneNumbers.add(s);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12620)                     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12621) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12622)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12623)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12624)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12625)             bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12626)             for (Bill b : bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12627)                 if (b.getPatient().getPerson().getPhone() != null && !"".equals(b.getPatient().getPerson().getPhone())) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12628)                     String ss = b.getPatient().getPerson().getPhone().substring(0, 3);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12629)                     if (getReportKeyWord().getString1().equals("1")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12630)                         if (b.getPatient().getAgeYears() <= getReportKeyWord().getFrom()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12631)                             if (ss.equals("077") || ss.equals("076")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12632)                                     || ss.equals("071") || ss.equals("072")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12633)                                     || ss.equals("075") || ss.equals("078")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12634)                                 telephoneNumbers.add(b.getPatient().getPerson().getPhone());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12635)                             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12636)                         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12637)                     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12638)                     if (getReportKeyWord().getString1().equals("2")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12639)                         if (b.getPatient().getAgeYears() >= getReportKeyWord().getTo()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12640)                             if (b.getPatient().getAgeYears() <= getReportKeyWord().getFrom()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12641)                                 if (ss.equals("077") || ss.equals("076")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12642)                                         || ss.equals("071") || ss.equals("072")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12643)                                         || ss.equals("075") || ss.equals("078")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12644)                                     telephoneNumbers.add(b.getPatient().getPerson().getPhone());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12645)                                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12646)                             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12647)                         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12648)                     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12649)                     if (getReportKeyWord().getString1().equals("3")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12650)                         if (b.getPatient().getAgeYears() >= getReportKeyWord().getFrom()
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12651)                                 && b.getPatient().getAgeYears() <= getReportKeyWord().getTo()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12652)                             if (b.getPatient().getAgeYears() <= getReportKeyWord().getFrom()) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12653)                                 if (ss.equals("077") || ss.equals("076")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12654)                                         || ss.equals("071") || ss.equals("072")
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12655)                                         || ss.equals("075") || ss.equals("078")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12656)                                     telephoneNumbers.add(b.getPatient().getPerson().getPhone());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12657)                                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12658)                             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12659)                         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12660)                     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12661)                 }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12662)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12663)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12664) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12665)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12666) 
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530 12667)     //    public void sendSms() {
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12668) //        smsController.sendSmsToNumberList(uniqueSmsText, getSessionController().getApplicationPreference().getApplicationInstitution(), smsText, null, MessageType.Marketing);
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12669) //    }
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12670) //    public void sendSmsAll() {
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12671) //        if (selectedTelephoneNumbers == null) {
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12672) //            JsfUtil.addErrorMessage("Please Select Numbers");
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12673) //            return;
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12674) //        }
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12675) //        if (selectedTelephoneNumbers.size() > 10000) {
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12676) //            JsfUtil.addErrorMessage("Please Contact System Development Team.You are trying to send more than 10,000 sms.");
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12677) //            return;
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12678) //        }
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12679) //        if (smsText.equals("") || smsText == null) {
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12680) //            JsfUtil.addErrorMessage("Enter Message");
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12681) //            return;
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12682) //        }
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12683) //        for (String stn : selectedTelephoneNumbers) {
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12684) //
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12685) //            smsController.sendSmsToNumberList(stn, getSessionController().getApplicationPreference().getApplicationInstitution(), smsText, null, MessageType.Marketing);
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12686) //            JsfUtil.addSuccessMessage("Done.");
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12687) //        }
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12688) //
e5bdd22f4cd (Dr M H B Ariyaratne  2024-05-23 09:49:07 +0530 12689) //    }
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12690)     public String navigateToCancelPurchaseOrder() {
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12691)         makeNull();
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12692)         Calendar c1 = Calendar.getInstance();
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12693)         c1.set(Calendar.MONTH, c1.get(Calendar.MONTH) - 2);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12694)         fromDate = c1.getTime();
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12695)         Calendar c2 = Calendar.getInstance();
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12696)         c2.set(Calendar.MONTH, c2.get(Calendar.MONTH) - 1);
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12697)         toDate = c2.getTime();
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12698)         return "/pharmacy/pharmacy_purhcase_order_list_to_cancel?faces-redirect=true";
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 12699)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12700) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12701)     public void createDocPaymentDue() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12702)         if (getReportKeyWord().getString().equals("0")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12703)             fetchDueFeeTable(new BillType[]{BillType.OpdBill, BillType.CollectingCentreBill}, false);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12704)         } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12705)             fetchDueFeeTable(new BillType[]{BillType.InwardBill, BillType.InwardProfessional}, true);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12706)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12707)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12708) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12709)     private void fetchDueFeeTable(BillType[] billTypes, boolean isInward) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12710)         String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12711)         Map m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12712) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12713)         sql = "select b from BillFee b where"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12714)                 + " b.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12715)                 + " and b.bill.billType in :bts "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12716)                 + " and b.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12717)                 + " and (b.feeValue - b.paidValue) > 0 "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12718)                 + " and b.bill.createdAt between :fromDate and :toDate ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12719) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12720)         sql += " order by b.staff.person.name ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12721) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12722)         Calendar cal = Calendar.getInstance();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12723)         cal.setTime(new Date());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12724)         //System.out.println("1.cal.getTime() = " + cal.getTime());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12725)         cal.set(2013, 00, 01, 00, 00, 00);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12726)         //System.out.println("2.cal.getTime() = " + cal.getTime());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12727)         m.put("fromDate", cal.getTime());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12728)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12729)         m.put("bts", Arrays.asList(billTypes));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12730) //        temMap.put("btp", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12731) //        temMap.put("btpc", BillType.CollectingCentreBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12732) //        temMap.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12733) //        temMap.put("btp2", BillType.InwardProfessional);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12734) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12735)         billFees = getBillFeeFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12736)         //System.out.println("billFees.size() = " + billFees.size());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12737) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12738)         List<BillFee> afterPaid = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12739) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12740)         sql = "Select bi.paidForBillFee FROM BillItem bi "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12741)                 + " where bi.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12742)                 + " and bi.bill.billType=:bType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12743)                 + " and bi.referenceBill.billType in :refType "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12744)                 + " and bi.bill.createdAt > :toDate "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12745)                 + " and bi.paidForBillFee.bill.createdAt <= :toDate";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12746) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12747) //        sql += " order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12748)         m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12749)         m.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12750)         m.put("bType", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12751)         m.put("refType", Arrays.asList(billTypes));
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12752) //        temMap.put("refType", BillType.OpdBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12753) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12754)         afterPaid = getBillFeeFacade().findByJpql(sql, m, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12755)         billFees.addAll(afterPaid);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12756)         List<BillFee> removeingBillFees = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12757) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12758)         for (BillFee bf : billFees) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12759)             sql = "SELECT bi FROM BillItem bi where bi.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12760)                     + " and bi.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12761)                     + " and bi.referanceBillItem.id=" + bf.getBillItem().getId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12762) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12763)             BillItem rbi = null;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12764)             if (isInward) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12765)                 m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12766)                 m.put("btp", BillType.InwardBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12767)                 sql = "SELECT bi FROM BillItem bi where bi.retired=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12768)                         + " and bi.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12769)                         + " and bi.bill.billType=:btp "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12770)                         + " and bi.referanceBillItem.id=" + bf.getBillItem().getId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12771)             } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12772)                 m = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12773) //                m.put("class", RefundBill.class);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12774)                 sql = "SELECT bi FROM BillItem bi where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12775)                         + " bi.retired=false"
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12776)                         + " and bi.bill.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12777)                         //                        + " and type(bi.bill)=:class "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12778)                         + " and bi.referanceBillItem.id=" + bf.getBillItem().getId();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12779)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12780)             rbi = getBillItemFacade().findFirstByJpql(sql, m);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12781) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12782)             if (rbi != null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12783)                 removeingBillFees.add(bf);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12784)             }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12785)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12786)         billFees.removeAll(removeingBillFees);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12787)         total = 0.0;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12788)         for (BillFee bf : billFees) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12789)             total += bf.getFeeValue();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12790)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12791)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12792) 
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530 12793)     //    public void createAllBillContacts() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12794) //        Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12795) //        bills=new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12796) //
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12797) //        String sql = "select  b from Bill b where "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12798) //                + " b.retired = false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12799) //                + " and b.cancelled=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12800) //                + " and b.refunded=false "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12801) //                + " and (b.patient.person.phone is not null "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12802) //                + " or b.patient.person.phone=:em) "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12803) //                + " and b.createdAt between :fd and :td  "
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12804) //                + " group by b.patient.person.phone  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12805) //        
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12806) //        temMap.put("fd", fromDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12807) //        temMap.put("td", toDate);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12808) //        temMap.put("em", "");
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12809) //        
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12810) //        bills=getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12811) //        //System.out.println("sql = " + sql);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12812) //        //System.out.println("temMap = " + temMap);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12813) //        //System.out.println("bills.size() = " + bills.size());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12814) //
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12815) //    }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12816) //     public List<Bill> getInstitutionPaymentBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12817) //        if (bills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12818) //            String sql;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12819) //            Map temMap = new HashMap();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12820) //            if (bills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12821) //                if (txtSearch == null || txtSearch.trim().equals("")) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12822) //                    sql = "SELECT b FROM BilledBill b WHERE b.retired=false and b.billType=:type and b.createdAt between :fromDate and :toDate order by b.id";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12823) //                    temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12824) //                    temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12825) //                    temMap.put("type", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12826) //                    bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 100);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12827) //
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12828) //                } else {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12829) //                    sql = "select b from BilledBill b where b.retired=false and b.billType=:type and b.createdAt between :fromDate and :toDate and ((b.staff.person.name) like '%" + txtSearch.toUpperCase() + "%'  or (b.staff.person.phone) like '%" + txtSearch.toUpperCase() + "%'  or (b.insId) like '%" + txtSearch.toUpperCase() + "%') order by b.createdAt desc  ";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12830) //                    temMap.put("toDate", getToDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12831) //                    temMap.put("fromDate", getFromDate());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12832) //                    temMap.put("type", BillType.PaymentBill);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12833) //                    bills = getBillFacade().findByJpql(sql, temMap, TemporalType.TIMESTAMP, 100);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12834) //                }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12835) //                if (bills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12836) //                    bills = new ArrayList<Bill>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12837) //                }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12838) //            }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12839) //        }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12840) //        return bills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12841) //
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12842) //    }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12843)     public void listnerBillTypeChange() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12844)         reportKeyWord.setArea(null);
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12845)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12846) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12847)     public String navigateToLabReportSearch() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12848)         patientInvestigations = new ArrayList<>();
008849d21db (Dr. M H B Ariyaratne 2024-08-03 22:43:11 +0530 12849)         return "/lab/search_for_reporting_ondemand?faces-redirect=true";
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 12850)     }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12851) 
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 12852)     public String navigateToListSingleUserBills() {
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 12853)         processAllFinancialTransactionalBillListBySingleUserByIds();
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 12854)         return "/cashier/shift_end_summary_bill_list";
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 12855)     }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530 12856) 
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530 12857)     public String navigateToListCashBookEntry() {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530 12858)         cashBookEntries = new ArrayList<>();
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530 12859)         return "/cashier/cash_book_entry";
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530 12860)     }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 12861) 
4a5f7dcc678 (Buddhika Ariyaratne  2024-10-09 12:32:54 +0530 12862)     public String navigateToListCashBookEntrySiteSummary() {
4a5f7dcc678 (Buddhika Ariyaratne  2024-10-09 12:32:54 +0530 12863)         cashBookEntries = new ArrayList<>();
4a5f7dcc678 (Buddhika Ariyaratne  2024-10-09 12:32:54 +0530 12864)         return "/cashier/cash_book_summery_site";
4a5f7dcc678 (Buddhika Ariyaratne  2024-10-09 12:32:54 +0530 12865)     }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12866) 
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12867)     public String navigateToPatientReportSearch() {
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12868)         patientInvestigations = new ArrayList<>();
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12869)         return "/lab/patient_reports_search?faces-redirect=true";
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12870)     }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12871) 
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12872)     public String navigateToLabAnalytics() {
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12873)         patientInvestigations = new ArrayList<>();
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12874)         return "/reportLab/lab_summeries_index?faces-redirect=true";
566454fa4ee (DamithDeshan         2024-11-13 20:56:02 +0530 12875)     }
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530 12876) 
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530 12877)     public void genarateCashBookEntries() {
8234213c82b (Buddhika Ariyaratne  2024-08-25 14:52:59 +0530 12878)         cashBookEntries = cashBookEntryController.genarateCashBookEntries(fromDate, toDate, site, institution, department);
0646df1f2ac (thiwanka570          2024-08-23 16:00:23 +0530 12879)     }
17c672efe54 (Dr M H B Ariyaratne  2024-05-02 20:37:59 +0530 12880) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 12881)     public void generateOpdServicesByBillItem() {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 12882)         bundleBillItems = generateOpdServiceByBillItems();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 12883)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 12884) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 12885)     public void createItemizedSalesSummary() {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 12886)         bundle = generateItemizedSalesSummary();
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 12887)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 12888) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12889)     public void createItemizedSalesReport() {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12890)         bundle = generateItemizedSalesReport();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12891)         if (withProfessionalFee) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12892)             bundle.setName("Itemized Sales Report - With Professional Fee");
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12893)             bundle.setBundleType("itemized_sales_report_with_professional_fee");
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12894)         } else {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12895)             bundle.setName("Itemized Sales Report - Without Professional Fee");
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12896)             bundle.setBundleType("itemized_sales_report_without_professional_fee");
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12897)         }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 12898) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 12899)     }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 12900) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 12901)     public void createIncomeBreakdownByCategory() {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 12902)         bundle = generateIncomeBreakdownByCategory();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12903)         if (withProfessionalFee) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 12904)             bundle.setName("Income Breakdown By Category - With Professional Fee");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 12905)             bundle.setBundleType("income_breakdown_by_category_with_professional_fee");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12906)         } else {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 12907)             bundle.setName("Income Breakdown By Category - Without Professional Fee");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 12908)             bundle.setBundleType("income_breakdown_by_category_with_out_professional_fee");
50f9b4cbd82 (DamithDeshan         2024-11-13 14:38:16 +0530 12909)         }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 12910) 
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530 12911)     }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12912) 
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530 12913)     public void generateStaffWelfareBillReport() {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12914)         System.out.println("generateStaffWelfareBillReport = " + this);
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530 12915)         bundle = new ReportTemplateRowBundle();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12916) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12917)         if (reportType == null || reportType.trim().equals("")) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12918)             JsfUtil.addErrorMessage("Please select a report type");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12919)             return;
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12920)         }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12921)         System.out.println("reportType = " + reportType);
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530 12922)         List<PaymentMethod> staffPaymentMethods = new ArrayList<>();
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530 12923)         staffPaymentMethods.add(PaymentMethod.Staff_Welfare);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12924) 
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530 12925)         List<BillTypeAtomic> opdBts = new ArrayList<>();
2876340c6c5 (Buddhika Ariyaratne  2024-11-14 11:45:00 +0530 12926) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12927)         if (reportType.trim().equalsIgnoreCase("bills")) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12928)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_WITH_PAYMENT);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12929)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_PAYMENT_COLLECTION_AT_CASHIER);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12930)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_WITH_PAYMENT);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12931)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_PAYMENT_COLLECTION_AT_CASHIER);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12932)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_WITH_PAYMENT);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12933)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12934)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12935)             opdBts.add(BillTypeAtomic.OPD_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12936)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12937)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12938)             System.out.println("bills");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12939)             bundle.setName("Staff Welfare Bills");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12940)             bundle.setBundleType("billList");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12941)             bundle = generatePaymentMethodColumnsByBills(opdBts, staffPaymentMethods);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12942)             bundle.calculateTotalByBills();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12943) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12944)         } else if (reportType.trim().equalsIgnoreCase("billItems")) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12945)             opdBts.add(BillTypeAtomic.OPD_BILL_WITH_PAYMENT);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12946)             opdBts.add(BillTypeAtomic.OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12947)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_WITH_PAYMENT);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12948)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_PAYMENT_COLLECTION_AT_CASHIER);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12949)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_WITH_PAYMENT);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12950)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12951)             opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12952)             opdBts.add(BillTypeAtomic.OPD_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12953)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12954)             opdBts.add(BillTypeAtomic.PACKAGE_OPD_BILL_CANCELLATION);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12955) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12956)             System.out.println("bill items");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12957) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12958)             bundle.setName("Staff Welfare Bill Items");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12959)             bundle.setBundleType("billItemList");
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12960)             bundle = generateBillItems(opdBts, staffPaymentMethods);
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530 12961)             bundle.calculateTotalByBillItems();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 12962)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 12963)     }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 12964) 
fd1076551eb (Buddhika Ariyaratne  2024-08-29 23:05:48 +0530 12965)     public void generateDailyReturn() {
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12966) 
fd1076551eb (Buddhika Ariyaratne  2024-08-29 23:05:48 +0530 12967)         bundle = new ReportTemplateRowBundle();
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12968)         bundle.setName("Daily Return");
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12969)         bundle.setBundleType("dailyReturn");
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12970) 
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12971)         String institutionName = institution != null ? institution.getName() : "All Institutions";
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12972)         String siteName = site != null ? site.getName() : "All Sites";
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12973)         String departmentName = department != null ? department.getName() : "All Departments";
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12974) 
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12975)         String dateTimeFormat = sessionController.getApplicationPreference().getLongDateTimeFormat();
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12976) 
7f9376fe335 (Buddhika Ariyaratne  2024-10-13 06:13:17 +0530 12977)         String formattedFromDate = fromDate != null ? new SimpleDateFormat(dateTimeFormat).format(fromDate) : "Not availbale";
7f9376fe335 (Buddhika Ariyaratne  2024-10-13 06:13:17 +0530 12978)         String formattedToDate = toDate != null ? new SimpleDateFormat(dateTimeFormat).format(toDate) : "Not availbale";
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12979) 
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12980)         String description = String.format("Report for %s to %s covering %s, %s, %s",
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12981)                 formattedFromDate, formattedToDate,
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12982)                 institutionName, siteName, departmentName);
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12983) 
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 12984)         bundle.setDescription(description);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 12985) 
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 12986)         double collectionForTheDay = 0.0;
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 12987)         double netCashCollection = 0.0;
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 12988)         double netCollectionPlusCredits = 0.0;
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 12989) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 12990)         ReportTemplateRowBundle opdServiceCollection;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 12991)         if (isWithProfessionalFee()) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 12992)             opdServiceCollection = generateOpdServiceCollection(PaymentType.NON_CREDIT);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 12993)         } else {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 12994)             opdServiceCollection = generateOpdServiceCollectionWithoutProfessionalFee(PaymentType.NON_CREDIT);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 12995)         }
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 12996)         bundle.getBundles().add(opdServiceCollection);
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 12997)         collectionForTheDay += getSafeTotal(opdServiceCollection);
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530 12998) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 12999)         // Generate pharmacy collection and add to the main bundle
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 13000)         ReportTemplateRowBundle pharmacyCollection = generatePharmacyCollection();
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 13001)         bundle.getBundles().add(pharmacyCollection);
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 13002)         collectionForTheDay += getSafeTotal(pharmacyCollection);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 13003) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13004)         // Generate collecting centre collection and add to the main bundle
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 13005)         ReportTemplateRowBundle ccCollection = generateCcCollection();
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 13006)         bundle.getBundles().add(ccCollection);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13007)         collectionForTheDay += getSafeTotal(ccCollection);
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13008) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13009)         // Generate OPD Credit Company Payment Collection and add to the main bundle
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13010)         ReportTemplateRowBundle opdCreditCompanyCollection = generateCreditCompanyCollectionForOpd();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13011)         bundle.getBundles().add(opdCreditCompanyCollection);
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 13012)         collectionForTheDay += getSafeTotal(opdCreditCompanyCollection);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13013) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13014)         // Generate Inward Credit Company Payment Collection and add to the main bundle
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13015)         ReportTemplateRowBundle inwardCreditCompanyCollection = generateCreditCompanyCollectionForInward();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13016)         bundle.getBundles().add(inwardCreditCompanyCollection);
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 13017)         collectionForTheDay += getSafeTotal(inwardCreditCompanyCollection);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13018) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13019)         // Generate Pharmacy Credit Company Payment Collection and add to the main bundle
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13020)         ReportTemplateRowBundle pharmacyCreditCompanyCollection = generateCreditCompanyCollectionForPharmacy();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13021)         bundle.getBundles().add(pharmacyCreditCompanyCollection);
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 13022)         collectionForTheDay += getSafeTotal(pharmacyCreditCompanyCollection);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13023) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13024)         // Generate Channelling Credit Company Payment Collection and add to the main bundle
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13025)         ReportTemplateRowBundle channellingCreditCompanyCollection = generateCreditCompanyCollectionForChannelling();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 13026)         bundle.getBundles().add(channellingCreditCompanyCollection);
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 13027)         collectionForTheDay += getSafeTotal(channellingCreditCompanyCollection);
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 13028) 
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 13029)         ReportTemplateRowBundle patientDepositPayments = generatePatientDepositCollection();
f8f41e4aa5d (Buddhika Ariyaratne  2024-09-09 05:39:16 +0530 13030)         bundle.getBundles().add(patientDepositPayments);
f36ac47a3f1 (Buddhika Ariyaratne  2024-09-11 02:38:15 +0530 13031)         collectionForTheDay += getSafeTotal(patientDepositPayments);
f8f41e4aa5d (Buddhika Ariyaratne  2024-09-09 05:39:16 +0530 13032) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13033)         // Final collection for the day
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13034)         ReportTemplateRowBundle collectionForTheDayBundle = new ReportTemplateRowBundle();
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13035)         collectionForTheDayBundle.setName("Collection for the day");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13036)         collectionForTheDayBundle.setBundleType("collectionForTheDay");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13037)         collectionForTheDayBundle.setTotal(collectionForTheDay);
f36ac47a3f1 (Buddhika Ariyaratne  2024-09-11 02:38:15 +0530 13038)         bundle.getBundles().add(collectionForTheDayBundle);
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530 13039) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13040)         netCashCollection = collectionForTheDay;
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13041) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13042)         // Deduct various payments from net cash collection
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13043)         ReportTemplateRowBundle pettyCashPayments = generatePettyCashPayments();
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13044)         bundle.getBundles().add(pettyCashPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13045)         netCashCollection -= Math.abs(getSafeTotal(pettyCashPayments));
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13046) 
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13047)         ReportTemplateRowBundle creditBills;
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13048)         if (isWithProfessionalFee()) {
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13049)             creditBills = generateCreditBills();
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13050)         } else {
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13051)             creditBills = generateCreditBills();
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13052)         }
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13053)         bundle.getBundles().add(creditBills);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13054) //        netCashCollection -= Math.abs(getSafeTotal(creditBills)); // NOT Deducted from Totals
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13055) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 13056)         if (isWithProfessionalFee()) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 13057)             // Generate OPD professional payments and add to the main bundle
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 13058)             ReportTemplateRowBundle opdProfessionalPayments = generateOpdProfessionalPayments();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 13059)             bundle.getBundles().add(opdProfessionalPayments);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 13060)             netCashCollection -= Math.abs(getSafeTotal(opdProfessionalPayments));
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 13061)         }
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 13062) 
6d91935c3ae (Lawan Samarasekara   2024-09-11 19:20:23 +0530 13063)         // Generate channelling professional payments and add to the main bundle
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530 13064)         ReportTemplateRowBundle channellingProfessionalPayments = generateChannellingProfessionalPayments();
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530 13065)         bundle.getBundles().add(channellingProfessionalPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13066)         netCashCollection -= Math.abs(getSafeTotal(channellingProfessionalPayments));
81edcb6abd9 (Buddhika Ariyaratne  2024-09-11 03:10:47 +0530 13067) 
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 13068)         // Generate inward professional payments and add to the main bundle
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 13069)         ReportTemplateRowBundle inwardProfessionalPayments = generateInwardProfessionalPayments();
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 13070)         bundle.getBundles().add(inwardProfessionalPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13071)         netCashCollection -= Math.abs(getSafeTotal(inwardProfessionalPayments));
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13072) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 13073)         ReportTemplateRowBundle cardPayments = generateCreditCardPayments();
8cafbf261cc (Buddhika Ariyaratne  2024-10-07 08:10:32 +0530 13074)         cardPayments.calculateTotalByPayments();
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 13075)         bundle.getBundles().add(cardPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13076)         netCashCollection -= Math.abs(getSafeTotal(cardPayments));
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 13077) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13078)         ReportTemplateRowBundle staffPayments = generateStaffPayments();
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13079)         bundle.getBundles().add(staffPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13080)         netCashCollection -= Math.abs(getSafeTotal(staffPayments));
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13081) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13082)         ReportTemplateRowBundle voucherPayments = generateVoucherPayments();
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13083)         bundle.getBundles().add(voucherPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13084)         netCashCollection -= Math.abs(getSafeTotal(voucherPayments));
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13085) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13086)         ReportTemplateRowBundle chequePayments = generateChequePayments();
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13087)         bundle.getBundles().add(chequePayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13088)         netCashCollection -= Math.abs(getSafeTotal(chequePayments));
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13089) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13090)         ReportTemplateRowBundle ewalletPayments = generateEwalletPayments();
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13091)         bundle.getBundles().add(ewalletPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13092)         netCashCollection -= Math.abs(getSafeTotal(ewalletPayments));
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13093) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13094)         ReportTemplateRowBundle slipPayments = generateSlipPayments();
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 13095)         bundle.getBundles().add(slipPayments);
6626600a599 (Dr M H B Ariyaratne  2024-10-08 11:50:11 +0530 13096)         netCashCollection -= Math.abs(getSafeTotal(slipPayments));
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13097) 
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13098)         // Final net cash for the day
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13099)         ReportTemplateRowBundle netCashForTheDayBundle = new ReportTemplateRowBundle();
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13100)         netCashForTheDayBundle.setName("Net Cash");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13101)         netCashForTheDayBundle.setBundleType("netCash");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13102)         netCashForTheDayBundle.setTotal(netCashCollection);
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 13103)         bundle.getBundles().add(netCashForTheDayBundle);
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13104) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13105)         ReportTemplateRowBundle opdServiceCollectionCredit;
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13106)         if (isWithProfessionalFee()) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13107)             opdServiceCollectionCredit = generateOpdServiceCollection(PaymentType.CREDIT);
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13108)         } else {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13109)             opdServiceCollectionCredit = generateOpdServiceCollectionWithoutProfessionalFee(PaymentType.CREDIT);
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13110)         }
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13111)         bundle.getBundles().add(opdServiceCollectionCredit);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13112)         netCollectionPlusCredits = netCashCollection + Math.abs(getSafeTotal(creditBills)); // NOT Deducted from Totals
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 13113) 
104a7cd0a5a (Dr M H B Ariyaratne  2024-11-04 08:38:32 +0530 13114)         // Final net cash for the day
104a7cd0a5a (Dr M H B Ariyaratne  2024-11-04 08:38:32 +0530 13115)         ReportTemplateRowBundle netCashForTheDayBundlePlusCredits = new ReportTemplateRowBundle();
104a7cd0a5a (Dr M H B Ariyaratne  2024-11-04 08:38:32 +0530 13116)         netCashForTheDayBundlePlusCredits.setName("Net Cash Plus Credits");
104a7cd0a5a (Dr M H B Ariyaratne  2024-11-04 08:38:32 +0530 13117)         netCashForTheDayBundlePlusCredits.setBundleType("netCashPlusCredit");
104a7cd0a5a (Dr M H B Ariyaratne  2024-11-04 08:38:32 +0530 13118)         netCashForTheDayBundlePlusCredits.setTotal(netCollectionPlusCredits);
104a7cd0a5a (Dr M H B Ariyaratne  2024-11-04 08:38:32 +0530 13119)         bundle.getBundles().add(netCashForTheDayBundlePlusCredits);
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 13120)     }
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13121) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13122)     public ReportTemplateRowBundle generatePaymentColumnForCollections(List<BillTypeAtomic> bts, List<PaymentMethod> pms) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13123)         ReportTemplateRowBundle b = new ReportTemplateRowBundle();
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13124) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13125)         Map<String, Object> parameters = new HashMap<>();
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13126)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow("
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13127)                 + "bill.department, FUNCTION('date', p.createdAt), p.creater, "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13128)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cash THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13129)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Card THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13130)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.MultiplePaymentMethods THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13131)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13132)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Credit THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13133)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff_Welfare THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13134)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Voucher THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13135)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.IOU THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13136)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Agent THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13137)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cheque THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13138)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Slip THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13139)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.ewallet THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13140)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientDeposit THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13141)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientPoints THEN p.paidValue ELSE 0 END), "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13142)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.OnlineSettlement THEN p.paidValue ELSE 0 END)) "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13143)                 + "FROM Payment p "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13144)                 + "JOIN p.bill bill "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13145)                 + "WHERE p.retired <> :bfr "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13146)                 + "AND bill.retired <> :br "
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13147)                 + "AND bill.billTypeAtomic in :bts "
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13148)                 + "AND p.paymentMethod in :pms ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13149) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13150)         parameters.put("bfr", true);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13151)         parameters.put("br", true);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13152)         parameters.put("bts", bts);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13153)         parameters.put("pms", pms);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13154) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13155)         if (institution != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13156)             jpql += "AND bill.department.institution = :ins ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13157)             parameters.put("ins", institution);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13158)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13159)         if (department != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13160)             jpql += "AND bill.department = :dep ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13161)             parameters.put("dep", department);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13162)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13163)         if (site != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13164)             jpql += "AND bill.department.site = :site ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13165)             parameters.put("site", site);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13166)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13167)         if (webUser != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13168)             jpql += "AND bill.creater = :wu ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13169)             parameters.put("wu", webUser);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13170)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13171)         if (paymentMethod != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13172)             jpql += "AND p.paymentMethod = :pm ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13173)             parameters.put("pm", paymentMethod);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13174)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13175) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13176)         jpql += "AND p.createdAt BETWEEN :fd AND :td ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13177)         parameters.put("fd", fromDate);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13178)         parameters.put("td", toDate);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13179) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13180)         jpql += "GROUP BY bill.department, FUNCTION('date', p.createdAt), p.creater";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13181) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13182)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13183) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13184)         b.setReportTemplateRows(rs);
8e1a732c7dc (Dr M H B Ariyaratne  2024-11-04 12:58:26 +0530 13185)         b.calculateTotalsWithCredit();
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13186)         return b;
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13187)     }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530 13188) 
072c7458501 (Buddhika Ariyaratne  2024-10-06 08:55:47 +0530 13189)     public void generateMyCashierSummary() {
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13190)         institution = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13191)         department = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13192)         site = null;
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530 13193)         webUser = sessionController.getLoggedUser();
072c7458501 (Buddhika Ariyaratne  2024-10-06 08:55:47 +0530 13194)         generateCashierSummary();
072c7458501 (Buddhika Ariyaratne  2024-10-06 08:55:47 +0530 13195)     }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13196) 
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13197)     public String navigateToSelectedCashierSummary(WebUser wu) {
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13198)         bundle = new ReportTemplateRowBundle();
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13199)         institution = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13200)         department = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13201)         site = null;
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13202)         webUser = wu;
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13203)         generateCashierSummary();
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13204)         return "/reports/cashier_reports/cashier_summary?faces-redirect=true";
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13205)     }
d4911051fbf (Buddhika Ariyaratne  2024-10-23 06:12:49 +0530 13206) 
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13207)     public String navigateToSelectedCashierDetails(WebUser wu) {
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13208)         bundle = new ReportTemplateRowBundle();
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13209)         institution = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13210)         department = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13211)         site = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13212)         paymentMethod = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13213) 
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13214)         webUser = wu;
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13215)         generateCashierDetailed();
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13216)         return "/reports/cashier_reports/cashier_detailed?faces-redirect=true";
13a5c185008 (Buddhika Ariyaratne  2024-10-22 22:27:17 +0530 13217)     }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13218) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13219)     public void generateCashierSummary() {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13220)         bundle = new ReportTemplateRowBundle();
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13221) 
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13222)         paymentMethod = null;
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13223) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13224)         double collectionForTheDay = 0.0;
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13225)         double netCashCollection = 0.0;
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13226) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13227)         List<PaymentMethod> creditPaymentMethods = PaymentMethod.getMethodsByType(PaymentType.CREDIT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13228)         List<PaymentMethod> nonCreditPaymentMethods = PaymentMethod.getMethodsByType(PaymentType.NON_CREDIT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13229) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13230)         List<BillTypeAtomic> opdBts = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13231)         opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_WITH_PAYMENT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13232)         opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_PAYMENT_COLLECTION_AT_CASHIER);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13233)         opdBts.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_WITH_PAYMENT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13234)         opdBts.add(BillTypeAtomic.PACKAGE_OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13235) 
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13236)         List<BillTypeAtomic> opdCancellations = new ArrayList<>();
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13237)         opdCancellations.add(BillTypeAtomic.OPD_BATCH_BILL_CANCELLATION);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13238)         opdCancellations.add(BillTypeAtomic.OPD_BILL_CANCELLATION);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13239)         opdCancellations.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_CANCELLATION);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13240)         opdCancellations.add(BillTypeAtomic.PACKAGE_OPD_BILL_CANCELLATION);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13241) 
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13242)         List<BillTypeAtomic> opdRefunds = new ArrayList<>();
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13243)         opdRefunds.add(BillTypeAtomic.OPD_BILL_REFUND);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13244) 
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13245)         // Generate OPD service collection and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13246)         ReportTemplateRowBundle opdServiceCollection = generatePaymentColumnForCollections(opdBts, nonCreditPaymentMethods);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13247)         opdServiceCollection.setBundleType("cashierSummaryOpd");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13248)         opdServiceCollection.setName("OPD Collection");
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13249)         bundle.getBundles().add(opdServiceCollection);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13250)         collectionForTheDay += getSafeTotal(opdServiceCollection);
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13251) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13252)         // Generate OPD service collection and add to the main bundle
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13253)         ReportTemplateRowBundle opdServiceCancellations = generatePaymentMethodColumnsByBills(opdCancellations, nonCreditPaymentMethods);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13254)         opdServiceCancellations.setBundleType("opdServiceCancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13255)         opdServiceCancellations.setName("OPD Service Cancellations");
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13256)         bundle.getBundles().add(opdServiceCancellations);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13257)         collectionForTheDay += getSafeTotal(opdServiceCancellations);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13258) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13259)         // Generate OPD service Refunds and add to the main bundle
d3c939252d5 (Buddhika Ariyaratne  2024-11-04 05:25:27 +0530 13260)         ReportTemplateRowBundle opdServiceRefunds = generatePaymentMethodColumnsByBills(opdRefunds, nonCreditPaymentMethods);
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13261)         opdServiceRefunds.setBundleType("opdServiceRefunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13262)         opdServiceRefunds.setName("OPD Service Refunds");
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13263)         bundle.getBundles().add(opdServiceRefunds);
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13264)         collectionForTheDay += getSafeTotal(opdServiceRefunds);
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13265) 
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13266)         // Generate OPD service collection for credit and add to the main bundle
5a2823ec4a6 (Dr M H B Ariyaratne  2024-11-13 10:10:03 +0530 13267)         ReportTemplateRowBundle opdServiceCollectionCredit = generatePaymentMethodColumnsByBills(opdBts, creditPaymentMethods);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13268)         opdServiceCollectionCredit.setBundleType("cashierSummaryOpdCredit");
c3b039ffb1d (Dr M H B Ariyaratne  2024-11-13 10:16:01 +0530 13269)         opdServiceCollectionCredit.setName("OPD Bills - Credit");
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13270)         bundle.getBundles().add(opdServiceCollectionCredit);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13271)         collectionForTheDay += getSafeTotal(opdServiceCollectionCredit);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13272) 
e88e3dd65a2 (Buddhika             2024-11-02 02:59:05 +0530 13273)         // Generate OPD service cancellations for credit and add to the main bundle
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13274)         ReportTemplateRowBundle opdServiceCancellationsCredit = generatePaymentMethodColumnsByBills(opdCancellations, creditPaymentMethods);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13275)         opdServiceCancellationsCredit.setBundleType("opdServiceCancellationsCredit");
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13276)         opdServiceCancellationsCredit.setName("OPD Service Cancellations - Credit");
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13277)         bundle.getBundles().add(opdServiceCancellationsCredit);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13278)         collectionForTheDay += getSafeTotal(opdServiceCancellationsCredit);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13279) 
e88e3dd65a2 (Buddhika             2024-11-02 02:59:05 +0530 13280)         // Generate OPD service refunds for credit and add to the main bundle
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13281)         ReportTemplateRowBundle opdServiceRefundsCredit = generatePaymentMethodColumnsByBills(opdRefunds, creditPaymentMethods);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13282)         opdServiceRefundsCredit.setBundleType("opdServiceRefundsCredit");
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13283)         opdServiceRefundsCredit.setName("OPD Service Refunds - Credit");
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13284)         bundle.getBundles().add(opdServiceRefundsCredit);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13285)         collectionForTheDay += getSafeTotal(opdServiceRefundsCredit);
e383e415e59 (Buddhika             2024-11-01 15:20:06 +0530 13286) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13287)         // Generate Pharmacy Collection and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13288)         List<BillTypeAtomic> pharmacyCollectionBillTypes = BillTypeAtomic.findByServiceTypeAndFinanceType(ServiceType.PHARMACY, BillFinanceType.CASH_IN);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13289)         ReportTemplateRowBundle pharmacyCollection = generatePaymentColumnForCollections(pharmacyCollectionBillTypes, nonCreditPaymentMethods);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13290)         pharmacyCollection.setBundleType("pharmacyCollection");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13291)         pharmacyCollection.setName("Pharmacy Collection");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13292)         bundle.getBundles().add(pharmacyCollection);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13293)         collectionForTheDay += getSafeTotal(pharmacyCollection);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13294) 
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13295) // Generate Pharmacy service cancellations and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13296)         List<BillTypeAtomic> pharmacyCancellations = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13297)         pharmacyCancellations.add(BillTypeAtomic.PHARMACY_RETAIL_SALE_CANCELLED);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13298)         pharmacyCancellations.add(BillTypeAtomic.PHARMACY_WHOLESALE_CANCELLED);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13299)         ReportTemplateRowBundle pharmacyServiceCancellations = generatePaymentMethodColumnsByBills(pharmacyCancellations);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13300)         pharmacyServiceCancellations.setBundleType("pharmacyServiceCancellations");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13301)         pharmacyServiceCancellations.setName("Pharmacy Service Cancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13302)         bundle.getBundles().add(pharmacyServiceCancellations);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13303)         collectionForTheDay += getSafeTotal(pharmacyServiceCancellations);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13304) 
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13305) // Generate Pharmacy service refunds and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13306)         List<BillTypeAtomic> pharmacyRefunds = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13307)         pharmacyRefunds.add(BillTypeAtomic.PHARMACY_RETAIL_SALE_REFUND);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13308)         pharmacyRefunds.add(BillTypeAtomic.PHARMACY_WHOLESALE_GRN_BILL_REFUND);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13309)         ReportTemplateRowBundle pharmacyServiceRefunds = generatePaymentMethodColumnsByBills(pharmacyRefunds);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13310)         pharmacyServiceRefunds.setBundleType("pharmacyServiceRefunds");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13311)         pharmacyServiceRefunds.setName("Pharmacy Service Refunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13312)         bundle.getBundles().add(pharmacyServiceRefunds);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13313)         collectionForTheDay += getSafeTotal(pharmacyServiceRefunds);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13314) 
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13315) // Generate Professional Payments OPD and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13316)         List<BillTypeAtomic> professionalPaymentsOpd = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13317)         professionalPaymentsOpd.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13318)         professionalPaymentsOpd.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13319)         ReportTemplateRowBundle professionalPaymentsOpdBundle = generatePaymentMethodColumnsByBills(professionalPaymentsOpd);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13320)         professionalPaymentsOpdBundle.setBundleType("ProfessionalPaymentsOPD");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13321)         professionalPaymentsOpdBundle.setName("Professional Payments OPD");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13322)         bundle.getBundles().add(professionalPaymentsOpdBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13323)         collectionForTheDay += getSafeTotal(professionalPaymentsOpdBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13324) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13325) // Generate Professional Payments OPD - Cancel and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13326)         List<BillTypeAtomic> professionalPaymentsOpdCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13327)         professionalPaymentsOpdCancel.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13328)         professionalPaymentsOpdCancel.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13329)         ReportTemplateRowBundle professionalPaymentsOpdCancelBundle = generatePaymentMethodColumnsByBills(professionalPaymentsOpdCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13330)         professionalPaymentsOpdCancelBundle.setBundleType("ProfessionalPaymentsOPDCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13331)         professionalPaymentsOpdCancelBundle.setName("Professional Payments OPD - Cancel");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13332)         bundle.getBundles().add(professionalPaymentsOpdCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13333)         collectionForTheDay += getSafeTotal(professionalPaymentsOpdCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13334) 
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13335) // Generate Professional Payments Inward and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13336)         List<BillTypeAtomic> professionalPaymentsInward = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13337)         professionalPaymentsInward.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13338)         ReportTemplateRowBundle professionalPaymentsInwardBundle = generatePaymentMethodColumnsByBills(professionalPaymentsInward);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13339)         professionalPaymentsInwardBundle.setBundleType("ProfessionalPaymentsInward");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13340)         professionalPaymentsInwardBundle.setName("Professional Payments Inward");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13341)         bundle.getBundles().add(professionalPaymentsInwardBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13342)         collectionForTheDay += getSafeTotal(professionalPaymentsInwardBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13343) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13344) // Generate Professional Payments Inward - Cancel and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13345)         List<BillTypeAtomic> professionalPaymentsInwardCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13346)         professionalPaymentsInwardCancel.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13347)         ReportTemplateRowBundle professionalPaymentsInwardCancelBundle = generatePaymentMethodColumnsByBills(professionalPaymentsInwardCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13348)         professionalPaymentsInwardCancelBundle.setBundleType("ProfessionalPaymentsInwardCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13349)         professionalPaymentsInwardCancelBundle.setName("Professional Payments Inward - Cancel");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13350)         bundle.getBundles().add(professionalPaymentsInwardCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13351)         collectionForTheDay += getSafeTotal(professionalPaymentsInwardCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13352) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13353) // Generate Petty Cash Payment and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13354)         List<BillTypeAtomic> pettyCashPayment = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13355)         pettyCashPayment.add(BillTypeAtomic.PETTY_CASH_ISSUE);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13356)         ReportTemplateRowBundle pettyCashPaymentBundle = generatePaymentMethodColumnsByBills(pettyCashPayment);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13357)         pettyCashPaymentBundle.setBundleType("PettyCashPayment");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13358)         pettyCashPaymentBundle.setName("Petty Cash Payments");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13359)         bundle.getBundles().add(pettyCashPaymentBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13360)         collectionForTheDay += getSafeTotal(pettyCashPaymentBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13361) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13362) // Generate Petty Cash Payment Cancel and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13363)         List<BillTypeAtomic> pettyCashPaymentCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13364)         pettyCashPaymentCancel.add(BillTypeAtomic.PETTY_CASH_RETURN);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13365)         pettyCashPaymentCancel.add(BillTypeAtomic.PETTY_CASH_BILL_CANCELLATION);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13366)         ReportTemplateRowBundle pettyCashPaymentCancelBundle = generatePaymentMethodColumnsByBills(pettyCashPaymentCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13367)         pettyCashPaymentCancelBundle.setBundleType("PettyCashPaymentCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13368)         pettyCashPaymentCancelBundle.setName("Petty Cash Payment Cancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13369)         bundle.getBundles().add(pettyCashPaymentCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13370)         collectionForTheDay += getSafeTotal(pettyCashPaymentCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13371) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13372) // Generate Inward Payments and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13373)         List<BillTypeAtomic> inwardPayments = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13374)         inwardPayments.add(BillTypeAtomic.INWARD_DEPOSIT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13375)         ReportTemplateRowBundle inwardPaymentsBundle = generatePaymentMethodColumnsByBills(inwardPayments);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13376)         inwardPaymentsBundle.setBundleType("InwardPayments");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13377)         inwardPaymentsBundle.setName("Inward Payments");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13378)         bundle.getBundles().add(inwardPaymentsBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13379)         collectionForTheDay += getSafeTotal(inwardPaymentsBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13380) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13381) // Generate Inward Payments Cancel and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13382)         List<BillTypeAtomic> inwardPaymentsCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13383)         inwardPaymentsCancel.add(BillTypeAtomic.INWARD_DEPOSIT_CANCELLATION);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13384)         ReportTemplateRowBundle inwardPaymentsCancelBundle = generatePaymentMethodColumnsByBills(inwardPaymentsCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13385)         inwardPaymentsCancelBundle.setBundleType("InwardPaymentsCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13386)         inwardPaymentsCancelBundle.setName("Inward Payment Cancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13387)         bundle.getBundles().add(inwardPaymentsCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13388)         collectionForTheDay += getSafeTotal(inwardPaymentsCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13389) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13390) // Generate Inward Payments Refund and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13391)         List<BillTypeAtomic> inwardPaymentsRefund = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13392)         inwardPaymentsRefund.add(BillTypeAtomic.INWARD_DEPOSIT_REFUND);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13393)         ReportTemplateRowBundle inwardPaymentsRefundBundle = generatePaymentMethodColumnsByBills(inwardPaymentsRefund);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13394)         inwardPaymentsRefundBundle.setBundleType("InwardPaymentsRefund");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13395)         inwardPaymentsRefundBundle.setName("Inward Payment Refunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13396)         bundle.getBundles().add(inwardPaymentsRefundBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13397)         collectionForTheDay += getSafeTotal(inwardPaymentsRefundBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13398) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13399) // Generate Credit Company Payment OP - Receive and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13400)         List<BillTypeAtomic> creditCompanyPaymentOpReceive = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13401)         creditCompanyPaymentOpReceive.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13402)         ReportTemplateRowBundle creditCompanyPaymentOpReceiveBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentOpReceive);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13403)         creditCompanyPaymentOpReceiveBundle.setBundleType("CreditCompanyPaymentOPReceive");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13404)         creditCompanyPaymentOpReceiveBundle.setName("Credit Company OP Payment Reception");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13405)         bundle.getBundles().add(creditCompanyPaymentOpReceiveBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13406)         collectionForTheDay += getSafeTotal(creditCompanyPaymentOpReceiveBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13407) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13408) // Generate Credit Company Payment OP - Cancel and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13409)         List<BillTypeAtomic> creditCompanyPaymentOpCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13410)         creditCompanyPaymentOpCancel.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT_CANCELLATION);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13411)         creditCompanyPaymentOpCancel.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT_REFUND);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13412)         ReportTemplateRowBundle creditCompanyPaymentOpCancelBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentOpCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13413)         creditCompanyPaymentOpCancelBundle.setBundleType("CreditCompanyPaymentOPCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13414)         creditCompanyPaymentOpCancelBundle.setName("Credit Company OP Payment Cancellations and Refunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13415)         bundle.getBundles().add(creditCompanyPaymentOpCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13416)         collectionForTheDay += getSafeTotal(creditCompanyPaymentOpCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13417) 
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13418) // Generate Credit Company Payment IP - Receive and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13419)         List<BillTypeAtomic> creditCompanyPaymentIpReceive = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13420)         creditCompanyPaymentIpReceive.add(BillTypeAtomic.CREDIT_COMPANY_INPATIENT_PAYMENT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13421)         creditCompanyPaymentIpReceive.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13422)         ReportTemplateRowBundle creditCompanyPaymentIpReceiveBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentIpReceive);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13423)         creditCompanyPaymentIpReceiveBundle.setBundleType("CreditCompanyPaymentIPReceive");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13424)         creditCompanyPaymentIpReceiveBundle.setName("Credit Company IP Payment Reception");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13425)         bundle.getBundles().add(creditCompanyPaymentIpReceiveBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13426)         collectionForTheDay += getSafeTotal(creditCompanyPaymentIpReceiveBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13427) 
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13428) // Generate Credit Company Payment IP - Cancellation and Refunds and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13429)         List<BillTypeAtomic> creditCompanyPaymentIpCancellation = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13430)         creditCompanyPaymentIpCancellation.add(BillTypeAtomic.CREDIT_COMPANY_INPATIENT_PAYMENT_CANCELLATION);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13431)         creditCompanyPaymentIpCancellation.add(BillTypeAtomic.CREDIT_COMPANY_INPATIENT_PAYMENT_REFUND);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13432)         ReportTemplateRowBundle creditCompanyPaymentIpCancellationBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentIpCancellation);
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13433)         creditCompanyPaymentIpCancellationBundle.setBundleType("CreditCompanyPaymentIPCancellation");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13434)         creditCompanyPaymentIpCancellationBundle.setName("Credit Company IP Payment Cancellations and Refunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13435)         bundle.getBundles().add(creditCompanyPaymentIpCancellationBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13436)         collectionForTheDay += getSafeTotal(creditCompanyPaymentIpCancellationBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13437) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13438) // Generate Patient Deposit and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13439)         List<BillTypeAtomic> patientDeposit = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13440)         patientDeposit.add(BillTypeAtomic.PATIENT_DEPOSIT);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13441)         ReportTemplateRowBundle patientDepositBundle = generatePaymentMethodColumnsByBills(patientDeposit);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13442)         patientDepositBundle.setBundleType("PatientDeposit");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13443)         patientDepositBundle.setName("Patient Deposits");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13444)         bundle.getBundles().add(patientDepositBundle);
d2fd8645ad9 (Buddhika Ariyaratne  2024-11-04 05:13:54 +0530 13445)         System.out.println("collectionForTheDay = " + collectionForTheDay);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13446)         collectionForTheDay += getSafeTotal(patientDepositBundle);
d2fd8645ad9 (Buddhika Ariyaratne  2024-11-04 05:13:54 +0530 13447)         System.out.println("collectionForTheDay = " + collectionForTheDay);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13448) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13449) // Generate Patient Deposit Cancellation and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13450)         List<BillTypeAtomic> patientDepositCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13451)         patientDepositCancel.add(BillTypeAtomic.PATIENT_DEPOSIT_CANCELLED);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13452)         ReportTemplateRowBundle patientDepositCancelBundle = generatePaymentMethodColumnsByBills(patientDepositCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13453)         patientDepositCancelBundle.setBundleType("PatientDepositCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13454)         patientDepositCancelBundle.setName("Patient Deposit Cancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13455)         bundle.getBundles().add(patientDepositCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13456)         collectionForTheDay += getSafeTotal(patientDepositCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13457) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13458) // Generate Patient Deposit Refund and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13459)         List<BillTypeAtomic> patientDepositRefund = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13460)         patientDepositRefund.add(BillTypeAtomic.PATIENT_DEPOSIT_REFUND);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13461)         ReportTemplateRowBundle patientDepositRefundBundle = generatePaymentMethodColumnsByBills(patientDepositRefund);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13462)         patientDepositRefundBundle.setBundleType("PatientDepositRefund");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13463)         patientDepositRefundBundle.setName("Patient Deposit Refunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13464)         bundle.getBundles().add(patientDepositRefundBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13465)         collectionForTheDay += getSafeTotal(patientDepositRefundBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13466) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13467) // Generate Collecting Centre Payment Receive and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13468)         List<BillTypeAtomic> collectingCentrePaymentReceive = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13469)         collectingCentrePaymentReceive.add(BillTypeAtomic.CC_PAYMENT_RECEIVED_BILL);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13470)         ReportTemplateRowBundle collectingCentrePaymentReceiveBundle = generatePaymentMethodColumnsByBills(collectingCentrePaymentReceive);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13471)         collectingCentrePaymentReceiveBundle.setBundleType("CollectingCentrePaymentReceive");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13472)         collectingCentrePaymentReceiveBundle.setName("Collecting Centre Payment Receives");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13473)         bundle.getBundles().add(collectingCentrePaymentReceiveBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13474)         collectionForTheDay += getSafeTotal(collectingCentrePaymentReceiveBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13475) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13476) // Generate Collecting Centre Payment Cancel and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13477)         List<BillTypeAtomic> collectingCentrePaymentCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13478)         collectingCentrePaymentCancel.add(BillTypeAtomic.CC_PAYMENT_CANCELLATION_BILL);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13479)         ReportTemplateRowBundle collectingCentrePaymentCancelBundle = generatePaymentMethodColumnsByBills(collectingCentrePaymentCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13480)         collectingCentrePaymentCancelBundle.setBundleType("CollectingCentrePaymentCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13481)         collectingCentrePaymentCancelBundle.setName("Collecting Centre Payment Cancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13482)         bundle.getBundles().add(collectingCentrePaymentCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13483)         collectionForTheDay += getSafeTotal(collectingCentrePaymentCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13484) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13485) // Generate OPD Credit, Cancellation, and Refund and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13486)         List<BillTypeAtomic> opdCredit = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13487)         opdCredit.add(BillTypeAtomic.OPD_CREDIT_COMPANY_PAYMENT_RECEIVED);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13488)         ReportTemplateRowBundle opdCreditBundle = generatePaymentMethodColumnsByBills(opdCredit);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13489)         opdCreditBundle.setBundleType("OpdCredit");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13490)         opdCreditBundle.setName("OPD Credit Payments");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13491)         bundle.getBundles().add(opdCreditBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13492)         collectionForTheDay += getSafeTotal(opdCreditBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13493) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13494)         List<BillTypeAtomic> opdCreditCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13495)         opdCreditCancel.add(BillTypeAtomic.OPD_CREDIT_COMPANY_PAYMENT_CANCELLATION);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13496)         ReportTemplateRowBundle opdCreditCancelBundle = generatePaymentMethodColumnsByBills(opdCreditCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13497)         opdCreditCancelBundle.setBundleType("OpdCreditCancelled");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13498)         opdCreditCancelBundle.setName("OPD Credit Cancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13499)         bundle.getBundles().add(opdCreditCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13500)         collectionForTheDay += getSafeTotal(opdCreditCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13501) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13502)         List<BillTypeAtomic> opdCreditRefund = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13503)         opdCreditRefund.add(BillTypeAtomic.OPD_CREDIT_COMPANY_CREDIT_NOTE);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13504)         ReportTemplateRowBundle opdCreditRefundBundle = generatePaymentMethodColumnsByBills(opdCreditRefund);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13505)         opdCreditRefundBundle.setBundleType("OpdCreditRefund");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13506)         opdCreditRefundBundle.setName("OPD Credit Refunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13507)         bundle.getBundles().add(opdCreditRefundBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13508)         collectionForTheDay += getSafeTotal(opdCreditRefundBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13509) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13510) // Generate Pharmacy Credit Bills, Cancellation, and Refund and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13511)         List<BillTypeAtomic> pharmacyCreditBills = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13512)         pharmacyCreditBills.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_PAYMENT_RECEIVED);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13513)         ReportTemplateRowBundle pharmacyCreditBillsBundle = generatePaymentMethodColumnsByBills(pharmacyCreditBills);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13514)         pharmacyCreditBillsBundle.setBundleType("PharmacyCreditBills");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13515)         pharmacyCreditBillsBundle.setName("Pharmacy Credit Bills");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13516)         bundle.getBundles().add(pharmacyCreditBillsBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13517)         collectionForTheDay += getSafeTotal(pharmacyCreditBillsBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13518) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13519)         List<BillTypeAtomic> pharmacyCreditCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13520)         pharmacyCreditCancel.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_PAYMENT_CANCELLATION);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13521)         ReportTemplateRowBundle pharmacyCreditCancelBundle = generatePaymentMethodColumnsByBills(pharmacyCreditCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13522)         pharmacyCreditCancelBundle.setBundleType("PharmacyCreditCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13523)         pharmacyCreditCancelBundle.setName("Pharmacy Credit Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13524)         bundle.getBundles().add(pharmacyCreditCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13525)         collectionForTheDay += getSafeTotal(pharmacyCreditCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13526) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13527)         List<BillTypeAtomic> pharmacyCreditRefund = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13528)         pharmacyCreditRefund.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_CREDIT_NOTE);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13529)         ReportTemplateRowBundle pharmacyCreditRefundBundle = generatePaymentMethodColumnsByBills(pharmacyCreditRefund);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13530)         pharmacyCreditRefundBundle.setBundleType("PharmacyCreditRefund");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13531)         pharmacyCreditRefundBundle.setName("Pharmacy Credit Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13532)         bundle.getBundles().add(pharmacyCreditRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13533)         collectionForTheDay += getSafeTotal(pharmacyCreditRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13534) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13535)         // Final net cash for the day
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13536)         ReportTemplateRowBundle netCashForTheDayBundle = new ReportTemplateRowBundle();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13537)         netCashForTheDayBundle.setName("Net Cash");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13538)         netCashForTheDayBundle.setBundleType("netCash");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13539)         netCashForTheDayBundle.setTotal(netCashCollection);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13540) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13541)         bundle.getBundles().add(netCashForTheDayBundle);
d2fd8645ad9 (Buddhika Ariyaratne  2024-11-04 05:13:54 +0530 13542)         bundle.calculateTotalsByAllChildBundles();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13543) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13544)     }
a39810946af (Pubudu-Piyankara     2024-10-04 22:28:26 +0530 13545) 
d8aa72a349c (Dr M H B Ariyaratne  2024-10-28 08:34:03 +0530 13546)     public void listAllDrawers() {
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530 13547)         String jpql;
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530 13548)         Map<String, Object> params = new HashMap<>();
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530 13549)         jpql = "select d from Drawer d "
d8aa72a349c (Dr M H B Ariyaratne  2024-10-28 08:34:03 +0530 13550)                 + " where d.retired=:ret"
d8aa72a349c (Dr M H B Ariyaratne  2024-10-28 08:34:03 +0530 13551)                 + " order by d.drawerUser.name ";
d8aa72a349c (Dr M H B Ariyaratne  2024-10-28 08:34:03 +0530 13552)         params.put("ret", false);
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530 13553)         drawerList = drawerFacade.findByJpql(jpql, params, TemporalType.TIMESTAMP);
f124d32fe0c (Lawan Samarasekara   2024-10-03 20:16:25 +0530 13554)     }
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530 13555) 
e7c04e551b7 (Buddhika Ariyaratne  2024-10-06 10:19:10 +0530 13556)     public void generateMyCashierDetailed() {
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530 13557)         webUser = sessionController.getLoggedUser();
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13558)         institution = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13559)         department = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13560)         site = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13561)         paymentMethod = null;
55779f786dd (Dr M H B Ariyaratne  2024-11-05 11:08:19 +0530 13562) 
e7c04e551b7 (Buddhika Ariyaratne  2024-10-06 10:19:10 +0530 13563)         generateCashierDetailed();
e7c04e551b7 (Buddhika Ariyaratne  2024-10-06 10:19:10 +0530 13564)     }
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13565) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13566)     public void generateCashierDetailed() {
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13567)         bundle = new ReportTemplateRowBundle();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13568) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13569)         double collectionForTheDay = 0.0;
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13570)         double netCashCollection = 0.0;
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13571) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13572)         List<PaymentMethod> creditPaymentMethods = PaymentMethod.getMethodsByType(PaymentType.CREDIT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13573)         List<PaymentMethod> nonCreditPaymentMethods = PaymentMethod.getMethodsByType(PaymentType.NON_CREDIT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13574) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13575)         List<BillTypeAtomic> opdBts = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13576)         opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_WITH_PAYMENT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13577)         opdBts.add(BillTypeAtomic.OPD_BATCH_BILL_PAYMENT_COLLECTION_AT_CASHIER);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13578)         opdBts.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_WITH_PAYMENT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13579)         opdBts.add(BillTypeAtomic.PACKAGE_OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13580) 
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13581)         List<BillTypeAtomic> opdCancellations = new ArrayList<>();
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13582)         opdCancellations.add(BillTypeAtomic.OPD_BATCH_BILL_CANCELLATION);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13583)         opdCancellations.add(BillTypeAtomic.OPD_BILL_CANCELLATION);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13584)         opdCancellations.add(BillTypeAtomic.PACKAGE_OPD_BATCH_BILL_CANCELLATION);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13585)         opdCancellations.add(BillTypeAtomic.PACKAGE_OPD_BILL_CANCELLATION);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13586) 
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13587)         List<BillTypeAtomic> opdRefunds = new ArrayList<>();
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13588)         opdRefunds.add(BillTypeAtomic.OPD_BILL_REFUND);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13589) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13590)         ReportTemplateRowBundle opdServiceBilled = generatePaymentMethodColumnsByBills(opdBts, nonCreditPaymentMethods);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13591)         opdServiceBilled.setBundleType("opdServiceBilled");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13592)         opdServiceBilled.setName("OPD Bills");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13593)         bundle.getBundles().add(opdServiceBilled);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13594)         collectionForTheDay += getSafeTotal(opdServiceBilled);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13595) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13596)         // Generate OPD service collection and add to the main bundle
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13597)         ReportTemplateRowBundle opdServiceCancellations = generatePaymentMethodColumnsByBills(opdCancellations, nonCreditPaymentMethods);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13598)         opdServiceCancellations.setBundleType("opdServiceCancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13599)         opdServiceCancellations.setName("OPD Service Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13600)         bundle.getBundles().add(opdServiceCancellations);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13601)         collectionForTheDay += getSafeTotal(opdServiceCancellations);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13602) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13603)         // Generate OPD service Refunds and add to the main bundle
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13604)         ReportTemplateRowBundle opdServiceRefunds = generatePaymentMethodColumnsByBills(opdRefunds, nonCreditPaymentMethods);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13605)         opdServiceRefunds.setBundleType("opdServiceRefunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13606)         opdServiceRefunds.setName("OPD Service Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13607)         bundle.getBundles().add(opdServiceRefunds);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13608)         collectionForTheDay += getSafeTotal(opdServiceRefunds);
d5ba322e554 (IsuruUdaraRanaweera  2024-11-04 18:04:12 +0530 13609) 
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13610)         // Generate OPD service collection for credit and add to the main bundle
7d7072c180e (Dr M H B Ariyaratne  2024-11-05 07:52:58 +0530 13611)         ReportTemplateRowBundle opdServiceCollectionCredit = generatePaymentMethodColumnsByBills(opdBts, creditPaymentMethods);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13612)         opdServiceCollectionCredit.setBundleType("cashierSummaryOpdCredit");
c3b039ffb1d (Dr M H B Ariyaratne  2024-11-13 10:16:01 +0530 13613)         opdServiceCollectionCredit.setName("OPD Bills - Credit");
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13614)         bundle.getBundles().add(opdServiceCollectionCredit);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13615)         collectionForTheDay += getSafeTotal(opdServiceCollectionCredit);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13616) 
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13617)         // Generate OPD service cancellations for credit and add to the main bundle
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13618)         ReportTemplateRowBundle opdServiceCancellationsCredit = generatePaymentMethodColumnsByBills(opdCancellations, creditPaymentMethods);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13619)         opdServiceCancellationsCredit.setBundleType("opdServiceCancellationsCredit");
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13620)         opdServiceCancellationsCredit.setName("OPD Service Cancellations - Credit");
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13621)         bundle.getBundles().add(opdServiceCancellationsCredit);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13622)         collectionForTheDay += getSafeTotal(opdServiceCancellationsCredit);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13623) 
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13624)         // Generate OPD service refunds for credit and add to the main bundle
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13625)         ReportTemplateRowBundle opdServiceRefundsCredit = generatePaymentMethodColumnsByBills(opdRefunds, creditPaymentMethods);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13626)         opdServiceRefundsCredit.setBundleType("opdServiceRefundsCredit");
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13627)         opdServiceRefundsCredit.setName("OPD Service Refunds - Credit");
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13628)         bundle.getBundles().add(opdServiceRefundsCredit);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 13629)         collectionForTheDay += getSafeTotal(opdServiceRefundsCredit);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13630) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13631)         // Generate Pharmacy Bills and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13632)         List<BillTypeAtomic> pharmacyCollectionBillTypes = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13633)         pharmacyCollectionBillTypes.add(BillTypeAtomic.PHARMACY_RETAIL_SALE);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13634)         pharmacyCollectionBillTypes.add(BillTypeAtomic.PHARMACY_WHOLESALE);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13635)         ReportTemplateRowBundle pharmacyCollection = generatePaymentMethodColumnsByBills(pharmacyCollectionBillTypes, nonCreditPaymentMethods);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13636)         pharmacyCollection.setBundleType("pharmacyNonCreditBills");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13637)         pharmacyCollection.setName("Pharmacy Bills (Non Credit)");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13638)         bundle.getBundles().add(pharmacyCollection);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13639)         collectionForTheDay += getSafeTotal(pharmacyCollection);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13640) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13641) // Generate Pharmacy service cancellations and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13642)         List<BillTypeAtomic> pharmacyCancellations = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13643)         pharmacyCancellations.add(BillTypeAtomic.PHARMACY_RETAIL_SALE_CANCELLED);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13644)         pharmacyCancellations.add(BillTypeAtomic.PHARMACY_WHOLESALE_CANCELLED);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13645)         ReportTemplateRowBundle pharmacyServiceCancellations = generatePaymentMethodColumnsByBills(pharmacyCancellations);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13646)         pharmacyServiceCancellations.setBundleType("pharmacyServiceCancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13647)         pharmacyServiceCancellations.setName("Pharmacy Service Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13648)         bundle.getBundles().add(pharmacyServiceCancellations);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13649)         collectionForTheDay += getSafeTotal(pharmacyServiceCancellations);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13650) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13651) // Generate Pharmacy service refunds and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13652)         List<BillTypeAtomic> pharmacyRefunds = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13653)         pharmacyRefunds.add(BillTypeAtomic.PHARMACY_RETAIL_SALE_REFUND);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13654)         pharmacyRefunds.add(BillTypeAtomic.PHARMACY_WHOLESALE_GRN_BILL_REFUND);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13655)         ReportTemplateRowBundle pharmacyServiceRefunds = generatePaymentMethodColumnsByBills(pharmacyRefunds);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13656)         pharmacyServiceRefunds.setBundleType("pharmacyServiceRefunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13657)         pharmacyServiceRefunds.setName("Pharmacy Service Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13658)         bundle.getBundles().add(pharmacyServiceRefunds);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13659)         collectionForTheDay += getSafeTotal(pharmacyServiceRefunds);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13660) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13661) // Generate Professional Payments OPD and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13662)         List<BillTypeAtomic> professionalPaymentsOpd = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13663)         professionalPaymentsOpd.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13664)         professionalPaymentsOpd.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13665)         ReportTemplateRowBundle professionalPaymentsOpdBundle = generatePaymentMethodColumnsByBills(professionalPaymentsOpd);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13666)         professionalPaymentsOpdBundle.setBundleType("ProfessionalPaymentsOPD");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13667)         professionalPaymentsOpdBundle.setName("Professional Payments OPD");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13668)         bundle.getBundles().add(professionalPaymentsOpdBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13669)         collectionForTheDay += getSafeTotal(professionalPaymentsOpdBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13670) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13671) // Generate Professional Payments OPD - Cancel and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13672)         List<BillTypeAtomic> professionalPaymentsOpdCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13673)         professionalPaymentsOpdCancel.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13674)         professionalPaymentsOpdCancel.add(BillTypeAtomic.OPD_PROFESSIONAL_PAYMENT_BILL_RETURN);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13675)         ReportTemplateRowBundle professionalPaymentsOpdCancelBundle = generatePaymentMethodColumnsByBills(professionalPaymentsOpdCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13676)         professionalPaymentsOpdCancelBundle.setBundleType("ProfessionalPaymentsOPDCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13677)         professionalPaymentsOpdCancelBundle.setName("Professional Payments OPD - Cancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13678)         bundle.getBundles().add(professionalPaymentsOpdCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13679)         collectionForTheDay += getSafeTotal(professionalPaymentsOpdCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13680) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13681) // Generate Professional Payments Inward and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13682)         List<BillTypeAtomic> professionalPaymentsInward = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13683)         professionalPaymentsInward.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13684)         ReportTemplateRowBundle professionalPaymentsInwardBundle = generatePaymentMethodColumnsByBills(professionalPaymentsInward);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13685)         professionalPaymentsInwardBundle.setBundleType("ProfessionalPaymentsInward");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13686)         professionalPaymentsInwardBundle.setName("Professional Payments Inward");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13687)         bundle.getBundles().add(professionalPaymentsInwardBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13688)         collectionForTheDay += getSafeTotal(professionalPaymentsInwardBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13689) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13690) // Generate Professional Payments Inward - Cancel and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13691)         List<BillTypeAtomic> professionalPaymentsInwardCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13692)         professionalPaymentsInwardCancel.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13693)         ReportTemplateRowBundle professionalPaymentsInwardCancelBundle = generatePaymentMethodColumnsByBills(professionalPaymentsInwardCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13694)         professionalPaymentsInwardCancelBundle.setBundleType("ProfessionalPaymentsInwardCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13695)         professionalPaymentsInwardCancelBundle.setName("Professional Payments Inward - Cancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13696)         bundle.getBundles().add(professionalPaymentsInwardCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13697)         collectionForTheDay += getSafeTotal(professionalPaymentsInwardCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13698) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13699) // Generate Petty Cash Payment and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13700)         List<BillTypeAtomic> pettyCashPayment = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13701)         pettyCashPayment.add(BillTypeAtomic.PETTY_CASH_ISSUE);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13702)         ReportTemplateRowBundle pettyCashPaymentBundle = generatePaymentMethodColumnsByBills(pettyCashPayment);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13703)         pettyCashPaymentBundle.setBundleType("PettyCashPayment");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13704)         pettyCashPaymentBundle.setName("Petty Cash Payments");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13705)         bundle.getBundles().add(pettyCashPaymentBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13706)         collectionForTheDay += getSafeTotal(pettyCashPaymentBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13707) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13708) // Generate Petty Cash Payment Cancel and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13709)         List<BillTypeAtomic> pettyCashPaymentCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13710)         pettyCashPaymentCancel.add(BillTypeAtomic.PETTY_CASH_RETURN);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13711)         pettyCashPaymentCancel.add(BillTypeAtomic.PETTY_CASH_BILL_CANCELLATION);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13712)         ReportTemplateRowBundle pettyCashPaymentCancelBundle = generatePaymentMethodColumnsByBills(pettyCashPaymentCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13713)         pettyCashPaymentCancelBundle.setBundleType("PettyCashPaymentCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13714)         pettyCashPaymentCancelBundle.setName("Petty Cash Payment Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13715)         bundle.getBundles().add(pettyCashPaymentCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13716)         collectionForTheDay += getSafeTotal(pettyCashPaymentCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13717) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13718) // Generate Inward Payments and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13719)         List<BillTypeAtomic> inwardPayments = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13720)         inwardPayments.add(BillTypeAtomic.INWARD_DEPOSIT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13721)         ReportTemplateRowBundle inwardPaymentsBundle = generatePaymentMethodColumnsByBills(inwardPayments);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13722)         inwardPaymentsBundle.setBundleType("InwardPayments");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13723)         inwardPaymentsBundle.setName("Inward Payments");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13724)         bundle.getBundles().add(inwardPaymentsBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13725)         collectionForTheDay += getSafeTotal(inwardPaymentsBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13726) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13727) // Generate Inward Payments Cancel and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13728)         List<BillTypeAtomic> inwardPaymentsCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13729)         inwardPaymentsCancel.add(BillTypeAtomic.INWARD_DEPOSIT_CANCELLATION);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13730)         ReportTemplateRowBundle inwardPaymentsCancelBundle = generatePaymentMethodColumnsByBills(inwardPaymentsCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13731)         inwardPaymentsCancelBundle.setBundleType("InwardPaymentsCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13732)         inwardPaymentsCancelBundle.setName("Inward Payment Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13733)         bundle.getBundles().add(inwardPaymentsCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13734)         collectionForTheDay += getSafeTotal(inwardPaymentsCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13735) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13736) // Generate Inward Payments Refund and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13737)         List<BillTypeAtomic> inwardPaymentsRefund = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13738)         inwardPaymentsRefund.add(BillTypeAtomic.INWARD_DEPOSIT_REFUND);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13739)         ReportTemplateRowBundle inwardPaymentsRefundBundle = generatePaymentMethodColumnsByBills(inwardPaymentsRefund);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13740)         inwardPaymentsRefundBundle.setBundleType("InwardPaymentsRefund");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13741)         inwardPaymentsRefundBundle.setName("Inward Payment Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13742)         bundle.getBundles().add(inwardPaymentsRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13743)         collectionForTheDay += getSafeTotal(inwardPaymentsRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13744) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13745) // Generate Credit Company Payment OP - Receive and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13746)         List<BillTypeAtomic> creditCompanyPaymentOpReceive = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13747)         creditCompanyPaymentOpReceive.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13748)         ReportTemplateRowBundle creditCompanyPaymentOpReceiveBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentOpReceive);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13749)         creditCompanyPaymentOpReceiveBundle.setBundleType("CreditCompanyPaymentOPReceive");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13750)         creditCompanyPaymentOpReceiveBundle.setName("Credit Company OP Payment Reception");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13751)         bundle.getBundles().add(creditCompanyPaymentOpReceiveBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13752)         collectionForTheDay += getSafeTotal(creditCompanyPaymentOpReceiveBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13753) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13754) // Generate Credit Company Payment OP - Cancel and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13755)         List<BillTypeAtomic> creditCompanyPaymentOpCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13756)         creditCompanyPaymentOpCancel.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT_CANCELLATION);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13757)         creditCompanyPaymentOpCancel.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT_REFUND);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13758)         ReportTemplateRowBundle creditCompanyPaymentOpCancelBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentOpCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13759)         creditCompanyPaymentOpCancelBundle.setBundleType("CreditCompanyPaymentOPCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13760)         creditCompanyPaymentOpCancelBundle.setName("Credit Company OP Payment Cancellations and Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13761)         bundle.getBundles().add(creditCompanyPaymentOpCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13762)         collectionForTheDay += getSafeTotal(creditCompanyPaymentOpCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13763) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13764) // Generate Credit Company Payment IP - Receive and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13765)         List<BillTypeAtomic> creditCompanyPaymentIpReceive = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13766)         creditCompanyPaymentIpReceive.add(BillTypeAtomic.CREDIT_COMPANY_INPATIENT_PAYMENT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13767)         creditCompanyPaymentIpReceive.add(BillTypeAtomic.CREDIT_COMPANY_OPD_PATIENT_PAYMENT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13768)         ReportTemplateRowBundle creditCompanyPaymentIpReceiveBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentIpReceive);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13769)         creditCompanyPaymentIpReceiveBundle.setBundleType("CreditCompanyPaymentIPReceive");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13770)         creditCompanyPaymentIpReceiveBundle.setName("Credit Company IP Payment Reception");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13771)         bundle.getBundles().add(creditCompanyPaymentIpReceiveBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13772)         collectionForTheDay += getSafeTotal(creditCompanyPaymentIpReceiveBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13773) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13774) // Generate Credit Company Payment IP - Cancellation and Refunds and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13775)         List<BillTypeAtomic> creditCompanyPaymentIpCancellation = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13776)         creditCompanyPaymentIpCancellation.add(BillTypeAtomic.CREDIT_COMPANY_INPATIENT_PAYMENT_CANCELLATION);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13777)         creditCompanyPaymentIpCancellation.add(BillTypeAtomic.CREDIT_COMPANY_INPATIENT_PAYMENT_REFUND);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13778)         ReportTemplateRowBundle creditCompanyPaymentIpCancellationBundle = generatePaymentMethodColumnsByBills(creditCompanyPaymentIpCancellation);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13779)         creditCompanyPaymentIpCancellationBundle.setBundleType("CreditCompanyPaymentIPCancellation");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13780)         creditCompanyPaymentIpCancellationBundle.setName("Credit Company IP Payment Cancellations and Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13781)         bundle.getBundles().add(creditCompanyPaymentIpCancellationBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13782)         collectionForTheDay += getSafeTotal(creditCompanyPaymentIpCancellationBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13783) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13784) // Generate Patient Deposit and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13785)         List<BillTypeAtomic> patientDeposit = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13786)         patientDeposit.add(BillTypeAtomic.PATIENT_DEPOSIT);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13787)         ReportTemplateRowBundle patientDepositBundle = generatePaymentMethodColumnsByBills(patientDeposit);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13788)         patientDepositBundle.setBundleType("PatientDeposit");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13789)         patientDepositBundle.setName("Patient Deposits");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13790)         bundle.getBundles().add(patientDepositBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13791)         collectionForTheDay += getSafeTotal(patientDepositBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13792) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13793) // Generate Patient Deposit Cancellation and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13794)         List<BillTypeAtomic> patientDepositCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13795)         patientDepositCancel.add(BillTypeAtomic.PATIENT_DEPOSIT_CANCELLED);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13796)         ReportTemplateRowBundle patientDepositCancelBundle = generatePaymentMethodColumnsByBills(patientDepositCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13797)         patientDepositCancelBundle.setBundleType("PatientDepositCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13798)         patientDepositCancelBundle.setName("Patient Deposit Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13799)         bundle.getBundles().add(patientDepositCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13800)         collectionForTheDay += getSafeTotal(patientDepositCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13801) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13802) // Generate Patient Deposit Refund and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13803)         List<BillTypeAtomic> patientDepositRefund = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13804)         patientDepositRefund.add(BillTypeAtomic.PATIENT_DEPOSIT_REFUND);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13805)         ReportTemplateRowBundle patientDepositRefundBundle = generatePaymentMethodColumnsByBills(patientDepositRefund);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13806)         patientDepositRefundBundle.setBundleType("PatientDepositRefund");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13807)         patientDepositRefundBundle.setName("Patient Deposit Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13808)         bundle.getBundles().add(patientDepositRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13809)         collectionForTheDay += getSafeTotal(patientDepositRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13810) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13811) // Generate Collecting Centre Payment Receive and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13812)         List<BillTypeAtomic> collectingCentrePaymentReceive = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13813)         collectingCentrePaymentReceive.add(BillTypeAtomic.CC_PAYMENT_RECEIVED_BILL);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13814)         ReportTemplateRowBundle collectingCentrePaymentReceiveBundle = generatePaymentMethodColumnsByBills(collectingCentrePaymentReceive);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13815)         collectingCentrePaymentReceiveBundle.setBundleType("CollectingCentrePaymentReceive");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13816)         collectingCentrePaymentReceiveBundle.setName("Collecting Centre Payment Receives");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13817)         bundle.getBundles().add(collectingCentrePaymentReceiveBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13818)         collectionForTheDay += getSafeTotal(collectingCentrePaymentReceiveBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13819) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13820) // Generate Collecting Centre Payment Cancel and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13821)         List<BillTypeAtomic> collectingCentrePaymentCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13822)         collectingCentrePaymentCancel.add(BillTypeAtomic.CC_PAYMENT_CANCELLATION_BILL);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13823)         ReportTemplateRowBundle collectingCentrePaymentCancelBundle = generatePaymentMethodColumnsByBills(collectingCentrePaymentCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13824)         collectingCentrePaymentCancelBundle.setBundleType("CollectingCentrePaymentCancel");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13825)         collectingCentrePaymentCancelBundle.setName("Collecting Centre Payment Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13826)         bundle.getBundles().add(collectingCentrePaymentCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13827)         collectionForTheDay += getSafeTotal(collectingCentrePaymentCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13828) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13829) // Generate OPD Credit, Cancellation, and Refund and add to the main bundle
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13830)         List<BillTypeAtomic> opdCredit = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13831)         opdCredit.add(BillTypeAtomic.OPD_CREDIT_COMPANY_PAYMENT_RECEIVED);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13832)         ReportTemplateRowBundle opdCreditBundle = generatePaymentMethodColumnsByBills(opdCredit);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13833)         opdCreditBundle.setBundleType("OpdCredit");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13834)         opdCreditBundle.setName("OPD Credit Payments");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13835)         bundle.getBundles().add(opdCreditBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13836)         collectionForTheDay += getSafeTotal(opdCreditBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13837) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13838)         List<BillTypeAtomic> opdCreditCancel = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13839)         opdCreditCancel.add(BillTypeAtomic.OPD_CREDIT_COMPANY_PAYMENT_CANCELLATION);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13840)         ReportTemplateRowBundle opdCreditCancelBundle = generatePaymentMethodColumnsByBills(opdCreditCancel);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13841)         opdCreditCancelBundle.setBundleType("OpdCreditCancelled");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13842)         opdCreditCancelBundle.setName("OPD Credit Cancellations");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13843)         bundle.getBundles().add(opdCreditCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13844)         collectionForTheDay += getSafeTotal(opdCreditCancelBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13845) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13846)         List<BillTypeAtomic> opdCreditRefund = new ArrayList<>();
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13847)         opdCreditRefund.add(BillTypeAtomic.OPD_CREDIT_COMPANY_CREDIT_NOTE);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13848)         ReportTemplateRowBundle opdCreditRefundBundle = generatePaymentMethodColumnsByBills(opdCreditRefund);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13849)         opdCreditRefundBundle.setBundleType("OpdCreditRefund");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13850)         opdCreditRefundBundle.setName("OPD Credit Refunds");
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13851)         bundle.getBundles().add(opdCreditRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13852)         collectionForTheDay += getSafeTotal(opdCreditRefundBundle);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13853) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13854) // Generate Pharmacy Credit Bills, Cancellation, and Refund and add to the main bundle
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13855)         List<BillTypeAtomic> pharmacyCreditBills = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13856)         pharmacyCreditBills.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_PAYMENT_RECEIVED);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13857)         ReportTemplateRowBundle pharmacyCreditBillsBundle = generatePaymentMethodColumnsByBills(pharmacyCreditBills);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13858)         pharmacyCreditBillsBundle.setBundleType("PharmacyCreditBills");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13859)         pharmacyCreditBillsBundle.setName("Pharmacy Credit Bills");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13860)         bundle.getBundles().add(pharmacyCreditBillsBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13861)         collectionForTheDay += getSafeTotal(pharmacyCreditBillsBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13862) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13863)         List<BillTypeAtomic> pharmacyCreditCancel = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13864)         pharmacyCreditCancel.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_PAYMENT_CANCELLATION);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13865)         ReportTemplateRowBundle pharmacyCreditCancelBundle = generatePaymentMethodColumnsByBills(pharmacyCreditCancel);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13866)         pharmacyCreditCancelBundle.setBundleType("PharmacyCreditCancel");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13867)         pharmacyCreditCancelBundle.setName("Pharmacy Credit Cancellations");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13868)         bundle.getBundles().add(pharmacyCreditCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13869)         collectionForTheDay += getSafeTotal(pharmacyCreditCancelBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13870) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13871)         List<BillTypeAtomic> pharmacyCreditRefund = new ArrayList<>();
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13872)         pharmacyCreditRefund.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_CREDIT_NOTE);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13873)         ReportTemplateRowBundle pharmacyCreditRefundBundle = generatePaymentMethodColumnsByBills(pharmacyCreditRefund);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13874)         pharmacyCreditRefundBundle.setBundleType("PharmacyCreditRefund");
cd149d8440d (Buddhika Ariyaratne  2024-09-30 03:09:55 +0530 13875)         pharmacyCreditRefundBundle.setName("Pharmacy Credit Refunds");
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13876)         bundle.getBundles().add(pharmacyCreditRefundBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13877)         collectionForTheDay += getSafeTotal(pharmacyCreditRefundBundle);
c9895adbafa (DamithDeshan         2024-10-20 20:10:39 +0530 13878) 
9aa9dc8a610 (Pubudu-Piyankara     2024-10-19 16:09:33 +0530 13879)         //Genarate Agency accept
9aa9dc8a610 (Pubudu-Piyankara     2024-10-19 16:09:33 +0530 13880)         List<BillTypeAtomic> agencyDeposit = new ArrayList<>();
9aa9dc8a610 (Pubudu-Piyankara     2024-10-19 16:09:33 +0530 13881)         agencyDeposit.add(BillTypeAtomic.AGENCY_PAYMENT_RECEIVED);
c9895adbafa (DamithDeshan         2024-10-20 20:10:39 +0530 13882)         ReportTemplateRowBundle agencyPaymentBundle = generatePaymentMethodColumnsByBills(agencyDeposit);
9aa9dc8a610 (Pubudu-Piyankara     2024-10-19 16:09:33 +0530 13883)         agencyPaymentBundle.setBundleType("AgencyDeposit");
9aa9dc8a610 (Pubudu-Piyankara     2024-10-19 16:09:33 +0530 13884)         agencyPaymentBundle.setName("Agency Accept Payments");
9aa9dc8a610 (Pubudu-Piyankara     2024-10-19 16:09:33 +0530 13885)         bundle.getBundles().add(agencyPaymentBundle);
9aa9dc8a610 (Pubudu-Piyankara     2024-10-19 16:09:33 +0530 13886)         collectionForTheDay += getSafeTotal(agencyPaymentBundle);
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13887) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13888)         // Final net cash for the day
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13889)         ReportTemplateRowBundle netCashForTheDayBundle = new ReportTemplateRowBundle();
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13890)         netCashForTheDayBundle.setName("Net Cash");
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13891)         netCashForTheDayBundle.setBundleType("netCash");
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 13892)         netCashForTheDayBundle.setTotal(netCashCollection);
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13893) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13894)         bundle.getBundles().add(netCashForTheDayBundle);
d3c939252d5 (Buddhika Ariyaratne  2024-11-04 05:25:27 +0530 13895)         bundle.calculateTotalsByAllChildBundles();
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13896) 
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13897)     }
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13898) 
1876480864d (Buddhika Ariyaratne  2024-09-30 02:40:26 +0530 13899)     public ReportTemplateRowBundle generatePaymentMethodColumnsByBills(List<BillTypeAtomic> bts) {
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13900)         return generatePaymentMethodColumnsByBills(bts, null);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13901)     }
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13902) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13903)     public ReportTemplateRowBundle generatePaymentMethodColumnsByBills(List<BillTypeAtomic> bts, List<PaymentMethod> billPaymentMethods) {
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13904)         Map<String, Object> parameters = new HashMap<>();
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13905)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow("
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13906)                 + "bill, "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13907)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cash THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13908)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Card THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13909)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.MultiplePaymentMethods THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13910)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13911)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Credit THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13912)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff_Welfare THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13913)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Voucher THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13914)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.IOU THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13915)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Agent THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13916)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cheque THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13917)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Slip THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13918)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.ewallet THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13919)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientDeposit THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13920)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientPoints THEN p.paidValue ELSE 0 END), "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13921)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.OnlineSettlement THEN p.paidValue ELSE 0 END)) "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13922)                 + "FROM Payment p "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13923)                 + "JOIN p.bill bill "
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13924)                 + "WHERE p.retired <> :bfr AND bill.retired <> :br ";
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13925) 
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13926)         parameters.put("bfr", true);
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13927)         parameters.put("br", true);
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13928) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13929)         jpql += "AND bill.billTypeAtomic in :bts ";
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13930)         parameters.put("bts", bts);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13931) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13932)         if (institution != null) {
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13933)             jpql += "AND bill.department.institution = :ins ";
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13934)             parameters.put("ins", institution);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13935)         }
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13936) 
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13937)         if (billPaymentMethods != null) {
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13938)             jpql += "AND bill.paymentMethod in :bpms ";
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13939)             parameters.put("bpms", billPaymentMethods);
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13940)         }
c806b573f62 (Buddhika Ariyaratne  2024-10-02 05:26:22 +0530 13941) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13942)         if (department != null) {
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13943)             jpql += "AND bill.department = :dep ";
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13944)             parameters.put("dep", department);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13945)         }
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13946)         if (site != null) {
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13947)             jpql += "AND bill.department.site = :site ";
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13948)             parameters.put("site", site);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13949)         }
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13950)         if (webUser != null) {
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13951)             jpql += "AND p.creater = :wu ";
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13952)             parameters.put("wu", webUser);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13953)         }
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13954) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13955)         jpql += "AND p.createdAt BETWEEN :fd AND :td ";
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13956)         parameters.put("fd", fromDate);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13957)         parameters.put("td", toDate);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13958) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13959)         jpql += "GROUP BY bill";
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13960) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13961)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13962) 
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13963)         ReportTemplateRowBundle b = new ReportTemplateRowBundle();
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13964)         b.setReportTemplateRows(rs);
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13965)         b.createRowValuesFromBill();
8e1a732c7dc (Dr M H B Ariyaratne  2024-11-04 12:58:26 +0530 13966)         b.calculateTotalsWithCredit();
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13967)         return b;
9d8c4765825 (Buddhika Ariyaratne  2024-09-29 18:20:42 +0530 13968)     }
9d50c8b7579 (Buddhika Ariyaratne  2024-09-29 18:31:53 +0530 13969) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13970)     public ReportTemplateRowBundle generateBillItems(List<BillTypeAtomic> bts, List<PaymentMethod> billPaymentMethods) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13971)         Map<String, Object> parameters = new HashMap<>();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13972)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow(billItem) "
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13973)                 + "FROM BillItem billItem "
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13974)                 + "JOIN billItem.bill bill "
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13975)                 + "WHERE billItem.retired <> :bfr AND bill.retired <> :br ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13976) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13977)         parameters.put("bfr", true);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13978)         parameters.put("br", true);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13979) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13980)         jpql += "AND bill.billTypeAtomic in :bts ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13981)         parameters.put("bts", bts);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13982) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13983)         if (institution != null) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13984)             jpql += "AND bill.department.institution = :ins ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13985)             parameters.put("ins", institution);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13986)         }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13987) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13988)         if (billPaymentMethods != null) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13989)             jpql += "AND bill.paymentMethod in :bpms ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13990)             parameters.put("bpms", billPaymentMethods);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13991)         }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13992) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13993)         if (department != null) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13994)             jpql += "AND bill.department = :dep ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13995)             parameters.put("dep", department);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13996)         }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13997)         if (site != null) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13998)             jpql += "AND bill.department.site = :site ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 13999)             parameters.put("site", site);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14000)         }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14001)         if (webUser != null) {
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14002)             jpql += "AND bill.creater = :wu ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14003)             parameters.put("wu", webUser);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14004)         }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14005) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14006)         jpql += "AND bill.createdAt BETWEEN :fd AND :td ";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14007)         parameters.put("fd", fromDate);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14008)         parameters.put("td", toDate);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14009) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14010)         jpql += "GROUP BY billItem";
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14011) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14012)         System.out.println("jpql = " + jpql);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14013)         System.out.println("parameters = " + parameters);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14014) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14015)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14016) 
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14017)         ReportTemplateRowBundle b = new ReportTemplateRowBundle();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14018)         b.setReportTemplateRows(rs);
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14019)         b.createRowValuesFromBillItems();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14020)         b.calculateTotalsWithCredit();
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14021)         return b;
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14022)     }
6a3907eebac (Dr M H B Ariyaratne  2024-11-18 23:38:20 +0530 14023) 
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 14024)     private double getSafeTotal(ReportTemplateRowBundle bundle) {
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 14025)         return bundle != null && bundle.getTotal() != null ? bundle.getTotal() : 0.0;
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 14026)     }
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 14027) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14028)     public ReportTemplateRowBundle generateOpdServiceByBillItems() {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14029)         ReportTemplateRowBundle biBundle = new ReportTemplateRowBundle();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14030)         String jpql = "select bi "
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14031)                 + " from BillItem bi "
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14032)                 + " where bi.bill.retired=:br "
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14033)                 + " and bi.bill.createdAt between :fd and :td ";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14034)         Map m = new HashMap();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14035)         m.put("br", false);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14036)         m.put("fd", fromDate);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14037)         m.put("td", toDate);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14038)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14039)         biBundle.setDescription("Bill Types Listed: " + btas);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14040)         if (!btas.isEmpty()) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14041)             jpql += " and bi.bill.billTypeAtomic in :bts ";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14042)             m.put("bts", btas);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14043)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14044)         if (category != null) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14045)             jpql += " and bi.item.category.id=:catId ";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14046)             m.put("catId", category.getId());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14047)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14048)         if (item != null) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14049)             jpql += " and bi.item.id=:itemId ";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14050)             m.put("itemId", item.getId());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14051)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14052) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14053)         if (department != null) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14054)             jpql += " and bi.bill.department=:dep ";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14055)             m.put("dep", department);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14056)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14057)         if (institution != null) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14058)             jpql += " and bi.bill.department.institution=:ins ";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14059)             m.put("ins", institution);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14060)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14061)         if (site != null) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14062)             jpql += " and bi.bill.department.site=:site ";
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14063)             m.put("site", site);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14064)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14065) //        System.out.println("btas = " + btas);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14066) //        System.out.println("m = " + m);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14067) //        System.out.println("jpql = " + jpql);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14068)         List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14069) //        System.out.println("bis = " + bis);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14070)         biBundle = billItemsToBundleForOpd(biBundle, bis);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14071) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14072)         biBundle.setName("OPD Service Collection");
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14073)         biBundle.setBundleType("opdServiceCollection");
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14074)         return biBundle;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14075)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 14076) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14077)     public ReportTemplateRowBundle generateItemizedSalesSummary() {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14078)         ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14079)         String jpql = "select bi "
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14080)                 + " from BillItem bi "
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14081)                 + " where bi.bill.retired=:br "
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14082)                 + " and bi.bill.createdAt between :fd and :td ";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14083)         Map m = new HashMap();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14084)         m.put("br", false);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14085)         m.put("fd", fromDate);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14086)         m.put("td", toDate);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14087)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14088)         oiBundle.setDescription("Bill Types Listed: " + btas);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14089)         if (!btas.isEmpty()) {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14090)             jpql += " and bi.bill.billTypeAtomic in :bts ";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14091)             m.put("bts", btas);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14092)         }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14093) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14094)         if (department != null) {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14095)             jpql += " and bi.bill.department=:dep ";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14096)             m.put("dep", department);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14097)         }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14098)         if (institution != null) {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14099)             jpql += " and bi.bill.department.institution=:ins ";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14100)             m.put("ins", institution);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14101)         }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14102)         if (site != null) {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14103)             jpql += " and bi.bill.department.site=:site ";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14104)             m.put("site", site);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14105)         }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14106)         if (category != null) {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14107)             jpql += " and bi.item.category=:cat ";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14108)             m.put("cat", category);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14109)         }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14110)         if (item != null) {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14111)             jpql += " and bi.item=:item ";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14112)             m.put("item", item);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14113)         }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14114)         System.out.println("jpql = " + jpql);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14115)         System.out.println("m = " + m);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14116)         List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14117)         billItemsToItamizedSaleSummary(oiBundle, bis);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14118) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14119)         oiBundle.setName("Itemized Sales Summary");
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14120)         oiBundle.setBundleType("itemized_sales_summary");
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14121) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14122)         oiBundle.getReportTemplateRows().stream()
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14123)                 .forEach(rtr -> {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14124)                     rtr.setInstitution(institution);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14125)                     rtr.setDepartment(department);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14126)                     rtr.setSite(site);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14127)                     rtr.setFromDate(fromDate);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14128)                     rtr.setToDate(toDate);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14129)                 });
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14130) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14131)         return oiBundle;
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 14132)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 14133) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14134)     public void billItemsToItamizedSaleSummary(ReportTemplateRowBundle rtrb, List<BillItem> billItems) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14135)         Map<String, ReportTemplateRow> categoryMap = new HashMap<>();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14136)         Map<String, ReportTemplateRow> itemMap = new HashMap<>();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14137)         List<ReportTemplateRow> rowsToAdd = new ArrayList<>();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14138)         double totalOpdServiceCollection = 0.0;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14139)         for (BillItem bi : billItems) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14140)             System.out.println("Processing BillItem: " + bi);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14141) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14142)             if (bi.getBill() == null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14143)                 continue;
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530 14144)             }
870a8bb9e76 (Buddhika Ariyaratne  2024-10-05 10:32:11 +0530 14145) //            else if (bi.getBill().getPaymentMethod() == null) {
870a8bb9e76 (Buddhika Ariyaratne  2024-10-05 10:32:11 +0530 14146) //                continue;
870a8bb9e76 (Buddhika Ariyaratne  2024-10-05 10:32:11 +0530 14147) //            } else if (bi.getBill().getPaymentMethod().getPaymentType() == PaymentType.NONE) {
870a8bb9e76 (Buddhika Ariyaratne  2024-10-05 10:32:11 +0530 14148) //                continue;
870a8bb9e76 (Buddhika Ariyaratne  2024-10-05 10:32:11 +0530 14149) //            }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14150) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14151)             String categoryName = bi.getItem() != null && bi.getItem().getCategory() != null ? bi.getItem().getCategory().getName() : "No Category";
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14152)             String itemName = bi.getItem() != null ? bi.getItem().getName() : "No Item";
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14153)             String itemKey = categoryName + "->" + itemName;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14154) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14155)             System.out.println("Item Key: " + itemKey);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14156)             System.out.println("Category: " + categoryName + ", Item: " + itemName);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14157) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14158)             categoryMap.putIfAbsent(categoryName, new ReportTemplateRow());
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14159)             itemMap.putIfAbsent(itemKey, new ReportTemplateRow());
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14160) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14161)             ReportTemplateRow categoryRow = categoryMap.get(categoryName);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14162)             ReportTemplateRow itemRow = itemMap.get(itemKey);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14163) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14164)             if (bi.getItem() != null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14165)                 categoryRow.setCategory(bi.getItem().getCategory());
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14166)                 itemRow.setItem(bi.getItem());
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14167)             }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14168) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14169)             long countModifier = 1;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14170)             double grossValue = bi.getGrossValue();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14171)             double hospitalFee = bi.getHospitalFee();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14172)             double discount = bi.getDiscount();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14173)             double staffFee = bi.getStaffFee();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14174)             double netValue = bi.getNetValue();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14175) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14176)             switch (bi.getBill().getBillClassType()) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14177)                 case CancelledBill:
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14178)                 case RefundBill:
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14179)                     countModifier = -1;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14180)                     // Apply abs to ensure all values are positive before negating
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14181)                     grossValue = -Math.abs(grossValue);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14182)                     hospitalFee = -Math.abs(hospitalFee);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14183)                     discount = -Math.abs(discount);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14184)                     staffFee = -Math.abs(staffFee);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14185)                     netValue = -Math.abs(netValue);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14186)                     break;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14187)                 case BilledBill:
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14188)                 case Bill:
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14189)                     // Positive adjustments, no need to change the sign or apply abs
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14190)                     break;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14191)                 default:
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14192)                     // Do nothing for other types of bills
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14193)                     continue;  // Skip processing for unrecognized or unhandled bill types
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14194)             }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14195)             totalOpdServiceCollection += netValue;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14196)             System.out.println("hospitalFee = " + hospitalFee);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14197)             updateRow(categoryRow, countModifier, grossValue, hospitalFee, discount, staffFee, netValue);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14198)             updateRow(itemRow, countModifier, grossValue, hospitalFee, discount, staffFee, netValue);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14199)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14200) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14201)         // Only add rows that are properly initialized and grouped
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14202)         categoryMap.forEach((categoryName, catRow) -> {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14203)             System.out.println("Adding category row to bundle: " + categoryName);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14204)             rowsToAdd.add(catRow);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14205)             itemMap.values().stream()
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14206)                     .filter(iRow -> iRow.getItem() != null && iRow.getItem().getCategory() != null && iRow.getItem().getCategory().getName().equals(categoryName))
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14207)                     .forEach(iRow -> {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14208)                         System.out.println("Adding item row to bundle under category " + categoryName + ": " + iRow.getItem().getName());
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14209)                         rowsToAdd.add(iRow);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14210)                     });
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14211)         });
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14212) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14213)         System.out.println("rowsToAdd = " + rowsToAdd);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14214)         System.out.println("rtrb.getReportTemplateRows() = " + rtrb.getReportTemplateRows());
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14215)         rtrb.getReportTemplateRows().addAll(rowsToAdd);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14216)         rtrb.setTotal(totalOpdServiceCollection);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14217)     }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14218) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14219)     public ReportTemplateRowBundle generateIncomeBreakdownByCategory() {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 14220)         ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14221) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14222)         // Prepare parameters
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14223)         Map<String, Object> mOP = new HashMap<>();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14224)         Map<String, Object> mIP = new HashMap<>();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14225)         mOP.put("br", false);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14226)         mOP.put("fd", fromDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14227)         mOP.put("td", toDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14228)         mIP.putAll(mOP);
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14229) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14230)         // Prepare BillTypeAtomic lists
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14231)         List<BillTypeAtomic> obtas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14232)         List<BillTypeAtomic> ibtas = BillTypeAtomic.findByServiceType(ServiceType.INWARD_SERVICE);
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14233) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14234)         List<BillTypeAtomic> btasOP = new ArrayList<>();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14235)         List<BillTypeAtomic> btasIP = new ArrayList<>();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14236) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14237)         if (visitType != null) {
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14238)             switch (visitType) {
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14239)                 case "Any":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14240)                     btasOP.addAll(obtas);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14241)                     btasIP.addAll(ibtas);
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14242)                     break;
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14243)                 case "OP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14244)                     btasOP.addAll(obtas);
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14245)                     break;
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14246)                 case "IP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14247)                     btasIP.addAll(ibtas);
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14248)                     break;
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14249)                 default:
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14250)                     break;
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14251)             }
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14252)         }
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14253) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14254)         // Prepare payment methods
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530 14255)         List<PaymentMethod> creditPaymentMethods = enumController.getPaymentTypeOfPaymentMethods(PaymentType.CREDIT);
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530 14256)         List<PaymentMethod> nonCreditPaymentMethods = enumController.getPaymentTypeOfPaymentMethods(PaymentType.NON_CREDIT);
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14257) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14258)         // Initialize lists to hold BillItems
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14259)         List<BillItem> bisOP = new ArrayList<>();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14260)         List<BillItem> bisIP = new ArrayList<>();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14261) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14262)         // Fetch OP Bills if applicable
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14263)         if (!btasOP.isEmpty()) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14264)             String jpqlOP = "select bi "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14265)                     + " from BillItem bi "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14266)                     + " where bi.bill.retired=:br "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14267)                     + " and bi.bill.createdAt between :fd and :td "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14268)                     + " and bi.bill.patientEncounter is null "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14269)                     + " and bi.bill.billTypeAtomic in :bts ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14270) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14271)             mOP.put("bts", btasOP);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14272) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14273)             // Apply payment method filter for OP bills
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14274)             if (!"Any".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14275)                 if ("Credit".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14276)                     jpqlOP += " and bi.bill.paymentMethod in :pm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14277)                     mOP.put("pm", creditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14278)                 } else if ("NonCredit".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14279)                     jpqlOP += " and bi.bill.paymentMethod in :pm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14280)                     mOP.put("pm", nonCreditPaymentMethods);
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530 14281)                 }
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530 14282)             }
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530 14283) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14284)             // Additional filters
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14285)             if (department != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14286)                 jpqlOP += " and bi.bill.department=:dep ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14287)                 mOP.put("dep", department);
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530 14288)             }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14289)             if (institution != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14290)                 jpqlOP += " and bi.bill.department.institution=:ins ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14291)                 mOP.put("ins", institution);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14292)             }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14293)             if (site != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14294)                 jpqlOP += " and bi.bill.department.site=:site ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14295)                 mOP.put("site", site);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14296)             }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14297)             if (category != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14298)                 jpqlOP += " and bi.item.category=:cat ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14299)                 mOP.put("cat", category);
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 14300)             }
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14301) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14302)             System.out.println("OP JPQL: " + jpqlOP);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14303)             System.out.println("OP Params: " + mOP);
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14304) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14305)             // Fetch OP BillItems
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14306)             bisOP = billItemFacade.findByJpql(jpqlOP, mOP, TemporalType.TIMESTAMP);
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14307)         }
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 14308) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14309)         // Fetch IP Bills if applicable
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14310)         if (!btasIP.isEmpty()) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14311)             String jpqlIP = "select bi "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14312)                     + " from BillItem bi "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14313)                     + " where bi.bill.retired=:br "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14314)                     + " and bi.bill.createdAt between :fd and :td "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14315)                     + " and bi.bill.patientEncounter is not null "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14316)                     + " and bi.bill.billTypeAtomic in :bts ";
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14317) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14318)             mIP.put("bts", btasIP);
d6916a86f97 (Dr M H B Ariyaratne  2024-11-04 12:09:31 +0530 14319) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14320)             // Apply payment method filter for IP bills
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14321)             if (!"Any".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14322)                 if ("Credit".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14323)                     jpqlIP += " and bi.bill.patientEncounter.paymentMethod in :pm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14324)                     mIP.put("pm", creditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14325)                 } else if ("NonCredit".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14326)                     jpqlIP += " and bi.bill.patientEncounter.paymentMethod in :pm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14327)                     mIP.put("pm", nonCreditPaymentMethods);
50f9b4cbd82 (DamithDeshan         2024-11-13 14:38:16 +0530 14328)                 }
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14329)             }
50f9b4cbd82 (DamithDeshan         2024-11-13 14:38:16 +0530 14330) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14331)             // Additional filters
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14332)             if (department != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14333)                 jpqlIP += " and bi.bill.department=:dep ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14334)                 mIP.put("dep", department);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14335)             }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14336)             if (institution != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14337)                 jpqlIP += " and bi.bill.department.institution=:ins ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14338)                 mIP.put("ins", institution);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14339)             }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14340)             if (site != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14341)                 jpqlIP += " and bi.bill.department.site=:site ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14342)                 mIP.put("site", site);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14343)             }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14344)             if (category != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14345)                 jpqlIP += " and bi.item.category=:cat ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14346)                 mIP.put("cat", category);
50f9b4cbd82 (DamithDeshan         2024-11-13 14:38:16 +0530 14347)             }
50f9b4cbd82 (DamithDeshan         2024-11-13 14:38:16 +0530 14348) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14349)             System.out.println("IP JPQL: " + jpqlIP);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14350)             System.out.println("IP Params: " + mIP);
c9e2ce084a4 (DamithDeshan         2024-11-03 11:02:32 +0530 14351) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14352)             // Fetch IP BillItems
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14353)             bisIP = billItemFacade.findByJpql(jpqlIP, mIP, TemporalType.TIMESTAMP);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14354)         }
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14355) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14356)         // Combine OP and IP BillItems
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14357)         List<BillItem> bis = new ArrayList<>();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14358)         bis.addAll(bisOP);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14359)         bis.addAll(bisIP);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14360) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14361)         System.out.println("Total BillItems: " + bis.size());
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14362) 
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14363)         // Debug: Print payment methods of the fetched BillItems
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14364)         for (BillItem bi : bis) {
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14365)             System.out.println("BillItem ID: " + bi.getId());
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14366)             System.out.println("Bill PaymentMethod: " + bi.getBill().getPaymentMethod());
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14367)             if (bi.getBill().getPatientEncounter() != null) {
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14368)                 System.out.println("PatientEncounter PaymentMethod: " + bi.getBill().getPatientEncounter().getPaymentMethod());
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14369)             } else {
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14370)                 System.out.println("No PatientEncounter");
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14371)             }
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14372)         }
861dc48cc7d (Buddhika Ariyaratne  2024-11-04 03:32:23 +0530 14373) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14374)         // Process the combined BillItems
50f9b4cbd82 (DamithDeshan         2024-11-13 14:38:16 +0530 14375)         summarizeBillItemsToIncomeByCategory(oiBundle, bis);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14376) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14377)         // Set report details
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14378)         oiBundle.setName("Income Breakdown By Category - With Professional Fee");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14379)         oiBundle.setBundleType("income_breakdown_by_category_with_professional_fee");
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14380) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14381)         oiBundle.getReportTemplateRows().forEach(rtr -> {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14382)             rtr.setInstitution(institution);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14383)             rtr.setDepartment(department);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14384)             rtr.setSite(site);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14385)             rtr.setFromDate(fromDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14386)             rtr.setToDate(toDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14387)         });
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14388) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14389)         return oiBundle;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14390)     }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 14391) 
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14392) //    public ReportTemplateRowBundle generateIncomeBreakdownByCategoryWithOutProfessionalFee() {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14393) //        ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14394) //        String jpql = "select bi "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14395) //                + " from BillItem bi "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14396) //                + " where bi.bill.retired=:br "
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14397) //                + " and bi.bill.createdAt between :fd and :td ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14398) //        Map m = new HashMap();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14399) //        m.put("br", false);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14400) //        m.put("fd", fromDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14401) //        m.put("td", toDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14402) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14403) //        List<BillTypeAtomic> btas = new ArrayList();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14404) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14405) //        List<BillTypeAtomic> obtas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14406) //        List<BillTypeAtomic> ibtas = BillTypeAtomic.findByServiceType(ServiceType.INWARD);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14407) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14408) //        if (null != visitType) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14409) //            switch (visitType) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14410) //                case "Any":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14411) //                    System.out.println("Any");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14412) //                    btas.addAll(obtas);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14413) //                    btas.addAll(ibtas);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14414) //                    break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14415) //                case "OP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14416) //                    System.out.println("OPD");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14417) //                    btas.addAll(obtas);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14418) //                    break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14419) //                case "IP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14420) //                    System.out.println("IP");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14421) //                    btas.addAll(ibtas);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14422) //                    break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14423) //                default:
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14424) //                    break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14425) //            }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14426) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14427) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14428) //        oiBundle.setDescription("Bill Types Listed: " + btas.size());
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14429) //        if (!btas.isEmpty()) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14430) //            jpql += " and bi.bill.billTypeAtomic in :bts ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14431) //            m.put("bts", btas);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14432) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14433) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14434) //        List<PaymentMethod> creditPaymentMethods = enumController.getPaymentTypeOfPaymentMethods(PaymentType.CREDIT);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14435) //        List<PaymentMethod> nonCreditPaymentMethods = enumController.getPaymentTypeOfPaymentMethods(PaymentType.NON_CREDIT);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14436) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14437) //        List<PaymentMethod> allMethods = new ArrayDeque();
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14438) //        allMethods.addAll(creditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14439) //        allMethods.addAll(nonCreditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14440) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14441) //        System.out.println("methodType = " + methodType);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14442) //        System.out.println("visitType = " + visitType);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14443) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14444) //        if ("Any".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14445) //            System.out.println("Any");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14446) //        } else if ("Credit".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14447) //            System.out.println("Credit");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14448) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14449) //            if (null != visitType) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14450) //                switch (visitType) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14451) //                    case "Any":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14452) //                        System.out.println("Credit Any");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14453) //                        jpql += " AND (bi.bill.paymentMethod in :cpm OR bi.bill.patientEncounter.paymentMethod in :cpm)";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14454) //                        m.put("cpm", creditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14455) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14456) //                    case "OP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14457) //                        System.out.println("Credit OP");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14458) //                        jpql += " AND bi.bill.paymentMethod in :cpm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14459) //                        m.put("cpm", creditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14460) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14461) //                    case "IP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14462) //                        System.out.println("Credit IP");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14463) //                        jpql += " AND bi.bill.patientEncounter.paymentMethod in :cpm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14464) //                        m.put("cpm", creditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14465) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14466) //                    default:
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14467) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14468) //                }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14469) //            }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14470) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14471) //        } else if ("NonCredit".equals(methodType)) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14472) //            System.out.println("Non Credit");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14473) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14474) //            if (null != visitType) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14475) //                switch (visitType) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14476) //                    case "Any":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14477) //                        System.out.println("NonCredit Any");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14478) //                        jpql += " AND (bi.bill.paymentMethod in :ncpm OR bi.bill.patientEncounter.paymentMethod in :ncpm)";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14479) //                        m.put("ncpm", nonCreditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14480) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14481) //                    case "OP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14482) //                        System.out.println("NonCredit OP");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14483) //                        jpql += " AND bi.bill.paymentMethod in :ncpm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14484) //                        m.put("ncpm", nonCreditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14485) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14486) //                    case "IP":
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14487) //                        System.out.println("NonCredit IP");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14488) //                        jpql += " AND bi.bill.patientEncounter.paymentMethod in :ncpm ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14489) //                        m.put("ncpm", nonCreditPaymentMethods);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14490) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14491) //                    default:
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14492) //                        break;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14493) //                }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14494) //            }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14495) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14496) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14497) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14498) //        if (department != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14499) //            jpql += " and bi.bill.department=:dep ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14500) //            m.put("dep", department);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14501) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14502) //        if (institution != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14503) //            jpql += " and bi.bill.department.institution=:ins ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14504) //            m.put("ins", institution);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14505) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14506) //        if (site != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14507) //            jpql += " and bi.bill.department.site=:site ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14508) //            m.put("site", site);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14509) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14510) //        if (category != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14511) //            jpql += " and bi.item.category=:cat ";
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14512) //            m.put("cat", category);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14513) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14514) //        System.out.println("jpql = " + jpql);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14515) //        System.out.println("m = " + m);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14516) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14517) //        List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14518) //        System.out.println("bis = " + bis);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14519) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14520) //        // Debug: Print payment methods of the fetched BillItems
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14521) //        for (BillItem bi : bis) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14522) //            System.out.println("BillItem ID: " + bi.getId());
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14523) //            System.out.println("Bill PaymentMethod: " + bi.getBill().getPaymentMethod());
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14524) //            if (bi.getBill().getPatientEncounter() != null) {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14525) //                System.out.println("PatientEncounter PaymentMethod: " + bi.getBill().getPatientEncounter().getPaymentMethod());
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14526) //            } else {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14527) //                System.out.println("No PatientEncounter");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14528) //            }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14529) //        }
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14530) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14531) //        summarizeBillItemsToIncomeByCategory(oiBundle, bis);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14532) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14533) //        oiBundle.setName("Income Breakdown By Category - Without Professional Fee");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14534) //        oiBundle.setBundleType("income_breakdown_by_category_with_out_professional_fee");
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14535) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14536) //        oiBundle.getReportTemplateRows().stream()
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14537) //                .forEach(rtr -> {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14538) //                    rtr.setInstitution(institution);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14539) //                    rtr.setDepartment(department);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14540) //                    rtr.setSite(site);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14541) //                    rtr.setFromDate(fromDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14542) //                    rtr.setToDate(toDate);
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14543) //                });
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14544) //
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14545) //        return oiBundle;
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 14546) //    }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14547)     public ReportTemplateRowBundle generateOpdProfessionalFees(String paymentStatusStr) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14548)         PaymentStatus paymentStatus = PaymentStatus.ALL;
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14549)         if (paymentStatusStr != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14550)             try {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14551)                 paymentStatus = PaymentStatus.valueOf(paymentStatusStr.toUpperCase());
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14552)             } catch (IllegalArgumentException e) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14553)                 // Handle invalid payment status
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14554)                 System.out.println("Invalid payment status: " + paymentStatusStr);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14555)                 // Default to ALL or handle as per your requirement
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14556)             }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14557)         }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14558) 
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14559)         bundle = new ReportTemplateRowBundle();
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14560)         String jpql = "select bf "
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14561)                 + " from BillFee bf "
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14562)                 + " join bf.billItem bi "
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14563)                 + " where bf.retired=:bfr "
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14564)                 + " and bi.bill.retired=:br "
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14565)                 + " and bf.fee.feeType=:ft "
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14566)                 + " and bi.bill.createdAt between :fd and :td ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14567) 
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14568)         Map<String, Object> m = new HashMap<>();
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14569)         m.put("br", false);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14570)         m.put("bfr", false);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14571)         m.put("fd", fromDate);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14572)         m.put("ft", FeeType.Staff);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14573)         m.put("td", toDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14574) 
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14575)         // Add payment status condition
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14576)         if (paymentStatus == PaymentStatus.DUE) {
80e60b59627 (Buddhika             2024-10-22 09:31:59 +0530 14577)             jpql += " and (bf.paidValue IS NULL OR bf.paidValue = 0) "
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14578)                     + " and bi.bill.cancelled = :can "
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14579)                     + " and bi.refunded = :refu";
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14580)             m.put("can", false);
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14581)             m.put("refu", false);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14582)         } else if (paymentStatus == PaymentStatus.DONE) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14583)             jpql += " and bf.paidValue > 0 ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14584)         }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14585)         // If paymentStatus is ALL, no additional condition is added
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14586) 
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14587)         // Add other conditions based on your filters
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14588)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14589)         bundle.setDescription("Bill Types Listed: " + btas);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14590)         if (!btas.isEmpty()) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14591)             jpql += " and bi.bill.billTypeAtomic in :bts ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14592)             m.put("bts", btas);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14593)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14594) 
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14595)         if (department != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14596)             jpql += " and bi.bill.department=:dep ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14597)             m.put("dep", department);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14598)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14599)         if (institution != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14600)             jpql += " and bi.bill.department.institution=:ins ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14601)             m.put("ins", institution);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14602)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14603)         if (site != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14604)             jpql += " and bi.bill.department.site=:site ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14605)             m.put("site", site);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14606)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14607)         if (category != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14608)             jpql += " and bi.item.category=:cat ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14609)             m.put("cat", category);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14610)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14611)         if (item != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14612)             jpql += " and bi.item=:item ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14613)             m.put("item", item);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14614)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14615)         if (speciality != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14616)             jpql += " and bf.speciality=:speciality ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14617)             m.put("speciality", speciality);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14618)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14619)         if (staff != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14620)             jpql += " and bf.staff=:staff ";
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14621)             m.put("staff", staff);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14622)         }
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14623)         if (mrnNo != null && !mrnNo.isEmpty()) {
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14624)             jpql += " and UPPER(bi.bill.patient.phn) LIKE :phn ";
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14625)             m.put("phn", "%" + mrnNo.toUpperCase() + "%");
6c4fa87bc3f (Buddhika             2024-10-22 12:04:24 +0530 14626)         }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14627) 
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14628)         System.out.println("jpql = " + jpql);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14629)         System.out.println("m = " + m);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14630) 
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14631)         List<BillFee> bifs = billFeeFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14632)         System.out.println("bifs = " + bifs);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14633) 
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14634)         if (bifs != null) {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14635)             for (BillFee bf : bifs) {
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 14636)                 ReportTemplateRow r = new ReportTemplateRow(bf);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14637)                 bundle.getReportTemplateRows().add(r);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14638)             }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14639)         }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14640)         bundle.setName("Professional Fees");
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14641)         bundle.setBundleType("professional_fees");
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14642) 
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14643)         bundle.getReportTemplateRows().stream()
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14644)                 .forEach(rtr -> {
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14645)                     rtr.setInstitution(institution);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14646)                     rtr.setDepartment(department);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14647)                     rtr.setSite(site);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14648)                     rtr.setFromDate(fromDate);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14649)                     rtr.setToDate(toDate);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14650)                     rtr.setStaff(staff);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14651)                     rtr.setSpeciality(speciality);
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14652)                 });
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14653) 
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14654)         bundle.calculateTotalsForProfessionalFees();
13baad2d06b (Buddhika Ariyaratne  2024-10-07 03:33:11 +0530 14655) 
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14656)         return bundle;
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14657)     }
1301428cd6b (Buddhika Ariyaratne  2024-09-13 13:56:45 +0530 14658) 
6ae21ce0424 (imexh                2024-11-19 11:14:47 +0530 14659)     //    @Deprecated
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14660) //    public ReportTemplateRowBundle generateOpdProfessionalFeesDue() {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14661) //        ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14662) //        String jpql = "select bf "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14663) //                + " from BillFee bf "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14664) //                + " join bf.billItem bi "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14665) //                + " where bf.retired=:bfr "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14666) //                + " and bi.bill.retired=:br "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14667) //                + " and bf.fee.feeType=:ft "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14668) //                + " and bf.paidValue < 1.0 "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14669) //                + " and bi.bill.createdAt between :fd and :td ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14670) //        Map m = new HashMap();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14671) //        m.put("br", false);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14672) //        m.put("bfr", false);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14673) //        m.put("fd", fromDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14674) //        m.put("ft", FeeType.Staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14675) //        m.put("td", toDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14676) //        List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14677) //        oiBundle.setDescription("Bill Types Listed: " + btas);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14678) //        if (!btas.isEmpty()) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14679) //            jpql += " and bi.bill.billTypeAtomic in :bts ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14680) //            m.put("bts", btas);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14681) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14682) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14683) //        if (department != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14684) //            jpql += " and bi.bill.department=:dep ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14685) //            m.put("dep", department);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14686) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14687) //        if (institution != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14688) //            jpql += " and bi.bill.department.institution=:ins ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14689) //            m.put("ins", institution);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14690) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14691) //        if (site != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14692) //            jpql += " and bi.bill.department.site=:site ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14693) //            m.put("site", site);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14694) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14695) //        if (category != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14696) //            jpql += " and bi.item.category=:cat ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14697) //            m.put("cat", category);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14698) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14699) //        if (item != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14700) //            jpql += " and bi.item=:item ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14701) //            m.put("item", item);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14702) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14703) //        if (speciality != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14704) //            jpql += " and bf.speciality=:speciality ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14705) //            m.put("speciality", speciality);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14706) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14707) //        if (staff != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14708) //            jpql += " and bf.staff=:staff ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14709) //            m.put("staff", staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14710) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14711) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14712) //        System.out.println("jpql = " + jpql);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14713) //        System.out.println("m = " + m);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14714) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14715) //        List<BillFee> bifs = billFeeFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14716) //        System.out.println("bifs = " + bifs);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14717) //        if (bifs != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14718) //            for (BillFee bf : bifs) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14719) //                ReportTemplateRow r = new ReportTemplateRow(bf);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14720) //                oiBundle.getReportTemplateRows().add(r);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14721) //            }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14722) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14723) //        oiBundle.setName("Professional Fees");
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14724) //        oiBundle.setBundleType("professional_fees");
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14725) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14726) //        oiBundle.getReportTemplateRows().stream()
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14727) //                .forEach(rtr -> {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14728) //                    rtr.setInstitution(institution);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14729) //                    rtr.setDepartment(department);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14730) //                    rtr.setSite(site);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14731) //                    rtr.setFromDate(fromDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14732) //                    rtr.setToDate(toDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14733) //                    rtr.setStaff(staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14734) //                    rtr.setSpeciality(speciality);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14735) //                });
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14736) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14737) //        oiBundle.calculateTotalsForProfessionalFees();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14738) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14739) //        return oiBundle;
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14740) //    }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14741) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14742) //    @Deprecated
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14743) //    public ReportTemplateRowBundle generateOpdProfessionalFeesDone() {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14744) //        ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14745) //        String jpql = "select bf "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14746) //                + " from BillFee bf "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14747) //                + " join bf.billItem bi "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14748) //                + " where bf.retired=:bfr "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14749) //                + " and bi.bill.retired=:br "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14750) //                + " and bf.fee.feeType=:ft "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14751) //                + " and bf.paidValue > 1.0 "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14752) //                + " and bi.bill.createdAt between :fd and :td ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14753) //        Map m = new HashMap();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14754) //        m.put("br", false);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14755) //        m.put("bfr", false);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14756) //        m.put("fd", fromDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14757) //        m.put("ft", FeeType.Staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14758) //        m.put("td", toDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14759) //        List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14760) //        oiBundle.setDescription("Bill Types Listed: " + btas);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14761) //        if (!btas.isEmpty()) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14762) //            jpql += " and bi.bill.billTypeAtomic in :bts ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14763) //            m.put("bts", btas);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14764) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14765) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14766) //        if (department != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14767) //            jpql += " and bi.bill.department=:dep ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14768) //            m.put("dep", department);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14769) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14770) //        if (institution != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14771) //            jpql += " and bi.bill.department.institution=:ins ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14772) //            m.put("ins", institution);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14773) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14774) //        if (site != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14775) //            jpql += " and bi.bill.department.site=:site ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14776) //            m.put("site", site);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14777) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14778) //        if (category != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14779) //            jpql += " and bi.item.category=:cat ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14780) //            m.put("cat", category);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14781) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14782) //        if (item != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14783) //            jpql += " and bi.item=:item ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14784) //            m.put("item", item);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14785) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14786) //        if (speciality != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14787) //            jpql += " and bf.speciality=:speciality ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14788) //            m.put("speciality", speciality);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14789) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14790) //        if (staff != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14791) //            jpql += " and bf.staff=:staff ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14792) //            m.put("staff", staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14793) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14794) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14795) //        System.out.println("jpql = " + jpql);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14796) //        System.out.println("m = " + m);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14797) //        List<BillFee> bifs = billFeeFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14798) //        System.out.println("bifs = " + bifs);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14799) //        if (bifs != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14800) //            for (BillFee bf : bifs) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14801) //                ReportTemplateRow r = new ReportTemplateRow(bf);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14802) //                oiBundle.getReportTemplateRows().add(r);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14803) //            }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14804) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14805) //        oiBundle.setName("Professional Fees");
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14806) //        oiBundle.setBundleType("professional_fees");
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14807) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14808) //        oiBundle.getReportTemplateRows().stream()
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14809) //                .forEach(rtr -> {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14810) //                    rtr.setInstitution(institution);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14811) //                    rtr.setDepartment(department);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14812) //                    rtr.setSite(site);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14813) //                    rtr.setFromDate(fromDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14814) //                    rtr.setToDate(toDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14815) //                    rtr.setStaff(staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14816) //                    rtr.setSpeciality(speciality);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14817) //                });
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14818) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14819) //        oiBundle.calculateTotalsForProfessionalFees();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14820) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14821) //        return oiBundle;
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14822) //    }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14823) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14824) //    @Deprecated
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14825) //    public ReportTemplateRowBundle generateOpdProfessionalFees() {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14826) //        ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14827) //        String jpql = "select bf "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14828) //                + " from BillFee bf "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14829) //                + " join bf.billItem bi "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14830) //                + " where bf.retired=:bfr "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14831) //                + " and bi.bill.retired=:br "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14832) //                + " and bf.fee.feeType=:ft "
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14833) //                + " and bi.bill.createdAt between :fd and :td ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14834) //        Map m = new HashMap();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14835) //        m.put("br", false);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14836) //        m.put("bfr", false);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14837) //        m.put("fd", fromDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14838) //        m.put("ft", FeeType.Staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14839) //        m.put("td", toDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14840) //        List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14841) //        oiBundle.setDescription("Bill Types Listed: " + btas);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14842) //        if (!btas.isEmpty()) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14843) //            jpql += " and bi.bill.billTypeAtomic in :bts ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14844) //            m.put("bts", btas);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14845) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14846) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14847) //        if (department != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14848) //            jpql += " and bi.bill.department=:dep ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14849) //            m.put("dep", department);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14850) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14851) //        if (institution != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14852) //            jpql += " and bi.bill.department.institution=:ins ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14853) //            m.put("ins", institution);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14854) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14855) //        if (site != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14856) //            jpql += " and bi.bill.department.site=:site ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14857) //            m.put("site", site);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14858) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14859) //        if (category != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14860) //            jpql += " and bi.item.category=:cat ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14861) //            m.put("cat", category);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14862) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14863) //        if (item != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14864) //            jpql += " and bi.item=:item ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14865) //            m.put("item", item);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14866) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14867) //        if (speciality != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14868) //            jpql += " and bf.speciality=:speciality ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14869) //            m.put("speciality", speciality);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14870) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14871) //        if (staff != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14872) //            jpql += " and bf.staff=:staff ";
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14873) //            m.put("staff", staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14874) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14875) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14876) //        System.out.println("jpql = " + jpql);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14877) //        System.out.println("m = " + m);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14878) //        List<BillFee> bifs = billFeeFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14879) //        if (bifs != null) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14880) //            for (BillFee bf : bifs) {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14881) //                ReportTemplateRow r = new ReportTemplateRow(bf);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14882) //                oiBundle.getReportTemplateRows().add(r);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14883) //            }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14884) //        }
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14885) //        oiBundle.setName("Professional Fees");
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14886) //        oiBundle.setBundleType("professional_fees");
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14887) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14888) //        oiBundle.getReportTemplateRows().stream()
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14889) //                .forEach(rtr -> {
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14890) //                    rtr.setInstitution(institution);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14891) //                    rtr.setDepartment(department);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14892) //                    rtr.setSite(site);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14893) //                    rtr.setFromDate(fromDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14894) //                    rtr.setToDate(toDate);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14895) //                    rtr.setStaff(staff);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14896) //                    rtr.setSpeciality(speciality);
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14897) //                });
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14898) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14899) //        oiBundle.calculateTotalsForProfessionalFees();
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14900) //
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14901) //        return oiBundle;
aaf291e1b19 (Buddhika Ariyaratne  2024-10-19 18:41:59 +0530 14902) //    }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14903)     public ReportTemplateRowBundle generateItemizedSalesReport() {
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 14904)         ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 14905) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14906)         // Prepare parameters
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14907)         Map<String, Object> mOP = new HashMap<>();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14908)         Map<String, Object> mIP = new HashMap<>();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14909)         mOP.put("br", false);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14910)         mOP.put("fd", fromDate);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14911)         mOP.put("td", toDate);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14912)         mIP.putAll(mOP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14913) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14914)         // Prepare BillTypeAtomic lists
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14915)         List<BillTypeAtomic> obtas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14916)         List<BillTypeAtomic> ibtas = BillTypeAtomic.findByServiceType(ServiceType.INWARD_SERVICE);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14917) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14918)         List<BillTypeAtomic> btasOP = new ArrayList<>();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14919)         List<BillTypeAtomic> btasIP = new ArrayList<>();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14920) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14921)         if (visitType != null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14922)             switch (visitType) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14923)                 case "Any":
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14924)                     btasOP.addAll(obtas);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14925)                     btasIP.addAll(ibtas);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14926)                     break;
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14927)                 case "OP":
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14928)                     btasOP.addAll(obtas);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14929)                     break;
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14930)                 case "IP":
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14931)                     btasIP.addAll(ibtas);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14932)                     break;
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14933)                 default:
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14934)                     break;
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14935)             }
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 14936)         }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14937) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14938)         // Prepare payment methods
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14939)         List<PaymentMethod> creditPaymentMethods = enumController.getPaymentTypeOfPaymentMethods(PaymentType.CREDIT);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14940)         List<PaymentMethod> nonCreditPaymentMethods = enumController.getPaymentTypeOfPaymentMethods(PaymentType.NON_CREDIT);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14941) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14942)         // Initialize lists to hold BillItems
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14943)         List<BillItem> bisOP = new ArrayList<>();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14944)         List<BillItem> bisIP = new ArrayList<>();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14945) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14946)         // Fetch OP Bills if applicable
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14947)         if (!btasOP.isEmpty()) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14948)             String jpqlOP = "select bi "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14949)                     + " from BillItem bi "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14950)                     + " where bi.bill.retired=:br "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14951)                     + " and bi.bill.createdAt between :fd and :td "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14952)                     + " and bi.bill.patientEncounter is null "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14953)                     + " and bi.bill.billTypeAtomic in :bts ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14954) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14955)             mOP.put("bts", btasOP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14956) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14957)             // Apply payment method filter for OP bills
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14958)             if (!"Any".equals(methodType)) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14959)                 if ("Credit".equals(methodType)) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14960)                     jpqlOP += " and bi.bill.paymentMethod in :pm ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14961)                     mOP.put("pm", creditPaymentMethods);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14962)                 } else if ("NonCredit".equals(methodType)) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14963)                     jpqlOP += " and bi.bill.paymentMethod in :pm ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14964)                     mOP.put("pm", nonCreditPaymentMethods);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14965)                 }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14966)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14967) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14968)             // Additional filters
0da3ba9179d (DamithDeshan         2024-11-20 10:25:56 +0530 14969)             if (billedDepartment != null) {
0da3ba9179d (DamithDeshan         2024-11-20 10:25:56 +0530 14970)                 jpqlOP += " and bi.bill.department=:dept ";
0da3ba9179d (DamithDeshan         2024-11-20 10:25:56 +0530 14971)                 mOP.put("dept", billedDepartment);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14972)             }
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 14973) 
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 14974)             if (serviceDepartment != null) {
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 14975)                 jpqlOP += " and bi.bill.toDepartment=:serDept ";
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 14976)                 mOP.put("serDept", serviceDepartment);
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 14977)             }
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 14978) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14979)             if (institution != null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14980)                 jpqlOP += " and bi.bill.department.institution=:ins ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14981)                 mOP.put("ins", institution);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14982)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14983)             if (site != null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14984)                 jpqlOP += " and bi.bill.department.site=:site ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14985)                 mOP.put("site", site);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14986)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14987)             if (category != null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14988)                 jpqlOP += " and bi.item.category=:cat ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14989)                 mOP.put("cat", category);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14990)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14991) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14992)             System.out.println("OP JPQL: " + jpqlOP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14993)             System.out.println("OP Params: " + mOP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14994) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14995)             // Fetch OP BillItems
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14996)             bisOP = billItemFacade.findByJpql(jpqlOP, mOP, TemporalType.TIMESTAMP);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 14997)         }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14998) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 14999)         // Fetch IP Bills if applicable
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15000)         if (!btasIP.isEmpty()) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15001)             String jpqlIP = "select bi "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15002)                     + " from BillItem bi "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15003)                     + " where bi.bill.retired=:br "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15004)                     + " and bi.bill.createdAt between :fd and :td "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15005)                     + " and bi.bill.patientEncounter is not null "
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15006)                     + " and bi.bill.billTypeAtomic in :bts ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15007) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15008)             mIP.put("bts", btasIP);
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 15009) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15010)             // Apply payment method filter for IP bills
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15011)             if (!"Any".equals(methodType)) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15012)                 if ("Credit".equals(methodType)) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15013)                     jpqlIP += " and bi.bill.patientEncounter.paymentMethod in :pm ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15014)                     mIP.put("pm", creditPaymentMethods);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15015)                 } else if ("NonCredit".equals(methodType)) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15016)                     jpqlIP += " and bi.bill.patientEncounter.paymentMethod in :pm ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15017)                     mIP.put("pm", nonCreditPaymentMethods);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15018)                 }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15019)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15020) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15021)             // Additional filters
0da3ba9179d (DamithDeshan         2024-11-20 10:25:56 +0530 15022)             if (billedDepartment != null) {
0da3ba9179d (DamithDeshan         2024-11-20 10:25:56 +0530 15023)                 jpqlIP += " and bi.bill.department=:dept ";
0da3ba9179d (DamithDeshan         2024-11-20 10:25:56 +0530 15024)                 mIP.put("dept", billedDepartment);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15025)             }
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15026) 
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 15027)             if (serviceDepartment != null) {
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 15028)                 jpqlIP += " and bi.bill.toDepartment=:serDept ";
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 15029)                 mIP.put("serDept", serviceDepartment);
40489682023 (DamithDeshan         2024-11-20 13:24:35 +0530 15030)             }
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15031) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15032)             if (institution != null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15033)                 jpqlIP += " and bi.bill.department.institution=:ins ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15034)                 mIP.put("ins", institution);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15035)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15036)             if (site != null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15037)                 jpqlIP += " and bi.bill.department.site=:site ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15038)                 mIP.put("site", site);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15039)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15040)             if (category != null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15041)                 jpqlIP += " and bi.item.category=:cat ";
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15042)                 mIP.put("cat", category);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15043)             }
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15044) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15045)             System.out.println("IP JPQL: " + jpqlIP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15046)             System.out.println("IP Params: " + mIP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15047) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15048)             // Fetch IP BillItems
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15049)             bisIP = billItemFacade.findByJpql(jpqlIP, mIP, TemporalType.TIMESTAMP);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15050)         }
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15051) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15052)         // Combine OP and IP BillItems
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15053)         List<BillItem> bis = new ArrayList<>();
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15054)         bis.addAll(bisOP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15055)         bis.addAll(bisIP);
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15056) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15057)         System.out.println("Total BillItems: " + bis.size());
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15058) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 15059)         billItemsToItamizedSaleReport(oiBundle, bis);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15060) 
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15061)         oiBundle.getReportTemplateRows().stream()
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15062)                 .forEach(rtr -> {
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15063)                     rtr.setInstitution(institution);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15064)                     rtr.setDepartment(department);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15065)                     rtr.setSite(site);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15066)                     rtr.setFromDate(fromDate);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15067)                     rtr.setToDate(toDate);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15068)                 });
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15069) 
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15070)         return oiBundle;
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15071)     }
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15072) 
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15073)     public ReportTemplateRowBundle generateBillsByItemCategory() {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15074)         ReportTemplateRowBundle oiBundle = new ReportTemplateRowBundle();
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15075)         String jpql = "select bi "
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15076)                 + " from BillItem bi "
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15077)                 + " where bi.bill.retired=:br "
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15078)                 + " and bi.bill.createdAt between :fd and :td ";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15079)         Map m = new HashMap();
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15080)         m.put("br", false);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15081)         m.put("fd", fromDate);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15082)         m.put("td", toDate);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15083)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15084)         oiBundle.setDescription("Bill Types Listed: " + btas);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15085)         if (!btas.isEmpty()) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15086)             jpql += " and bi.bill.billTypeAtomic in :bts ";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15087)             m.put("bts", btas);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15088)         }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15089) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15090)         if (department != null) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15091)             jpql += " and bi.bill.department=:dep ";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15092)             m.put("dep", department);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15093)         }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15094)         if (institution != null) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15095)             jpql += " and bi.bill.department.institution=:ins ";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15096)             m.put("ins", institution);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15097)         }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15098)         if (site != null) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15099)             jpql += " and bi.bill.department.site=:site ";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15100)             m.put("site", site);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15101)         }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15102)         if (category != null) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15103)             jpql += " and bi.item.category=:cat ";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15104)             m.put("cat", category);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15105)         }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15106)         if (item != null) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15107)             jpql += " and bi.item=:item ";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15108)             m.put("item", item);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15109)         }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15110)         System.out.println("jpql = " + jpql);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15111)         System.out.println("m = " + m);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15112)         List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15113)         billItemsToItamizedSaleReport(oiBundle, bis);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15114) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15115)         oiBundle.setName("Itemized Sales Report");
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15116)         oiBundle.setBundleType("itemized_sales_report");
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15117) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15118)         oiBundle.getReportTemplateRows().stream()
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15119)                 .forEach(rtr -> {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15120)                     rtr.setInstitution(institution);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15121)                     rtr.setDepartment(department);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15122)                     rtr.setSite(site);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15123)                     rtr.setFromDate(fromDate);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15124)                     rtr.setToDate(toDate);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15125)                 });
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15126) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15127)         return oiBundle;
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15128)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 15129) 
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15130)     public void createBillsByItemCategory() {
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15131)         bundle = generateBillsByItemCategory();
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15132)     }
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 15133) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15134)     public ReportTemplateRowBundle generateOpdServiceCollectionCashier() {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15135)         ReportTemplateRowBundle opdServiceCollection = new ReportTemplateRowBundle();
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15136)         String jpql = "select bi "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15137)                 + " from BillItem bi "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15138)                 + " where bi.bill.retired=:br "
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15139)                 + " and bi.bill.createdAt between :fd and :td ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15140)         Map m = new HashMap();
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15141)         m.put("br", false);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15142)         m.put("fd", fromDate);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15143)         m.put("td", toDate);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15144)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15145)         opdServiceCollection.setDescription("Bill Types Listed: " + btas);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15146)         if (!btas.isEmpty()) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15147)             jpql += " and bi.bill.billTypeAtomic in :bts ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15148)             m.put("bts", btas);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15149)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15150) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15151)         if (department != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15152)             jpql += " and bi.bill.department=:dep ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15153)             m.put("dep", department);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15154)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15155)         if (institution != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15156)             jpql += " and bi.bill.department.institution=:ins ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15157)             m.put("ins", institution);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15158)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15159)         if (site != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15160)             jpql += " and bi.bill.department.site=:site ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15161)             m.put("site", site);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15162)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15163)         if (webUser != null) {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15164)             jpql += " and bi.bill.creater=:wu ";
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15165)             m.put("wu", webUser);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15166)         }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15167) //        System.out.println("btas = " + btas);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15168) //        System.out.println("m = " + m);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15169) //        System.out.println("jpql = " + jpql);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15170)         List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15171) //        System.out.println("bis = " + bis);
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15172)         billItemsToBundleForOpdUnderCategory(opdServiceCollection, bis, PaymentType.NON_CREDIT);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15173) //        bundle.getBundles().add(opdServiceCollection);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15174) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15175)         opdServiceCollection.setName("OPD Service Collection");
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15176)         opdServiceCollection.setBundleType("opdServiceCollection");
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15177) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15178)         opdServiceCollection.getReportTemplateRows().stream()
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15179)                 .forEach(rtr -> {
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15180)                     rtr.setInstitution(institution);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15181)                     rtr.setDepartment(department);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15182)                     rtr.setSite(site);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15183)                     rtr.setFromDate(fromDate);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15184)                     rtr.setToDate(toDate);
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15185)                 });
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15186) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15187)         return opdServiceCollection;
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15188)     }
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 15189) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15190)     public ReportTemplateRowBundle generateOpdServiceCollection(PaymentType paymentType) {
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15191)         ReportTemplateRowBundle opdServiceCollection = new ReportTemplateRowBundle();
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15192)         String jpql = "select bi "
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15193)                 + " from BillItem bi "
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15194)                 + " where bi.bill.retired=:br "
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530 15195)                 + " and bi.retired=:bir "
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15196)                 + " and bi.bill.createdAt between :fd and :td ";
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15197)         Map m = new HashMap();
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15198)         m.put("br", false);
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530 15199)         m.put("bir", false);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15200)         m.put("fd", fromDate);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15201)         m.put("td", toDate);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15202)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
660ad75a230 (Buddhika Ariyaratne  2024-09-09 04:19:31 +0530 15203)         opdServiceCollection.setDescription("Bill Types Listed: " + btas);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15204)         if (!btas.isEmpty()) {
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15205)             jpql += " and bi.bill.billTypeAtomic in :bts ";
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15206)             m.put("bts", btas);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15207)         }
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15208) 
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15209)         if (department != null) {
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15210)             jpql += " and bi.bill.department=:dep ";
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15211)             m.put("dep", department);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15212)         }
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15213)         if (institution != null) {
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15214)             jpql += " and bi.bill.department.institution=:ins ";
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15215)             m.put("ins", institution);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15216)         }
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15217)         if (site != null) {
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 15218)             jpql += " and bi.bill.department.site=:site ";
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15219)             m.put("site", site);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15220)         }
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530 15221) 
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530 15222)         System.out.println("btas = " + btas);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530 15223)         System.out.println("m = " + m);
daae82ada2b (Buddhika             2024-11-20 17:59:41 +0530 15224)         System.out.println("jpql = " + jpql);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15225)         List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15226)         System.out.println("bis = " + bis);
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15227)         billItemsToBundleForOpdUnderCategory(opdServiceCollection, bis, paymentType);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15228) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15229)         if (paymentType == PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15230)             opdServiceCollection.setName("OPD Service Collection - Credit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15231)             opdServiceCollection.setBundleType("opdServiceCollectionCredit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15232)         } else {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15233)             opdServiceCollection.setName("OPD Service Collection");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15234)             opdServiceCollection.setBundleType("opdServiceCollection");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15235)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15236) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15237)         opdServiceCollection.getReportTemplateRows().stream()
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15238)                 .forEach(rtr -> {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15239)                     rtr.setInstitution(institution);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15240)                     rtr.setDepartment(department);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15241)                     rtr.setSite(site);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15242)                     rtr.setFromDate(fromDate);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15243)                     rtr.setToDate(toDate);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15244)                 });
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 15245) 
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15246)         return opdServiceCollection;
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15247)     }
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15248) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15249)     public ReportTemplateRowBundle generateOpdServiceCollectionWithoutProfessionalFee(PaymentType paymentType) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15250)         ReportTemplateRowBundle opdServiceCollection = new ReportTemplateRowBundle();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15251)         String jpql = "select bi "
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15252)                 + " from BillItem bi "
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15253)                 + " where bi.bill.retired=:br "
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530 15254)                 + " and bi.retired=:bir "
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15255)                 + " and bi.bill.createdAt between :fd and :td ";
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15256)         Map m = new HashMap();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15257)         m.put("br", false);
34ac88704b3 (Buddhika             2024-11-22 09:48:10 +0530 15258)         m.put("bir", false);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15259)         m.put("fd", fromDate);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15260)         m.put("td", toDate);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15261)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15262)         opdServiceCollection.setDescription("Bill Types Listed: " + btas);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15263)         if (!btas.isEmpty()) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15264)             jpql += " and bi.bill.billTypeAtomic in :bts ";
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15265)             m.put("bts", btas);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15266)         }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15267) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15268)         if (department != null) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15269)             jpql += " and bi.bill.department=:dep ";
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15270)             m.put("dep", department);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15271)         }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15272)         if (institution != null) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15273)             jpql += " and bi.bill.department.institution=:ins ";
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15274)             m.put("ins", institution);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15275)         }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15276)         if (site != null) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15277)             jpql += " and bi.bill.department.site=:site ";
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15278)             m.put("site", site);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15279)         }
4255ba03b14 (Buddhika             2024-11-22 10:25:53 +0530 15280) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15281)         List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15282)         billItemsToBundleForOpdUnderCategoryWithoutProfessionalFee(opdServiceCollection, bis, paymentType);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15283) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15284)         if (paymentType == PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15285)             opdServiceCollection.setName("OPD Service Collection - Credit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15286)             opdServiceCollection.setBundleType("opdServiceCollectionCredit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15287)         } else {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15288)             opdServiceCollection.setName("OPD Service Collection");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15289)             opdServiceCollection.setBundleType("opdServiceCollection");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15290)         }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15291) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15292)         opdServiceCollection.getReportTemplateRows().stream()
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15293)                 .forEach(rtr -> {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15294)                     rtr.setInstitution(institution);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15295)                     rtr.setDepartment(department);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15296)                     rtr.setSite(site);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15297)                     rtr.setFromDate(fromDate);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15298)                     rtr.setToDate(toDate);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15299)                 });
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15300) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15301)         return opdServiceCollection;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15302)     }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15303) 
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15304)     public ReportTemplateRowBundle generatePatientDepositCollection() {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15305)         ReportTemplateRowBundle depositCollection = new ReportTemplateRowBundle();
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15306)         String jpql = "select b "
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15307)                 + " from Bill b "
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15308)                 + " where b.retired=:br "
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15309)                 + " and b.createdAt between :fd and :td ";
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15310)         Map m = new HashMap();
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15311)         m.put("br", false);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15312)         m.put("fd", fromDate);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15313)         m.put("td", toDate);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15314)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.PATIENT_DEPOSIT);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15315)         depositCollection.setDescription("Patient Deposits");
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15316)         if (!btas.isEmpty()) {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15317)             jpql += " and b.billTypeAtomic in :bts ";
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15318)             m.put("bts", btas);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15319)         }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15320) 
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15321)         if (department != null) {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15322)             jpql += " and b.department=:dep ";
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15323)             m.put("dep", department);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15324)         }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15325)         if (institution != null) {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15326)             jpql += " and b.department.institution=:ins ";
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15327)             m.put("ins", institution);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15328)         }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15329)         if (site != null) {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15330)             jpql += " and b.department.site=:site ";
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15331)             m.put("site", site);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15332)         }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15333)         List<Bill> bis = billFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15334)         System.out.println("bis = " + bis);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15335)         billToBundleForPatientDeposits(depositCollection, bis);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15336)         depositCollection.setName("Patient Deposit Payments");
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15337)         depositCollection.setBundleType("patientDepositPayments");
c2c0dc094e6 (Buddhika Ariyaratne  2024-10-13 03:56:46 +0530 15338) 
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15339)         return depositCollection;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15340)     }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 15341) 
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15342)     public ReportTemplateRowBundle generatePharmacyCollection() {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15343)         ReportTemplateRowBundle pb;
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15344)         List<BillTypeAtomic> pharmacyBillTypesAtomics = BillTypeAtomic.findByServiceTypeAndPaymentCategory(ServiceType.PHARMACY,
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15345)                 PaymentCategory.NON_CREDIT_COLLECTION);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15346)         List<PaymentMethod> ppms = PaymentMethod.getMethodsByType(PaymentType.NON_CREDIT);
afa49592698 (Buddhika Ariyaratne  2024-08-30 18:17:30 +0530 15347) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15348)         pb = reportTemplateController.generateValueByDepartmentReport(
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 15349)                 pharmacyBillTypesAtomics,
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15350)                 ppms,
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 15351)                 fromDate,
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 15352)                 toDate,
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 15353)                 institution,
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 15354)                 department,
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 15355)                 site);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15356)         pb.setName("Pharmacy Sale");
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15357)         pb.setBundleType("pharmacyCollection");
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15358)         double pharmacyCollectionTotal = 0.0;
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15359)         for (ReportTemplateRow row : pb.getReportTemplateRows()) {
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15360)             pharmacyCollectionTotal += row.getRowValue();
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 15361)         }
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 15362)         pb.setTotal(pharmacyCollectionTotal);
80caf6c9ab3 (Buddhika Ariyaratne  2024-08-30 18:52:51 +0530 15363)         return pb;
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 15364)     }
a21c0c79768 (Buddhika Ariyaratne  2024-08-30 08:59:02 +0530 15365) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15366)     public ReportTemplateRowBundle generateCcCollection() {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15367)         ReportTemplateRowBundle pb;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15368)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15369)         ccCollection.add(BillTypeAtomic.CC_PAYMENT_CANCELLATION_BILL);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15370)         ccCollection.add(BillTypeAtomic.CC_PAYMENT_RECEIVED_BILL);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15371)         pb = reportTemplateController.generateBillReport(
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15372)                 ccCollection,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15373)                 fromDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15374)                 toDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15375)                 institution,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15376)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15377)                 site, false, false);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15378)         pb.setName("Collecting Centre Collection");
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15379)         pb.setBundleType("ccCollection");
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15380)         double ccCollectionTotal = 0.0;
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15381)         for (ReportTemplateRow row : pb.getReportTemplateRows()) {
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15382)             ccCollectionTotal += row.getBill().getNetTotal();
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 15383)         }
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 15384)         pb.setTotal(ccCollectionTotal);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15385)         return pb;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15386)     }
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15387) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15388)     public ReportTemplateRowBundle generateAgencyCollection() {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15389)         ReportTemplateRowBundle ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15390)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15391)         ccCollection.add(BillTypeAtomic.AGENCY_PAYMENT_RECEIVED);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15392)         ccCollection.add(BillTypeAtomic.AGENCY_PAYMENT_CANCELLATION);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15393)         ap = reportTemplateController.generateBillReport(
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15394)                 ccCollection,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15395)                 fromDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15396)                 toDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15397)                 institution,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15398)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15399)                 site, false, false);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15400)         ap.setName("Agency Payment Collection");
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15401)         ap.setBundleType("PayentBillReport");
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15402)         return ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15403)     }
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15404) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15405)     public ReportTemplateRowBundle generateAgencyCollectionForOpd() {
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15406)         ReportTemplateRowBundle ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15407)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15408)         ccCollection.add(BillTypeAtomic.AGENCY_PAYMENT_RECEIVED);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15409)         ccCollection.add(BillTypeAtomic.AGENCY_PAYMENT_CANCELLATION);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15410)         ap = reportTemplateController.generateBillReport(
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15411)                 ccCollection,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15412)                 fromDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15413)                 toDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15414)                 institution,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15415)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15416)                 site, false, false);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15417)         ap.setName("Agency Payment Collection");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15418)         ap.setBundleType("PayentBillReport");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15419)         return ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15420)     }
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15421) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15422)     public ReportTemplateRowBundle generateCreditCompanyCollectionForOpd() {
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15423)         ReportTemplateRowBundle ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15424)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15425)         ccCollection.add(BillTypeAtomic.OPD_CREDIT_COMPANY_PAYMENT_RECEIVED);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15426)         ccCollection.add(BillTypeAtomic.OPD_CREDIT_COMPANY_PAYMENT_CANCELLATION);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15427)         ccCollection.add(BillTypeAtomic.OPD_CREDIT_COMPANY_CREDIT_NOTE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15428)         ccCollection.add(BillTypeAtomic.OPD_CREDIT_COMPANY_DEBIT_NOTE);
1d964dbcd42 (Buddhika Ariyaratne  2024-09-01 07:05:01 +0530 15429) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15430)         ap = reportTemplateController.generateBillReport(
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15431)                 ccCollection,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15432)                 fromDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15433)                 toDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15434)                 institution,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15435)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15436)                 site, false, false);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15437)         ap.setName("OPD Credit Company Payment Collection");
5de79efef4a (Buddhika Ariyaratne  2024-09-01 07:10:57 +0530 15438)         ap.setBundleType("companyPaymentBillOpd");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15439)         return ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15440)     }
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15441) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15442)     public ReportTemplateRowBundle generateCreditCompanyCollectionForInward() {
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15443)         ReportTemplateRowBundle ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15444)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15445)         ccCollection.add(BillTypeAtomic.INPATIENT_CREDIT_COMPANY_PAYMENT_RECEIVED);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15446)         ccCollection.add(BillTypeAtomic.INPATIENT_CREDIT_COMPANY_PAYMENT_CANCELLATION);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15447)         ccCollection.add(BillTypeAtomic.INPATIENT_CREDIT_COMPANY_CREDIT_NOTE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15448)         ccCollection.add(BillTypeAtomic.INPATIENT_CREDIT_COMPANY_DEBIT_NOTE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15449)         ap = reportTemplateController.generateBillReport(
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15450)                 ccCollection,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15451)                 fromDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15452)                 toDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15453)                 institution,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15454)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15455)                 site, false, false);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15456)         ap.setName("Inpatient Credit Company Payment Collection");
5de79efef4a (Buddhika Ariyaratne  2024-09-01 07:10:57 +0530 15457)         ap.setBundleType("companyPaymentBillInward");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15458)         return ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15459)     }
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15460) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15461)     public ReportTemplateRowBundle generateCreditCompanyCollectionForPharmacy() {
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15462)         ReportTemplateRowBundle ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15463)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15464)         ccCollection.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_PAYMENT_RECEIVED);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15465)         ccCollection.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_PAYMENT_CANCELLATION);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15466)         ccCollection.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_CREDIT_NOTE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15467)         ccCollection.add(BillTypeAtomic.PHARMACY_CREDIT_COMPANY_DEBIT_NOTE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15468)         ap = reportTemplateController.generateBillReport(
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15469)                 ccCollection,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15470)                 fromDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15471)                 toDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15472)                 institution,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15473)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15474)                 site, false, false);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15475)         ap.setName("Pharmacy Credit Company Payment Collection");
5de79efef4a (Buddhika Ariyaratne  2024-09-01 07:10:57 +0530 15476)         ap.setBundleType("companyPaymentBillPharmacy");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15477)         return ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15478)     }
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15479) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15480)     public ReportTemplateRowBundle generateCreditCompanyCollectionForChannelling() {
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15481)         ReportTemplateRowBundle ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15482)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15483)         ccCollection.add(BillTypeAtomic.CHANNELLING_CREDIT_COMPANY_PAYMENT_RECEIVED);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15484)         ccCollection.add(BillTypeAtomic.CHANNELLING_CREDIT_COMPANY_PAYMENT_CANCELLATION);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15485)         ccCollection.add(BillTypeAtomic.CHANNELLING_CREDIT_COMPANY_CREDIT_NOTE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15486)         ccCollection.add(BillTypeAtomic.CHANNELLING_CREDIT_COMPANY_DEBIT_NOTE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15487)         ap = reportTemplateController.generateBillReport(
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15488)                 ccCollection,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15489)                 fromDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15490)                 toDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15491)                 institution,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15492)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15493)                 site, false, false);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15494)         ap.setName("Channelling Credit Company Payment Collection");
5de79efef4a (Buddhika Ariyaratne  2024-09-01 07:10:57 +0530 15495)         ap.setBundleType("companyPaymentBillChannelling");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15496)         return ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15497)     }
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15498) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15499)     public ReportTemplateRowBundle generateInwardProfessionalPayments() {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15500)         ReportTemplateRowBundle ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15501)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15502)         ccCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15503)         ccCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_INWARD_SERVICE_RETURN);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15504)         ap = reportTemplateController.generateBillReport(
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15505)                 ccCollection,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15506)                 fromDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15507)                 toDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15508)                 institution,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15509)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15510)                 site, false, false);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15511)         ap.setName("Inward Professional Payments");
f2a56b084de (Buddhika Ariyaratne  2024-09-09 03:21:11 +0530 15512)         ap.setBundleType("ProfessionalPaymentBillReportInward");
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15513)         return ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15514)     }
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15515) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15516)     public ReportTemplateRowBundle generateChannellingProfessionalPayments() {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15517)         ReportTemplateRowBundle ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15518)         List<BillTypeAtomic> ccCollection = new ArrayList<>();
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15519)         ccCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15520)         ccCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_RETURN);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15521)         ccCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15522)         ccCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_FOR_AGENCIES_RETURN);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15523)         ccCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_CHANNELING_SERVICE_SESSION);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15524) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15525)         ap = reportTemplateController.generateBillReport(
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15526)                 ccCollection,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15527)                 fromDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15528)                 toDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15529)                 institution,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15530)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15531)                 site, false, false);
f2a56b084de (Buddhika Ariyaratne  2024-09-09 03:21:11 +0530 15532)         ap.setName("Channelling Professional Payments");
f2a56b084de (Buddhika Ariyaratne  2024-09-09 03:21:11 +0530 15533)         ap.setBundleType("ProfessionalPaymentBillReportChannelling");
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15534)         return ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15535)     }
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15536) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15537)     public ReportTemplateRowBundle generateOpdProfessionalPayments() {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15538)         ReportTemplateRowBundle ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15539)         List<BillTypeAtomic> opdCollection = new ArrayList<>();
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15540)         opdCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15541)         opdCollection.add(BillTypeAtomic.PROFESSIONAL_PAYMENT_FOR_STAFF_FOR_OPD_SERVICES_RETURN);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15542) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15543)         ap = reportTemplateController.generateBillReport(
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15544)                 opdCollection,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15545)                 fromDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15546)                 toDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15547)                 institution,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15548)                 department,
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15549)                 site, false, false);
f2a56b084de (Buddhika Ariyaratne  2024-09-09 03:21:11 +0530 15550)         ap.setName("OPD Professional Payments");
f2a56b084de (Buddhika Ariyaratne  2024-09-09 03:21:11 +0530 15551)         ap.setBundleType("ProfessionalPaymentBillReportOpd");
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15552)         return ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15553)     }
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15554) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15555)     public ReportTemplateRowBundle generateCreditCardPayments() {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15556)         ReportTemplateRowBundle ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15557)         ap = reportTemplateController.generatePaymentReport(
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15558)                 PaymentMethod.Card,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15559)                 fromDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15560)                 toDate,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15561)                 institution,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15562)                 department,
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15563)                 site);
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15564)         ap.setName("Credit Card Payments");
968f7c44e28 (Buddhika Ariyaratne  2024-09-01 07:31:03 +0530 15565)         ap.setBundleType("paymentReportCards");
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15566)         return ap;
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15567)     }
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15568) 
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15569)     public ReportTemplateRowBundle retirePaymentsReceivedForIndividualOpdBills() {
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15570)         ReportTemplateRowBundle ap;
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15571)         ap = reportTemplateController.generatePaymentReport(
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15572)                 null,
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15573)                 fromDate,
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15574)                 toDate,
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15575)                 institution,
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15576)                 department,
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15577)                 site);
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15578)         ap.setName("Credit Card Payments");
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15579)         ap.setBundleType("paymentReportCards");
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15580)         List<ReportTemplateRow> rtrs = new ArrayList<>();
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15581)         for (ReportTemplateRow r : ap.getReportTemplateRows()) {
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15582)             if (r.getPayment() == null) {
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15583)                 continue;
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15584)             }
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15585)             if (r.getPayment().getBill() == null) {
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15586)                 continue;
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15587)             }
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15588)             if (r.getPayment().getBill().getBillTypeAtomic() == null) {
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15589)                 continue;
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15590)             }
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15591)             if (r.getPayment().getBill().getBillTypeAtomic() == BillTypeAtomic.OPD_BILL_CANCELLATION
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15592)                     || r.getPayment().getBill().getBillTypeAtomic() == BillTypeAtomic.OPD_BILL_PAYMENT_COLLECTION_AT_CASHIER
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15593)                     || r.getPayment().getBill().getBillTypeAtomic() == BillTypeAtomic.OPD_BILL_CANCELLATION_DURING_BATCH_BILL_CANCELLATION
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15594)                     || r.getPayment().getBill().getBillTypeAtomic() == BillTypeAtomic.OPD_BILL_WITH_PAYMENT) {
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15595)                 r.getPayment().setRetired(true);
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15596)                 r.getPayment().setRetirer(sessionController.getLoggedUser());
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15597)                 r.getPayment().setRetireComments("Reriting OPD Individual Payment Cancellations");
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15598)                 paymentFacade.edit(r.getPayment());
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15599)                 System.out.println("retired = " + r.getPayment().getId());
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15600)             }
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15601)         }
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15602)         return ap;
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15603)     }
afe838f9ae2 (Buddhika Ariyaratne  2024-09-09 04:45:03 +0530 15604) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15605)     public ReportTemplateRowBundle generateStaffPayments() {
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15606)         ReportTemplateRowBundle ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15607)         ap = reportTemplateController.generatePaymentReport(
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15608)                 PaymentMethod.Staff_Welfare,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15609)                 fromDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15610)                 toDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15611)                 institution,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15612)                 department,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15613)                 site);
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15614)         ap.setName("Staff Welfare Payments");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 15615)         ap.setBundleType("paymentReportStaffWelfare");
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15616)         return ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15617)     }
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15618) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15619)     public ReportTemplateRowBundle generateVoucherPayments() {
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15620)         ReportTemplateRowBundle ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15621)         ap = reportTemplateController.generatePaymentReport(
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15622)                 PaymentMethod.Voucher,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15623)                 fromDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15624)                 toDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15625)                 institution,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15626)                 department,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15627)                 site);
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15628)         ap.setName("Voucher Payments");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 15629)         ap.setBundleType("paymentReportVoucher");
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15630)         return ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15631)     }
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15632) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15633)     public ReportTemplateRowBundle generateChequePayments() {
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15634)         ReportTemplateRowBundle ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15635)         ap = reportTemplateController.generatePaymentReport(
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15636)                 PaymentMethod.Cheque,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15637)                 fromDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15638)                 toDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15639)                 institution,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15640)                 department,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15641)                 site);
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15642)         ap.setName("Cheque Payments");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 15643)         ap.setBundleType("paymentReportCheque");
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15644)         return ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15645)     }
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15646) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15647)     public ReportTemplateRowBundle generateEwalletPayments() {
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15648)         ReportTemplateRowBundle ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15649)         ap = reportTemplateController.generatePaymentReport(
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15650)                 PaymentMethod.ewallet,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15651)                 fromDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15652)                 toDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15653)                 institution,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15654)                 department,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15655)                 site);
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15656)         ap.setName("e-Wallet Payments");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 15657)         ap.setBundleType("paymentReportEwallet");
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15658)         return ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15659)     }
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15660) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15661)     public ReportTemplateRowBundle generatePettyCashPayments() {
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15662)         ReportTemplateRowBundle ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15663)         List<BillTypeAtomic> btas = new ArrayList<>();
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15664)         btas.add(BillTypeAtomic.PETTY_CASH_BILL_CANCELLATION);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15665)         btas.add(BillTypeAtomic.PETTY_CASH_ISSUE);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15666)         btas.add(BillTypeAtomic.PETTY_CASH_RETURN);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15667) 
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15668)         ap = reportTemplateController.generateBillReport(
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15669)                 btas,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15670)                 fromDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15671)                 toDate,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15672)                 institution,
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15673)                 department,
78209c2c31e (Dr M H B Ariyaratne  2024-10-30 09:20:32 +0530 15674)                 site, false, false);
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15675)         ap.setName("Petty Cash Payments");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15676)         ap.setBundleType("pettyCashPayments");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15677)         return ap;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15678)     }
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 15679) 
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15680)     public ReportTemplateRowBundle generateCreditBills() {
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15681)         ReportTemplateRowBundle ap;
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15682)         List<BillTypeAtomic> btas = new ArrayList<>();
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15683)         btas.add(BillTypeAtomic.OPD_BATCH_BILL_WITH_PAYMENT);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15684)         btas.add(BillTypeAtomic.OPD_BATCH_BILL_PAYMENT_COLLECTION_AT_CASHIER);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15685)         btas.add(BillTypeAtomic.OPD_BATCH_BILL_CANCELLATION);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15686)         btas.add(BillTypeAtomic.OPD_BILL_CANCELLATION);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15687)         btas.add(BillTypeAtomic.OPD_BILL_REFUND);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15688)         btas.add(BillTypeAtomic.PHARMACY_RETAIL_SALE);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15689) 
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15690)         ap = reportTemplateController.generateBillReport(
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15691)                 btas,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15692)                 fromDate,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15693)                 toDate,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15694)                 institution,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15695)                 department,
33cfc454bd4 (DamithDeshan         2024-11-02 17:58:16 +0530 15696)                 site,
33cfc454bd4 (DamithDeshan         2024-11-02 17:58:16 +0530 15697)                 true,
33cfc454bd4 (DamithDeshan         2024-11-02 17:58:16 +0530 15698)                 true);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15699)         ap.setName("Credit Bills");
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15700)         ap.setBundleType("creditBills");
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15701)         return ap;
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15702)     }
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15703) 
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15704)     public ReportTemplateRowBundle generateCreditBillsWithoutProfessionalFees() {
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15705)         ReportTemplateRowBundle ap;
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15706)         List<BillTypeAtomic> btas = new ArrayList<>();
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15707)         btas.add(BillTypeAtomic.OPD_BATCH_BILL_WITH_PAYMENT);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15708)         btas.add(BillTypeAtomic.OPD_BATCH_BILL_PAYMENT_COLLECTION_AT_CASHIER);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15709)         btas.add(BillTypeAtomic.OPD_BATCH_BILL_CANCELLATION);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15710)         btas.add(BillTypeAtomic.OPD_BILL_CANCELLATION);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15711)         btas.add(BillTypeAtomic.OPD_BILL_REFUND);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15712)         btas.add(BillTypeAtomic.PHARMACY_RETAIL_SALE);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15713)         ap = reportTemplateController.generateBillReportWithoutProfessionalFees(
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15714)                 btas,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15715)                 fromDate,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15716)                 toDate,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15717)                 institution,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15718)                 department,
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15719)                 site);
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15720)         ap.setName("Credit Bills");
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15721)         ap.setBundleType("creditBills");
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15722)         return ap;
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15723)     }
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15724) 
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15725)     public ReportTemplateRowBundle generateSlipPayments() {
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15726)         ReportTemplateRowBundle ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15727)         ap = reportTemplateController.generatePaymentReport(
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15728)                 PaymentMethod.Slip,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15729)                 fromDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15730)                 toDate,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15731)                 institution,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15732)                 department,
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15733)                 site);
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15734)         ap.setName("Slip Payments");
ddde2a7799d (Buddhika Ariyaratne  2024-10-10 06:08:55 +0530 15735)         ap.setBundleType("paymentReportSlip");
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15736)         return ap;
1633d325410 (Buddhika Ariyaratne  2024-08-31 09:41:01 +0530 15737)     }
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 15738) 
b03fe86676f (Buddhika Ariyaratne  2024-10-14 03:52:27 +0530 15739)     public void updateBillItemValues() {
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15740)         bundle = new ReportTemplateRowBundle();
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15741)         String jpql = "select bi "
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15742)                 + " from BillItem bi "
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15743)                 + " where bi.bill.retired=:br "
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15744)                 + " and bi.bill.createdAt between :fd and :td ";
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15745)         Map m = new HashMap();
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15746)         m.put("br", false);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15747)         m.put("fd", fromDate);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15748)         m.put("td", toDate);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15749)         List<BillTypeAtomic> btas = BillTypeAtomic.findByServiceType(ServiceType.OPD);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15750)         if (!btas.isEmpty()) {
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15751)             jpql += " and bi.bill.billTypeAtomic in :bts ";
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15752)             m.put("bts", btas);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15753)         } else {
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15754)             // Handle the case where no bill types are found, perhaps by logging or throwing an exception
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15755)         }
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15756) 
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15757)         if (department != null) {
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15758)             jpql += " and bi.bill.department=:dep ";
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15759)             m.put("dep", department);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15760)         }
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15761)         if (institution != null) {
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15762)             jpql += " and bi.bill.department.institution=:ins ";
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15763)             m.put("ins", institution);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15764)         }
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15765)         if (site != null) {
794e21efbc8 (Buddhika Ariyaratne  2024-09-01 05:30:27 +0530 15766)             jpql += " and bi.bill.department.site=:site ";
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15767)             m.put("site", site);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15768)         }
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15769)         List<BillItem> bis = billItemFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
83ce7ec3697 (Buddhika Ariyaratne  2024-10-30 02:37:14 +0530 15770)         billService.createBillItemFeeBreakdownAsHospitalFeeItemDiscount(bis);
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15771)     }
be98bbfa5ed (Buddhika Ariyaratne  2024-08-30 07:34:52 +0530 15772) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15773)     public void billItemsToBundleForOpdUnderCategory(ReportTemplateRowBundle rtrb, List<BillItem> billItems, PaymentType paymentType) {
c454ae4868c (Dr M H B Ariyaratne  2024-10-24 03:28:02 +0530 15774)         System.out.println("billItemsToBundleForOpdUnderCategory");
455f2eed8e2 (Buddhika             2024-11-22 10:10:55 +0530 15775)         // Use TreeMap to maintain alphabetical order
455f2eed8e2 (Buddhika             2024-11-22 10:10:55 +0530 15776)         Map<String, ReportTemplateRow> categoryMap = new TreeMap<>();
455f2eed8e2 (Buddhika             2024-11-22 10:10:55 +0530 15777)         Map<String, ReportTemplateRow> itemMap = new TreeMap<>();
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15778)         List<ReportTemplateRow> rowsToAdd = new ArrayList<>();
f7961b36750 (Buddhika Ariyaratne  2024-09-01 06:10:18 +0530 15779)         double totalOpdServiceCollection = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15780)         double totalGrossValue = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15781)         double totalHospitalFee = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15782)         double totalSiscount = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15783)         double totalStaffFee = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15784)         long totalQuantity = 0l;
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15785) 
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15786)         for (BillItem bi : billItems) {
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15787) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15788)             if (bi.getBill() == null || bi.getBill().getPaymentMethod() == null
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15789)                     || bi.getBill().getPaymentMethod().getPaymentType() == PaymentType.NONE) {
c454ae4868c (Dr M H B Ariyaratne  2024-10-24 03:28:02 +0530 15790)                 System.out.println("continue 1");
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15791)                 continue;
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15792)             }
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15793) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15794)             if (paymentType == PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15795)                 if (bi.getBill().getPaymentMethod().getPaymentType() != PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15796)                     System.out.println("skipping as this is not a credit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15797)                     continue;
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15798)                 }
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15799)             } else if (paymentType == PaymentType.NON_CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15800)                 if (bi.getBill().getPaymentMethod().getPaymentType() == PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15801)                     System.out.println("Skipping as this is credit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15802)                     continue;
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15803)                 }
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15804) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15805)             }
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15806) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15807)             String categoryName = bi.getItem() != null && bi.getItem().getCategory() != null
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15808)                     ? bi.getItem().getCategory().getName() : "No Category";
c454ae4868c (Dr M H B Ariyaratne  2024-10-24 03:28:02 +0530 15809)             System.out.println("categoryName = " + categoryName);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15810)             String itemName = bi.getItem() != null ? bi.getItem().getName() : "No Item";
c454ae4868c (Dr M H B Ariyaratne  2024-10-24 03:28:02 +0530 15811)             System.out.println("itemName = " + itemName);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15812)             String itemKey = categoryName + "->" + itemName;
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15813) 
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15814)             System.out.println("Item Key: " + itemKey);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15815)             System.out.println("Category: " + categoryName + ", Item: " + itemName);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15816) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15817)             // Initialize the maps if keys are not present
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 15818)             categoryMap.putIfAbsent(categoryName, new ReportTemplateRow());
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15819)             itemMap.putIfAbsent(itemKey, new ReportTemplateRow());
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15820) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15821)             ReportTemplateRow categoryRow = categoryMap.get(categoryName);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15822)             ReportTemplateRow itemRow = itemMap.get(itemKey);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15823) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15824)             // Set category and item details
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15825)             if (bi.getItem() != null) {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15826)                 categoryRow.setCategory(bi.getItem().getCategory());
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15827)                 itemRow.setItem(bi.getItem());
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15828)             }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15829) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15830)             // Initialize financial values
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15831)             double grossValue = bi.getGrossValue();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15832)             double hospitalFee = bi.getHospitalFee();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15833)             double discount = bi.getDiscount();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15834)             double staffFee = bi.getStaffFee();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15835)             double netValue = bi.getNetValue();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15836) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15837)             // Determine quantity modifier based on bill class type
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15838)             long qtyModifier = (bi.getBill().getBillClassType() == BillClassType.CancelledBill
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15839)                     || bi.getBill().getBillClassType() == BillClassType.RefundBill) ? -1 : 1;
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15840) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15841)             // Adjust financial values for cancelled/refunded items
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15842)             if (qtyModifier == -1) {
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15843)                 grossValue = -Math.abs(grossValue);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15844)                 hospitalFee = -Math.abs(hospitalFee);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15845)                 discount = -Math.abs(discount);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15846)                 staffFee = -Math.abs(staffFee);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15847)                 netValue = -Math.abs(netValue);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15848)             }
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15849) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15850)             // Calculate the adjusted quantity
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15851)             long quantity = (long) (bi.getQtyAbsolute() * qtyModifier);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15852) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15853)             // Accumulate the total collection
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 15854)             totalOpdServiceCollection += netValue;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15855)             System.out.println("Accumulated total OPD service collection: " + totalOpdServiceCollection);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15856) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15857)             totalGrossValue += grossValue;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15858)             System.out.println("Accumulated total gross value: " + totalGrossValue);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15859) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15860)             totalHospitalFee += hospitalFee;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15861)             System.out.println("Accumulated total hospital fee: " + totalHospitalFee);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15862) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15863)             totalSiscount += discount;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15864)             System.out.println("Accumulated total discount: " + totalSiscount);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15865) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15866)             totalStaffFee += staffFee;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15867)             System.out.println("Accumulated total staff fee: " + totalStaffFee);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15868) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15869)             totalQuantity += quantity;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15870)             System.out.println("Accumulated total quantity: " + totalQuantity);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15871) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 15872)             // Update the rows with the adjusted values
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15873)             updateRow(categoryRow, quantity, grossValue, hospitalFee, discount, staffFee, netValue);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15874)             updateRow(itemRow, quantity, grossValue, hospitalFee, discount, staffFee, netValue);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15875)         }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15876) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15877)         // Add the rows to the report template bundle
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15878)         categoryMap.forEach((categoryName, catRow) -> {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15879)             System.out.println("Adding category row to bundle: " + categoryName);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15880)             rowsToAdd.add(catRow);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15881) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15882)             itemMap.entrySet().stream()
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15883)                     .filter(entry -> entry.getKey().startsWith(categoryName + "->"))
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15884)                     .forEach(entry -> {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15885)                         System.out.println("Adding item row to bundle under category " + categoryName + ": " + entry.getValue().getItem().getName());
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15886)                         rowsToAdd.add(entry.getValue());
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15887)                     });
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15888)         });
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15889) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15890)         rtrb.getReportTemplateRows().addAll(rowsToAdd);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15891)         System.out.println("Added rows to ReportTemplateRowBundle. Total rows added: " + rowsToAdd.size());
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15892) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15893)         rtrb.setTotal(totalOpdServiceCollection);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15894)         rtrb.setGrossTotal(totalGrossValue);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15895)         rtrb.setHospitalTotal(totalHospitalFee);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15896)         rtrb.setStaffTotal(totalStaffFee);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15897)         rtrb.setDiscount(totalSiscount);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15898)         rtrb.setCount(totalQuantity);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15899) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15900)     }
1b99c818e82 (Buddhika Ariyaratne  2024-10-30 05:54:47 +0530 15901) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15902)     public void billItemsToBundleForOpdUnderCategoryWithoutProfessionalFee(ReportTemplateRowBundle rtrb, List<BillItem> billItems, PaymentType paymentType) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15903)         System.out.println("billItemsToBundleForOpdUnderCategory");
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15904)         // Use TreeMap to maintain alphabetical order
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15905)         Map<String, ReportTemplateRow> categoryMap = new TreeMap<String, ReportTemplateRow>();
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15906)         Map<String, ReportTemplateRow> itemMap = new TreeMap<String, ReportTemplateRow>();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15907)         List<ReportTemplateRow> rowsToAdd = new ArrayList<>();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15908)         double totalOpdServiceCollection = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15909)         double totalGrossValue = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15910)         double totalHospitalFee = 0.0;
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15911)         double totalDiscount = 0.0;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15912)         double totalStaffFee = 0.0;
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15913)         long totalQuantity = 0L;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15914) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15915)         for (BillItem bi : billItems) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15916)             if (bi.getBill() == null || bi.getBill().getPaymentMethod() == null
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15917)                     || bi.getBill().getPaymentMethod().getPaymentType() == PaymentType.NONE) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15918)                 System.out.println("skipping as it is not credit or non credit");
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15919)                 continue;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15920)             }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15921) 
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15922)             if (paymentType == PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15923)                 if (bi.getBill().getPaymentMethod().getPaymentType() != PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15924)                     System.out.println("skipping as this is not a credit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15925)                     continue;
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15926)                 }
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15927)             } else if (paymentType == PaymentType.NON_CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15928)                 if (bi.getBill().getPaymentMethod().getPaymentType() == PaymentType.CREDIT) {
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15929)                     System.out.println("Skipping as this is credit");
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15930)                     continue;
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15931)                 }
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15932)             }
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15933) 
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15934)             // Identify category and item with null checks
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15935)             String categoryName = (bi.getItem() != null && bi.getItem().getCategory() != null && bi.getItem().getCategory().getName() != null)
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15936)                     ? bi.getItem().getCategory().getName() : "No Category";
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15937)             System.out.println("categoryName = " + categoryName);
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15938)             String itemName = (bi.getItem() != null && bi.getItem().getName() != null) ? bi.getItem().getName() : "No Item";
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15939)             System.out.println("itemName = " + itemName);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15940)             String itemKey = categoryName + "->" + itemName;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15941) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15942)             System.out.println("Item Key: " + itemKey);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15943)             System.out.println("Category: " + categoryName + ", Item: " + itemName);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15944) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15945)             // Initialize the maps if keys are not present
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15946)             categoryMap.putIfAbsent(categoryName, new ReportTemplateRow());
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15947)             itemMap.putIfAbsent(itemKey, new ReportTemplateRow());
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15948) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15949)             ReportTemplateRow categoryRow = categoryMap.get(categoryName);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15950)             ReportTemplateRow itemRow = itemMap.get(itemKey);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15951) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15952)             // Set category and item details
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15953)             if (bi.getItem() != null) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15954)                 categoryRow.setCategory(bi.getItem().getCategory());
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15955)                 itemRow.setItem(bi.getItem());
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15956)             }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15957) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15958)             // Initialize financial values
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15959)             double grossValue = bi.getGrossValue();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15960)             double hospitalFee = bi.getHospitalFee();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15961)             double discount = bi.getDiscount();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15962)             double staffFee = bi.getStaffFee();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15963)             double netValue = bi.getNetValue();
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15964) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15965)             // Determine quantity modifier based on bill class type
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15966)             long qtyModifier = (bi.getBill().getBillClassType() == BillClassType.CancelledBill
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15967)                     || bi.getBill().getBillClassType() == BillClassType.RefundBill) ? -1 : 1;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15968) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15969)             // Adjust financial values for cancelled/refunded items
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15970)             if (qtyModifier == -1) {
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15971)                 grossValue = -Math.abs(grossValue);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15972)                 hospitalFee = -Math.abs(hospitalFee);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15973)                 discount = -Math.abs(discount);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15974)                 staffFee = -Math.abs(staffFee);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15975)                 netValue = -Math.abs(netValue);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15976)             }
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15977) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15978)             // Calculate the adjusted quantity
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15979)             long quantity = (long) (bi.getQtyAbsolute() * qtyModifier);
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15980) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15981)             // Accumulate the total collection
8677d18a86f (Dr M H B Ariyaratne  2024-10-31 04:46:59 +0530 15982)             totalOpdServiceCollection += hospitalFee - discount;
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 15983) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15984)             System.out.println("Accumulated total OPD service collection: " + totalOpdServiceCollection);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15985) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15986)             totalGrossValue += grossValue;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15987)             System.out.println("Accumulated total gross value: " + totalGrossValue);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15988) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15989)             totalHospitalFee += hospitalFee;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15990)             System.out.println("Accumulated total hospital fee: " + totalHospitalFee);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15991) 
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15992)             totalDiscount += discount;
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 15993)             System.out.println("Accumulated total discount: " + totalDiscount);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15994) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15995)             totalStaffFee += staffFee;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15996)             System.out.println("Accumulated total staff fee: " + totalStaffFee);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15997) 
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15998)             totalQuantity += quantity;
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 15999)             System.out.println("Accumulated total quantity: " + totalQuantity);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 16000) 
0d623add19c (DamithDeshan         2024-10-29 20:41:10 +0530 16001)             // Update the rows with the adjusted values
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16002)             updateRow(categoryRow, quantity, grossValue, hospitalFee, discount, staffFee, netValue);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16003)             updateRow(itemRow, quantity, grossValue, hospitalFee, discount, staffFee, netValue);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16004)         }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16005) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16006)         // Add the rows to the report template bundle
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16007)         categoryMap.forEach((categoryName, catRow) -> {
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16008)             System.out.println("Adding category row to bundle: " + categoryName);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16009)             rowsToAdd.add(catRow);
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16010) 
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16011)             itemMap.entrySet().stream()
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16012)                     .filter(entry -> entry.getKey().startsWith(categoryName + "->"))
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16013)                     .forEach(entry -> {
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16014)                         System.out.println("Adding item row to bundle under category " + categoryName + ": " + entry.getValue().getItem().getName());
fd514a572e2 (Dr M H B Ariyaratne  2024-10-18 04:54:21 +0530 16015)                         rowsToAdd.add(entry.getValue());
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16016)                     });
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16017)         });
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16018) 
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16019)         rtrb.getReportTemplateRows().addAll(rowsToAdd);
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 16020)         System.out.println("Added rows to ReportTemplateRowBundle. Total rows added: " + rowsToAdd.size());
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 16021) 
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 16022)         rtrb.setTotal(totalOpdServiceCollection);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 16023)         rtrb.setGrossTotal(totalGrossValue);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 16024)         rtrb.setHospitalTotal(totalHospitalFee);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 16025)         rtrb.setStaffTotal(totalStaffFee);
d530a44d83b (Buddhika             2024-11-22 10:49:21 +0530 16026)         rtrb.setDiscount(totalDiscount);
0c0d05db6ad (Buddhika             2024-11-20 15:03:47 +0530 16027)         rtrb.setCount(totalQuantity);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16028)     }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16029) 
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16030)     public void billToBundleForPatientDeposits(ReportTemplateRowBundle rtrb, List<Bill> bills) {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16031)         double totalDepositCollection = 0.0;
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16032)         List<ReportTemplateRow> rows = new ArrayList<>();
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16033)         for (Bill b : bills) {
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16034)             ReportTemplateRow row = new ReportTemplateRow();
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16035)             row.setBill(b);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16036)             totalDepositCollection += b.getNetTotal();
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16037)             rows.add(row);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16038)         }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16039)         rtrb.getReportTemplateRows().addAll(rows);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16040)         rtrb.setTotal(totalDepositCollection);
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16041)     }
946e037ed79 (Buddhika Ariyaratne  2024-10-12 14:14:25 +0530 16042) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16043)     public void summarizeBillItemsToIncomeByCategory(ReportTemplateRowBundle reportBundle, List<BillItem> billItems) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16044)         System.out.println("summarizeBillItemsToIncomeByCategory");
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16045)         Map<String, ReportTemplateRow> categoryMap = new HashMap<>();
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16046)         List<ReportTemplateRow> rowsToAdd = new ArrayList<>();
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16047)         double totalNetIncome = 0.0;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16048)         double totalIncome = 0.0;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16049)         double totalDiscount = 0.0;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16050)         double totalHospitalFees = 0.0;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16051)         double totalStaffFees = 0.0;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16052) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16053)         for (BillItem iteratingBillItem : billItems) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16054)             if (iteratingBillItem.getBill() == null) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16055)                 System.err.println("No Bill for this iteratingBillItem = " + iteratingBillItem);
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16056)                 continue;
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16057)             }
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16058) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16059)             String categoryName = iteratingBillItem.getItem() != null && iteratingBillItem.getItem().getCategory() != null ? iteratingBillItem.getItem().getCategory().getName() : "No Category";
83ad88ba40e (Buddhika Ariyaratne  2024-09-12 19:59:40 +0530 16060)             categoryMap.putIfAbsent(categoryName, new ReportTemplateRow());
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 16061) 
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 16062)             ReportTemplateRow categoryRow = categoryMap.get(categoryName);
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16063)             if (iteratingBillItem.getItem() != null) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16064)                 categoryRow.setCategory(iteratingBillItem.getItem().getCategory());
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 16065)             }
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 16066) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16067)             long countModifier = (iteratingBillItem.getBill().getBillClassType() == BillClassType.CancelledBill || iteratingBillItem.getBill().getBillClassType() == BillClassType.RefundBill) ? -1 : 1;
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16068)             double grossValue = countModifier * Math.abs(iteratingBillItem.getGrossValue());
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16069)             double hospitalFee = countModifier * Math.abs(iteratingBillItem.getHospitalFee());
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16070)             double iteratingDiscount = countModifier * Math.abs(iteratingBillItem.getDiscount());
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16071)             double staffFee = countModifier * Math.abs(iteratingBillItem.getStaffFee());
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16072)             double netValue = countModifier * Math.abs(iteratingBillItem.getNetValue());
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 16073) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16074)             totalIncome += grossValue;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16075)             totalNetIncome += netValue;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16076)             totalHospitalFees += hospitalFee;
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16077)             totalDiscount += iteratingDiscount;
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16078)             totalStaffFees += staffFee;
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16079)             updateCategoryRow(categoryRow, countModifier, grossValue, hospitalFee, iteratingDiscount, staffFee, netValue);
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 16080)         }
185f3a95ade (Buddhika Ariyaratne  2024-08-31 06:59:11 +0530 16081) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16082)         // Iterate over categoryMap to add each category's row to rowsToAdd
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16083)         categoryMap.forEach((categoryName, catRow) -> rowsToAdd.add(catRow));
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 16084) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16085)         reportBundle.getReportTemplateRows().addAll(rowsToAdd);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 16086) 
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 16087)         reportBundle.setTotal(totalNetIncome);
a9b13024551 (Buddhika Ariyaratne  2024-09-13 03:37:28 +0530 16088)         reportBundle.setDiscount(totalDiscount);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16089)         reportBundle.setGrossTotal(totalIncome);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16090)         reportBundle.setHospitalTotal(totalHospitalFees);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16091)         reportBundle.setStaffTotal(totalStaffFees);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16092)     }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16093) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16094)     @Deprecated
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16095)     public void summarizeBillItemsToIncomeByCategoryWithoutProfessionalFee(ReportTemplateRowBundle reportBundle, List<BillItem> billItems) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16096)         System.out.println("summarizeBillItemsToIncomeByCategoryWithoutProfessionalFee = ");
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16097)         Map<String, ReportTemplateRow> categoryMap = new HashMap<>();
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16098)         List<ReportTemplateRow> rowsToAdd = new ArrayList<>();
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16099)         double totalNetIncome = 0.0;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16100)         double totalIncome = 0.0;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16101)         double totalDiscount = 0.0;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16102)         double totalHospitalFees = 0.0;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16103) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16104)         for (BillItem loopBillItem : billItems) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16105)             if (loopBillItem.getBill() == null || loopBillItem.getBill().getPaymentMethod() == null || loopBillItem.getBill().getPaymentMethod().getPaymentType() == PaymentType.NONE) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16106)                 continue;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16107)             }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16108) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16109)             String categoryName = loopBillItem.getItem() != null && loopBillItem.getItem().getCategory() != null ? loopBillItem.getItem().getCategory().getName() : "No Category";
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16110)             categoryMap.putIfAbsent(categoryName, new ReportTemplateRow());
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16111) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16112)             ReportTemplateRow categoryRow = categoryMap.get(categoryName);
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16113)             if (loopBillItem.getItem() != null) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16114)                 categoryRow.setCategory(loopBillItem.getItem().getCategory());
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16115)             }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16116) 
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16117)             long countModifier = (loopBillItem.getBill().getBillClassType() == BillClassType.CancelledBill || loopBillItem.getBill().getBillClassType() == BillClassType.RefundBill) ? -1 : 1;
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16118)             double grossValue = countModifier * Math.abs(loopBillItem.getGrossValue());
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16119)             double hospitalFee = countModifier * Math.abs(loopBillItem.getHospitalFee());
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16120)             double discount = countModifier * Math.abs(loopBillItem.getDiscount());
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16121)             double netValue = countModifier * Math.abs(loopBillItem.getNetValue());
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16122) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16123)             totalIncome += grossValue;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16124)             totalNetIncome += netValue;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16125)             totalHospitalFees += hospitalFee;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16126)             totalDiscount += discount;
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16127)             updateCategoryRow(categoryRow, countModifier, grossValue, hospitalFee, discount, netValue);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16128)         }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16129) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16130)         // Iterate over categoryMap to add each category's row to rowsToAdd
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16131)         categoryMap.forEach((categoryName, catRow) -> rowsToAdd.add(catRow));
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16132) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16133)         reportBundle.getReportTemplateRows().addAll(rowsToAdd);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16134) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16135)         reportBundle.setTotal(totalNetIncome);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16136)         reportBundle.setDiscount(totalDiscount);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16137)         reportBundle.setGrossTotal(totalIncome);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16138)         reportBundle.setHospitalTotal(totalHospitalFees);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16139)     }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16140) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16141)     private void updateCategoryRow(ReportTemplateRow row, long countModifier, double grossValue, double hospitalFee, double discount, double professionalFee, double netValue) {
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16142)         System.out.println("updateCategoryRow");
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16143)         System.out.println("row = " + row);
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16144)         System.out.println("countModifier = " + countModifier);
40ae1f4a0cc (Buddhika Ariyaratne  2024-11-11 20:15:21 +0530 16145)         System.out.println("grossValue = " + grossValue);
6dcf4f2401a (DamithDeshan         2024-11-11 20:59:43 +0530 16146) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16147)         if (row.getItemCount() == null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16148)             row.setItemCount(0L);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16149)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16150)         if (row.getItemTotal() == null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16151)             row.setItemTotal(0.0);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16152)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16153)         if (row.getItemHospitalFee() == null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16154)             row.setItemHospitalFee(0.0);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16155)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16156)         if (row.getItemDiscountAmount() == null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16157)             row.setItemDiscountAmount(0.0);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16158)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16159)         if (row.getItemProfessionalFee() == null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16160)             row.setItemProfessionalFee(0.0);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16161)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16162)         if (row.getItemNetTotal() == null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16163)             row.setItemNetTotal(0.0);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16164)         }
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16165) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16166)         row.setItemCount(row.getItemCount() + countModifier);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16167)         row.setItemTotal(row.getItemTotal() + grossValue);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16168)         row.setItemHospitalFee(row.getItemHospitalFee() + hospitalFee);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16169)         row.setItemDiscountAmount(row.getItemDiscountAmount() + discount);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16170)         row.setItemProfessionalFee(row.getItemProfessionalFee() + professionalFee);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16171)         row.setItemNetTotal(row.getItemNetTotal() + netValue);
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16172) 
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16173)         // Since no item data is involved, only log category-specific updates
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16174)         if (row.getCategory() != null) {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16175)             System.out.println("Updated category: " + row.getCategory().getName()
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16176)                     + ", Count: " + row.getItemCount()
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16177)                     + ", Net Total: " + row.getItemNetTotal());
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16178)         } else {
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16179)             System.out.println("Error: Category in the row is null.");
43c5dceeba0 (Buddhika Ariyaratne  2024-09-13 03:06:06 +0530 16180)         }
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 16181)     }
4bdd5f29b22 (Buddhika Ariyaratne  2024-08-30 17:54:42 +0530 16182) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16183)     private void updateCategoryRow(ReportTemplateRow row, long countModifier, double grossValue, double hospitalFee, double discount, double netValue) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16184)         if (row.getItemCount() == null) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16185)             row.setItemCount(0L);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16186)         }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16187)         if (row.getItemTotal() == null) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16188)             row.setItemTotal(0.0);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16189)         }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16190)         if (row.getItemHospitalFee() == null) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16191)             row.setItemHospitalFee(0.0);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16192)         }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16193)         if (row.getItemDiscountAmount() == null) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16194)             row.setItemDiscountAmount(0.0);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16195)         }
63b6d66f5c6 (DamithDeshan         2024-11-02 22:00:18 +0530 16196) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16197)         if (row.getItemNetTotal() == null) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16198)             row.setItemNetTotal(0.0);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16199)         }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16200) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16201)         row.setItemCount(row.getItemCount() + countModifier);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16202)         row.setItemTotal(row.getItemTotal() + grossValue);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16203)         row.setItemHospitalFee(row.getItemHospitalFee() + hospitalFee);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16204)         row.setItemDiscountAmount(row.getItemDiscountAmount() + discount);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16205)         row.setItemNetTotal(row.getItemNetTotal() + netValue);
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16206) 
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16207)         // Since no item data is involved, only log category-specific updates
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16208)         if (row.getCategory() != null) {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16209)             System.out.println("Updated category: " + row.getCategory().getName()
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16210)                     + ", Count: " + row.getItemCount()
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16211)                     + ", Net Total: " + row.getItemNetTotal());
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16212)         } else {
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16213)             System.out.println("Error: Category in the row is null.");
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16214)         }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16215)     }
b54fc1a9bc0 (DamithDeshan         2024-11-02 17:41:25 +0530 16216) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16217)     public void generateOpdSaleByBill() {
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16218)         Map<String, Object> parameters = new HashMap<>();
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16219)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow("
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16220)                 + "bill, "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16221)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cash THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16222)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Card THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16223)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.MultiplePaymentMethods THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16224)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16225)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Credit THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16226)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff_Welfare THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16227)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Voucher THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16228)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.IOU THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16229)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Agent THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16230)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cheque THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16231)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Slip THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16232)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.ewallet THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16233)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientDeposit THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16234)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientPoints THEN p.paidValue ELSE 0 END), "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16235)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.OnlineSettlement THEN p.paidValue ELSE 0 END)) "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16236)                 + "FROM Payment p "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16237)                 + "JOIN p.bill bill "
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16238)                 + "WHERE p.retired <> :bfr AND bill.retired <> :br ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16239) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16240)         parameters.put("bfr", true);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16241)         parameters.put("br", true);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16242) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16243)         List<BillTypeAtomic> bts = BillTypeAtomic.findByServiceType(ServiceType.OPD);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16244)         jpql += "AND bill.billTypeAtomic in :bts ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16245)         parameters.put("bts", bts);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16246) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16247)         if (institution != null) {
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16248)             jpql += "AND bill.department.institution = :ins ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16249)             parameters.put("ins", institution);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16250)         }
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16251)         if (department != null) {
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16252)             jpql += "AND bill.department = :dep ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16253)             parameters.put("dep", department);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16254)         }
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16255)         if (site != null) {
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16256)             jpql += "AND bill.department.site = :site ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16257)             parameters.put("site", site);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16258)         }
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16259)         if (webUser != null) {
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16260)             jpql += "AND p.creater = :wu ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16261)             parameters.put("wu", webUser);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16262)         }
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16263)         if (paymentMethod != null) {
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16264)             jpql += "AND p.paymentMethod = :pm ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16265)             parameters.put("pm", paymentMethod);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16266)         }
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16267) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16268)         jpql += "AND p.createdAt BETWEEN :fd AND :td ";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16269)         parameters.put("fd", fromDate);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16270)         parameters.put("td", toDate);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16271) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16272)         jpql += "GROUP BY bill";
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16273) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16274)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16275) 
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16276)         bundle = new ReportTemplateRowBundle();
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16277)         bundle.setReportTemplateRows(rs);
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16278)         bundle.createRowValuesFromBill();
8e1a732c7dc (Dr M H B Ariyaratne  2024-11-04 12:58:26 +0530 16279)         bundle.calculateTotalsWithCredit();
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16280)     }
22a44acf1cd (Buddhika Ariyaratne  2024-09-14 04:44:11 +0530 16281) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16282)     public void listAgentChannelBookings() {
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16283)         String jpql = "SELECT b "
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16284)                 + " FROM Bill b "
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16285)                 + " WHERE b.retired = :ret "
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16286)                 + " AND b.billTypeAtomic IN :bts ";
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16287) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16288)         Map<String, Object> m = new HashMap<>();
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16289)         m.put("ret", false);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16290) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16291)         List<BillTypeAtomic> bts = new ArrayList<>();
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16292)         bts.add(BillTypeAtomic.CHANNEL_BOOKING_WITH_PAYMENT);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16293) //        bts.add(BillTypeAtomic.CHANNEL_CANCELLATION_WITH_PAYMENT);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16294) //        bts.add(BillTypeAtomic.CHANNEL_REFUND_WITH_PAYMENT);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16295)         m.put("bts", bts);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16296) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16297)         jpql += " AND b.paymentMethod = :pm ";
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16298)         m.put("pm", PaymentMethod.Agent);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16299) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16300)         if (institution != null) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16301)             jpql += " AND b.institution = :ins ";
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16302)             m.put("ins", institution);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16303)         }
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16304) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16305)         if (site != null) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16306)             jpql += " AND b.department.site = :site ";
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16307)             m.put("site", site);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16308)         }
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16309) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16310)         if (department != null) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16311)             jpql += " AND b.department = :dept ";
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16312)             m.put("dept", department);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16313)         }
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16314) 
9bb64fce08d (Dr M H B Ariyaratne  2024-10-17 01:49:54 +0530 16315)         if (toInstitution != null) {
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16316)             jpql += " AND b.toInstitution = :tins ";
252ba174ffd (Dr M H B Ariyaratne  2024-10-17 02:17:06 +0530 16317)             m.put("tins", toInstitution);
9bb64fce08d (Dr M H B Ariyaratne  2024-10-17 01:49:54 +0530 16318)         }
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16319) 
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16320)         if (toSite != null) {
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16321)             jpql += " AND b.toDepartment.site = :tsite ";
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16322)             m.put("tsite", toSite);
9bb64fce08d (Dr M H B Ariyaratne  2024-10-17 01:49:54 +0530 16323)         }
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16324) 
9bb64fce08d (Dr M H B Ariyaratne  2024-10-17 01:49:54 +0530 16325)         if (toDepartment != null) {
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16326)             jpql += " AND b.toDepartment = :tdept ";
753a1dd124e (Dr M H B Ariyaratne  2024-10-17 02:09:39 +0530 16327)             m.put("tdept", toDepartment);
9bb64fce08d (Dr M H B Ariyaratne  2024-10-17 01:49:54 +0530 16328)         }
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16329) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16330)         if (webUser != null) {
331080f7a10 (PasinduW99           2024-10-22 17:14:41 +0530 16331)             jpql += " AND b.creater = :wu ";
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16332)             m.put("wu", webUser);
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16333)         }
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16334) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16335)         jpql += " AND b.createdAt BETWEEN :fromDate AND :toDate ";
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16336)         m.put("fromDate", getFromDate());
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16337)         m.put("toDate", getToDate());
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16338) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16339)         bills = billFacade.findByJpql(jpql, m, TemporalType.TIMESTAMP);
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16340) 
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16341)         hosTotal = 0.0;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16342)         staffTotal = 0.0;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16343)         grossTotal = 0.0;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16344)         discountTotal = 0.0;
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16345)         amountTotal = 0.0;
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16346) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16347)         for (Bill b : bills) {
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16348)             if (!b.isCancelled() && !b.isRefunded()) {
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16349)                 hosTotal += b.getHospitalFee();
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16350)                 staffTotal += b.getStaffFee();
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16351)                 grossTotal += (b.getHospitalFee() + b.getStaffFee());
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16352)                 discountTotal += b.getDiscount();
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16353)                 amountTotal += b.getNetTotal();
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16354)             }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16355)         }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16356)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16357) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16358)     public void generateChannelIncome() {
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16359)         Map<String, Object> parameters = new HashMap<>();
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16360)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow("
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16361)                 + "bill, "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16362)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cash THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16363)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Card THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16364)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.MultiplePaymentMethods THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16365)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16366)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Credit THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16367)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff_Welfare THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16368)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Voucher THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16369)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.IOU THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16370)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Agent THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16371)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cheque THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16372)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Slip THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16373)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.ewallet THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16374)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientDeposit THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16375)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientPoints THEN p.paidValue ELSE 0 END), "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16376)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.OnlineSettlement THEN p.paidValue ELSE 0 END)) "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16377)                 + "FROM Payment p "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16378)                 + "JOIN p.bill bill "
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16379)                 + "WHERE p.retired <> :bfr AND bill.retired <> :br ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16380) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16381)         parameters.put("bfr", true);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16382)         parameters.put("br", true);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16383) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16384)         List<BillTypeAtomic> bts = BillTypeAtomic.findByServiceType(ServiceType.CHANNELLING);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16385)         jpql += "AND bill.billTypeAtomic IN :bts ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16386)         parameters.put("bts", bts);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16387) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16388)         if (institution != null) {
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16389)             jpql += "AND bill.department.institution = :ins ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16390)             parameters.put("ins", institution);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16391)         }
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16392)         if (department != null) {
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16393)             jpql += "AND bill.department = :dep ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16394)             parameters.put("dep", department);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16395)         }
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16396) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16397)         if (speciality != null) {
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16398)             jpql += "AND bill.staff.speciality = :spec ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16399)             parameters.put("spec", speciality);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16400)         }
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16401)         if (staff != null) {
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16402)             jpql += "AND bill.staff = :stf ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16403)             parameters.put("stf", staff);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16404)         }
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16405)         if (webUser != null) {
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16406)             jpql += "AND p.creater = :wu ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16407)             parameters.put("wu", webUser);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16408)         }
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16409)         if (paymentMethod != null) {
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16410)             jpql += "AND p.paymentMethod = :pm ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16411)             parameters.put("pm", paymentMethod);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16412)         }
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16413) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16414)         jpql += "AND p.createdAt BETWEEN :fd AND :td ";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16415)         parameters.put("fd", fromDate);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16416)         parameters.put("td", toDate);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16417) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16418)         // Ensure proper grouping
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16419)         jpql += "GROUP BY bill";
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16420) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16421)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16422) 
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16423)         bundle = new ReportTemplateRowBundle();
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16424)         bundle.setReportTemplateRows(rs);
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16425)         bundle.createRowValuesFromBill();
12a6d17b458 (PasinduW99           2024-10-19 17:14:56 +0530 16426)         bundle.calculateTotals();
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16427)     }
e2e69429d8f (PasinduW99           2024-10-16 02:26:22 +0530 16428) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16429)     public void billItemsToItamizedSaleReport(ReportTemplateRowBundle rtrb, List<BillItem> billItems) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16430)         Map<String, ReportTemplateRow> categoryMap = new HashMap<>();
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16431)         Map<String, ReportTemplateRow> itemSummaryMap = new HashMap<>();
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16432)         Map<String, List<ReportTemplateRow>> detailedBillItemRows = new HashMap<>();
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16433)         List<ReportTemplateRow> rowsToAdd = new ArrayList<>();
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16434)         double totalOpdServiceCollection = 0.0;
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16435) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16436)         for (BillItem bi : billItems) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16437)             System.out.println("Processing BillItem: " + bi);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16438) 
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 16439)             if (bi.getBill() == null || bi.getBill().getPaymentMethod() == null || bi.getBill().getPaymentMethod().getPaymentType() == PaymentType.NONE) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 16440)                 if (bi.getBill().getPaymentMethod() == null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 16441)                     if (bi.getBill().getPatientEncounter() == null) {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 16442)                         continue;
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 16443)                     }
ca47e9a32b9 (DamithDeshan         2024-11-20 00:11:39 +0530 16444)                 } else {
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 16445)                     continue;
431b3289ff3 (DamithDeshan         2024-11-19 22:56:50 +0530 16446)                 }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16447)             }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16448) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16449)             String categoryName = bi.getItem() != null && bi.getItem().getCategory() != null
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16450)                     ? bi.getItem().getCategory().getName()
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16451)                     : "No Category";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16452)             String itemName = bi.getItem() != null ? bi.getItem().getName() : "No Item";
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16453)             String itemKey = categoryName + "->" + itemName;
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16454) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16455)             System.out.println("Item Key: " + itemKey);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16456)             System.out.println("Category: " + categoryName + ", Item: " + itemName);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16457) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16458)             categoryMap.putIfAbsent(categoryName, new ReportTemplateRow());
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16459)             itemSummaryMap.putIfAbsent(itemKey, new ReportTemplateRow());
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16460)             detailedBillItemRows.putIfAbsent(itemKey, new ArrayList<>());
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16461) 
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16462)             // Summary Row for item categories
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16463)             if (bi.getItem() != null) {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16464)                 categoryMap.get(categoryName).setCategory(bi.getItem().getCategory());
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16465)                 itemSummaryMap.get(itemKey).setItem(bi.getItem());
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16466)             }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16467) 
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16468)             // Create a detailed row for each BillItem without item details to avoid redundancy
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16469)             ReportTemplateRow detailedRow = new ReportTemplateRow();
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16470)             detailedRow.setBillItem(bi);  // Assuming a method to set other attributes from BillItem
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16471) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16472)             double total = bi.getGrossValue();
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16473)             double hospitalFee = bi.getHospitalFee();
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16474)             double discount = bi.getDiscount();
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16475)             double professionalFee = bi.getStaffFee();
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16476)             double netTotal = bi.getNetValue();
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16477)             long countModifier = (bi.getBill().getBillClassType() == BillClassType.CancelledBill
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16478)                     || bi.getBill().getBillClassType() == BillClassType.RefundBill) ? -1 : 1;
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16479) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16480)             long count = (long) bi.getQtyAbsolute() * countModifier;
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16481) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16482)             if (countModifier == -1) {
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16483)                 total = -Math.abs(total);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16484)                 hospitalFee = -Math.abs(hospitalFee);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16485)                 discount = -Math.abs(discount);
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16486)                 professionalFee = -Math.abs(professionalFee);
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16487)                 netTotal = -Math.abs(netTotal);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16488)             }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16489) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16490)             totalOpdServiceCollection += netTotal;
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16491) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16492)             // Update the detailed row
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16493)             updateRow(detailedRow, count, total, hospitalFee, discount, professionalFee, netTotal);
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16494) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16495)             // Add the detailed row to the list for this item
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16496)             detailedBillItemRows.get(itemKey).add(detailedRow);
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16497) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16498)             // Update category summary row
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16499)             updateRow(categoryMap.get(categoryName), count, total, hospitalFee, discount, professionalFee, netTotal);
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16500) 
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16501)             // Update item summary row
8219a6a6c9b (Dr M H B Ariyaratne  2024-10-18 04:06:45 +0530 16502)             updateRow(itemSummaryMap.get(itemKey), count, total, hospitalFee, discount, professionalFee, netTotal);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16503)         }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16504) 
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16505)         // Add category rows and item summary rows, then each individual detailed bill item row within each item
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16506)         categoryMap.forEach((categoryName, catRow) -> {
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16507)             System.out.println("Adding category row to bundle: " + categoryName);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16508)             rowsToAdd.add(catRow);
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16509)             itemSummaryMap.entrySet().stream()
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16510)                     .filter(entry -> entry.getKey().startsWith(categoryName + "->"))
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16511)                     .forEach(entry -> {
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16512)                         System.out.println("Adding item summary row to bundle under category " + categoryName + ": " + entry.getValue().getItem().getName());
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16513)                         rowsToAdd.add(entry.getValue());
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16514)                         List<ReportTemplateRow> billItemRows = detailedBillItemRows.get(entry.getKey());
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16515)                         billItemRows.forEach(rowsToAdd::add);
b6cf271961b (Buddhika Ariyaratne  2024-09-12 20:53:02 +0530 16516)                     });
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16517)         });
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16518) 
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16519)         System.out.println("Total collected: " + totalOpdServiceCollection);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16520)         rtrb.getReportTemplateRows().addAll(rowsToAdd);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16521)         rtrb.setTotal(totalOpdServiceCollection);
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16522)     }
080f528e7f5 (Buddhika Ariyaratne  2024-09-12 20:38:37 +0530 16523) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16524)     public ReportTemplateRowBundle billItemsToBundleForOpd(ReportTemplateRowBundle rtrb, List<BillItem> billItems) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16525)         List<ReportTemplateRow> rowsToAdd = new ArrayList<>();
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16526)         long count = 1;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16527)         double grossTotal = 0.0;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16528)         double hospitalTotal = 0.0;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16529)         double discountTotal = 0.0;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16530)         double staffTotal = 0.0;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16531)         double netTotal = 0.0;
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16532) 
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16533)         System.out.println("Starting billItemsToBundleForOpd method");
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16534)         System.out.println("Initial state - count: " + count + ", grossTotal: " + grossTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16535)                 + ", hospitalTotal: " + hospitalTotal + ", discountTotal: " + discountTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16536)                 + ", staffTotal: " + staffTotal + ", netTotal: " + netTotal);
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16537) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16538)         for (BillItem bi : billItems) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16539)             System.out.println("Processing BillItem: " + bi);
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16540)             System.out.println("BillItem Details - FeeValue: " + bi.getFeeValue()
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16541)                     + ", HospitalFee: " + bi.getHospitalFee()
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16542)                     + ", Discount: " + bi.getDiscount()
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16543)                     + ", StaffFee: " + bi.getStaffFee()
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16544)                     + ", NetValue: " + bi.getNetValue());
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16545) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16546)             ReportTemplateRow row = new ReportTemplateRow(bi);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16547)             switch (bi.getBill().getBillClassType()) {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16548)                 case CancelledBill:
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16549)                 case RefundBill:
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16550)                     System.out.println("Handling Cancelled or Refund Bill");
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16551)                     count--;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16552)                     grossTotal -= Math.abs(bi.getFeeValue());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16553)                     hospitalTotal -= Math.abs(bi.getHospitalFee());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16554)                     discountTotal -= Math.abs(bi.getDiscount());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16555)                     staffTotal -= Math.abs(bi.getStaffFee());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16556)                     netTotal -= Math.abs(bi.getNetValue());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16557)                     break;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16558)                 case BilledBill:
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16559)                 case Bill:
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16560)                     System.out.println("Handling Billed or Bill");
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16561)                     count++;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16562)                     grossTotal += Math.abs(bi.getFeeValue());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16563)                     hospitalTotal += Math.abs(bi.getHospitalFee());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16564)                     discountTotal += Math.abs(bi.getDiscount());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16565)                     staffTotal += Math.abs(bi.getStaffFee());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16566)                     netTotal += Math.abs(bi.getNetValue());
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16567)                     break;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16568)                 default:
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16569)                     System.out.println("Unrecognized BillClassType: " + bi.getBill().getBillClassType());
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16570)                     continue; // Skip processing for unrecognized or unhandled bill types
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16571)             }
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16572)             System.out.println("Updated state after BillItem - count: " + count
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16573)                     + ", grossTotal: " + grossTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16574)                     + ", hospitalTotal: " + hospitalTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16575)                     + ", discountTotal: " + discountTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16576)                     + ", staffTotal: " + staffTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16577)                     + ", netTotal: " + netTotal);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16578)             rowsToAdd.add(row);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16579)         }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16580) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16581)         ReportTemplateRowBundle biBundle = new ReportTemplateRowBundle(rowsToAdd);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16582)         biBundle.setTotal(netTotal);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16583)         biBundle.setGrossTotal(grossTotal);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16584)         biBundle.setHospitalTotal(hospitalTotal);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16585)         biBundle.setStaffTotal(staffTotal);
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16586)         biBundle.setDiscount(discountTotal);
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16587) 
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16588)         System.out.println("Final state - count: " + count + ", grossTotal: " + grossTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16589)                 + ", hospitalTotal: " + hospitalTotal + ", discountTotal: " + discountTotal
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16590)                 + ", staffTotal: " + staffTotal + ", netTotal: " + netTotal);
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16591) 
7417ebb8a14 (Buddhika             2024-11-20 13:58:51 +0530 16592)         System.out.println("Completed billItemsToBundleForOpd method");
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16593)         return biBundle;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16594)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 16595) 
7aaa2db760a (Buddhika Ariyaratne  2024-08-30 04:55:01 +0530 16596)     private void updateRow(ReportTemplateRow row, long count, double total, double hospitalFee, double discount, double professionalFee, double netTotal) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16597)         System.out.println("Starting updateRow method");
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16598)         System.out.println("Initial values - Count: " + count + ", Total: " + total
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16599)                 + ", HospitalFee: " + hospitalFee + ", Discount: " + discount
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16600)                 + ", ProfessionalFee: " + professionalFee + ", NetTotal: " + netTotal);
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16601) 
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16602)         if (row.getItemCount() == null) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16603)             System.out.println("ItemCount is null. Initializing to 0.");
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16604)             row.setItemCount(0L);
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16605)         }
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16606)         if (row.getItemTotal() == null) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16607)             System.out.println("ItemTotal is null. Initializing to 0.0.");
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16608)             row.setItemTotal(0.0);
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16609)         }
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16610)         if (row.getItemHospitalFee() == null) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16611)             System.out.println("ItemHospitalFee is null. Initializing to 0.0.");
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16612)             row.setItemHospitalFee(0.0);
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16613)         }
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16614)         if (row.getItemDiscountAmount() == null) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16615)             System.out.println("ItemDiscountAmount is null. Initializing to 0.0.");
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16616)             row.setItemDiscountAmount(0.0);
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16617)         }
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16618)         if (row.getItemProfessionalFee() == null) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16619)             System.out.println("ItemProfessionalFee is null. Initializing to 0.0.");
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16620)             row.setItemProfessionalFee(0.0);
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16621)         }
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16622)         if (row.getItemNetTotal() == null) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16623)             System.out.println("ItemNetTotal is null. Initializing to 0.0.");
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16624)             row.setItemNetTotal(0.0);
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16625)         }
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16626) 
7aaa2db760a (Buddhika Ariyaratne  2024-08-30 04:55:01 +0530 16627)         row.setItemCount(row.getItemCount() + count);
7aaa2db760a (Buddhika Ariyaratne  2024-08-30 04:55:01 +0530 16628)         row.setItemTotal(row.getItemTotal() + total);
7aaa2db760a (Buddhika Ariyaratne  2024-08-30 04:55:01 +0530 16629)         row.setItemHospitalFee(row.getItemHospitalFee() + hospitalFee);
7aaa2db760a (Buddhika Ariyaratne  2024-08-30 04:55:01 +0530 16630)         row.setItemDiscountAmount(row.getItemDiscountAmount() + discount);
7aaa2db760a (Buddhika Ariyaratne  2024-08-30 04:55:01 +0530 16631)         row.setItemProfessionalFee(row.getItemProfessionalFee() + professionalFee);
7aaa2db760a (Buddhika Ariyaratne  2024-08-30 04:55:01 +0530 16632)         row.setItemNetTotal(row.getItemNetTotal() + netTotal);
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16633) 
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16634)         System.out.println("Updated row values - ItemCount: " + row.getItemCount()
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16635)                 + ", ItemTotal: " + row.getItemTotal()
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16636)                 + ", ItemHospitalFee: " + row.getItemHospitalFee()
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16637)                 + ", ItemDiscountAmount: " + row.getItemDiscountAmount()
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16638)                 + ", ItemProfessionalFee: " + row.getItemProfessionalFee()
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16639)                 + ", ItemNetTotal: " + row.getItemNetTotal());
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16640) 
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 16641)         if (row.getItem() != null) {
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16642)             System.out.println("Updated row: Item Name: " + row.getItem().getName()
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 16643)                     + ", Count: " + row.getItemCount()
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 16644)                     + ", Net Total: " + row.getItemNetTotal());
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16645)         } else {
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 16646)             System.out.println("Error: Item in the row is null.");
0df7356aa77 (Buddhika Ariyaratne  2024-08-30 05:54:54 +0530 16647)         }
7fbc5983457 (Buddhika Ariyaratne  2024-08-31 09:26:59 +0530 16648) 
db4524a3407 (Buddhika             2024-11-20 14:00:59 +0530 16649)         System.out.println("Completed updateRow method");
fd1076551eb (Buddhika Ariyaratne  2024-08-29 23:05:48 +0530 16650)     }
fd1076551eb (Buddhika Ariyaratne  2024-08-29 23:05:48 +0530 16651) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 16652)     public void generateAllCashierSummary() {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16653)         Map<String, Object> parameters = new HashMap<>();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16654)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow("
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16655)                 + "bill.department, FUNCTION('date', p.createdAt), p.creater, "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16656)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cash THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16657)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Card THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16658)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.MultiplePaymentMethods THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16659)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16660)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Credit THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16661)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff_Welfare THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16662)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Voucher THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16663)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.IOU THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16664)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Agent THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16665)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cheque THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16666)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Slip THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16667)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.ewallet THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16668)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientDeposit THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16669)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientPoints THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16670)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.OnlineSettlement THEN p.paidValue ELSE 0 END)) "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16671)                 + "FROM Payment p "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16672)                 + "JOIN p.bill bill "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16673)                 + "WHERE p.retired <> :bfr AND bill.retired <> :br ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16674) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16675)         parameters.put("bfr", true);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16676)         parameters.put("br", true);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16677) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16678)         if (institution != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16679)             jpql += "AND bill.department.institution = :ins ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16680)             parameters.put("ins", institution);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16681)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16682)         if (department != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16683)             jpql += "AND bill.department = :dep ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16684)             parameters.put("dep", department);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16685)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16686)         if (site != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16687)             jpql += "AND bill.department.site = :site ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16688)             parameters.put("site", site);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16689)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16690)         if (webUser != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16691)             jpql += "AND p.creater = :wu ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16692)             parameters.put("wu", webUser);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16693)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16694)         if (paymentMethod != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16695)             jpql += "AND p.paymentMethod = :pm ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16696)             parameters.put("pm", paymentMethod);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16697)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16698) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16699)         jpql += "AND p.createdAt BETWEEN :fd AND :td ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16700)         parameters.put("fd", fromDate);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16701)         parameters.put("td", toDate);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16702) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16703)         jpql += "GROUP BY bill.department, FUNCTION('date', p.createdAt), p.creater";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16704) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16705)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16706) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16707)         bundle = new ReportTemplateRowBundle();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16708)         bundle.setReportTemplateRows(rs);
8e1a732c7dc (Dr M H B Ariyaratne  2024-11-04 12:58:26 +0530 16709)         bundle.calculateTotalsWithCredit();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16710)     }
c9895adbafa (DamithDeshan         2024-10-20 20:10:39 +0530 16711) 
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16712)     public void generateDepartmentRevenueReport() {
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16713)         Map<String, Object> parameters = new HashMap<>();
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16714)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow("
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16715)                 + "bill.toDepartment, bill.billTypeAtomic, "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16716)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cash THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16717)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Card THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16718)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.MultiplePaymentMethods THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16719)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16720)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Credit THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16721)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff_Welfare THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16722)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Voucher THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16723)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.IOU THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16724)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Agent THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16725)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cheque THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16726)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Slip THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16727)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.ewallet THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16728)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientDeposit THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16729)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientPoints THEN p.paidValue ELSE 0 END), "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16730)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.OnlineSettlement THEN p.paidValue ELSE 0 END)) "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16731)                 + "FROM Payment p "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16732)                 + "JOIN p.bill bill "
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16733)                 + "WHERE p.retired <> :bfr AND bill.retired <> :br ";
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16734) 
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16735)         parameters.put("bfr", true);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16736)         parameters.put("br", true);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16737) 
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16738)         if (institution != null) {
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16739)             jpql += "AND bill.department.institution = :ins ";
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16740)             parameters.put("ins", institution);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16741)         }
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16742)         if (department != null) {
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16743)             jpql += "AND bill.department = :dep ";
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16744)             parameters.put("dep", department);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16745)         }
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16746)         if (site != null) {
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16747)             jpql += "AND bill.department.site = :site ";
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16748)             parameters.put("site", site);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16749)         }
eb839f92fd6 (Buddhika Ariyaratne  2024-10-27 13:46:06 +0530 16750) 
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16751)         if (toInstitution != null) {
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16752)             jpql += "AND bill.toDepartment.institution = :ins ";
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16753)             parameters.put("ins", institution);
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16754)         }
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16755)         if (toDepartment != null) {
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16756)             jpql += "AND bill.toDepartment = :dep ";
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16757)             parameters.put("dep", department);
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16758)         }
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16759)         if (toSite != null) {
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16760)             jpql += "AND bill.toDepartment.site = :site ";
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16761)             parameters.put("site", site);
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16762)         }
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16763) 
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16764)         jpql += "AND p.createdAt BETWEEN :fd AND :td ";
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16765)         parameters.put("fd", fromDate);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16766)         parameters.put("td", toDate);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16767) 
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16768)         jpql += "GROUP BY bill.toDepartment, bill.billTypeAtomic";
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16769)         System.out.println("jpql = " + jpql);
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16770)         System.out.println("parameters = " + parameters);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16771)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16772) 
b669df2be4a (Buddhika Ariyaratne  2024-10-24 15:35:36 +0530 16773)         System.out.println("rs = " + rs);
eb839f92fd6 (Buddhika Ariyaratne  2024-10-27 13:46:06 +0530 16774) 
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16775)         bundle = new ReportTemplateRowBundle();
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16776)         bundle.setReportTemplateRows(rs);
8e1a732c7dc (Dr M H B Ariyaratne  2024-11-04 12:58:26 +0530 16777)         bundle.calculateTotalsWithCredit();
71a7ae0f50a (DamithDeshan         2024-10-19 20:33:28 +0530 16778)     }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16779) 
be07e1d3a5c (Buddhika Ariyaratne  2024-09-29 17:46:24 +0530 16780)     public void generateTotalCashierSummary() {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16781)         Map<String, Object> parameters = new HashMap<>();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16782)         String jpql = "SELECT new com.divudi.data.ReportTemplateRow("
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16783)                 + "bill.department, FUNCTION('date', p.createdAt), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16784)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cash THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16785)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Card THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16786)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.MultiplePaymentMethods THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16787)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16788)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Credit THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16789)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Staff_Welfare THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16790)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Voucher THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16791)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.IOU THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16792)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Agent THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16793)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Cheque THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16794)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.Slip THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16795)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.ewallet THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16796)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientDeposit THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16797)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.PatientPoints THEN p.paidValue ELSE 0 END), "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16798)                 + "SUM(CASE WHEN p.paymentMethod = com.divudi.data.PaymentMethod.OnlineSettlement THEN p.paidValue ELSE 0 END)) "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16799)                 + "FROM Payment p "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16800)                 + "JOIN p.bill bill "
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16801)                 + "WHERE p.retired <> :bfr AND bill.retired <> :br ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16802) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16803)         parameters.put("bfr", true);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16804)         parameters.put("br", true);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16805) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16806)         if (institution != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16807)             jpql += "AND bill.department.institution = :ins ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16808)             parameters.put("ins", institution);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16809)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16810)         if (department != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16811)             jpql += "AND bill.department = :dep ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16812)             parameters.put("dep", department);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16813)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16814)         if (site != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16815)             jpql += "AND bill.department.site = :site ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16816)             parameters.put("site", site);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16817)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16818)         if (webUser != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16819)             jpql += "AND p.creater = :wu ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16820)             parameters.put("wu", webUser);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16821)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16822)         if (paymentMethod != null) {
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16823)             jpql += "AND p.paymentMethod = :pm ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16824)             parameters.put("pm", paymentMethod);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16825)         }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16826) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16827)         jpql += "AND p.createdAt BETWEEN :fd AND :td ";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16828)         parameters.put("fd", fromDate);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16829)         parameters.put("td", toDate);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16830) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16831)         jpql += "GROUP BY bill.department, FUNCTION('date', p.createdAt)";
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16832) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16833)         List<ReportTemplateRow> rs = (List<ReportTemplateRow>) paymentFacade.findLightsByJpql(jpql, parameters, TemporalType.TIMESTAMP);
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16834) 
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16835)         bundle = new ReportTemplateRowBundle();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16836)         bundle.setReportTemplateRows(rs);
8e1a732c7dc (Dr M H B Ariyaratne  2024-11-04 12:58:26 +0530 16837)         bundle.calculateTotalsWithCredit();
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16838)     }
a7f322b938e (Buddhika Ariyaratne  2024-08-29 08:10:16 +0530 16839) 
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16840)     public void generateShiftStartEndSummary() {
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16841)         Map<String, Object> parameters = new HashMap<>();
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16842)         String jpql = "SELECT b"
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16843)                 + " FROM Bill b"
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16844)                 + " WHERE b.retired =:ret";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16845) 
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16846)         parameters.put("ret", false);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16847) 
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16848)         if (institution != null) {
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16849)             jpql += " AND b.department.institution=:ins";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16850)             parameters.put("ins", institution);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16851)         }
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16852)         if (department != null) {
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16853)             jpql += " AND b.department=:dep";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16854)             parameters.put("dep", department);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16855)         }
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16856)         if (site != null) {
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16857)             jpql += " AND b.department.site=:site";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16858)             parameters.put("site", site);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16859)         }
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16860)         if (webUser != null) {
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16861)             jpql += " AND b.creater =:wu";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16862)             parameters.put("wu", webUser);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16863)         }
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16864)         jpql += " AND b.billTypeAtomic=:bta ";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16865)         parameters.put("bta", BillTypeAtomic.FUND_SHIFT_END_BILL);
c17bce3e507 (Buddhika Ariyaratne  2024-09-18 23:19:36 +0530 16866) 
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16867)         jpql += " AND b.createdAt BETWEEN :fd AND :td";
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16868)         parameters.put("fd", fromDate);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16869)         parameters.put("td", toDate);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16870) 
c17bce3e507 (Buddhika Ariyaratne  2024-09-18 23:19:36 +0530 16871)         bills = billFacade.findByJpql(jpql, parameters, TemporalType.TIMESTAMP);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16872)         System.out.println("bills = " + bills);
54a66655171 (DamithDeshan         2024-09-17 20:49:01 +0530 16873)     }
c17bce3e507 (Buddhika Ariyaratne  2024-09-18 23:19:36 +0530 16874) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16875)     public SearchController() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16876)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16877) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16878)     public class PharmacyAdjustmentRow {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16879) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16880)         Item itm;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16881)         double purchaseRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16882)         double saleRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16883)         double befoerQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16884)         double afterQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16885)         double adjusetedQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16886)         double befoerVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16887)         double afterVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16888)         double adjusetedVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16889)         String batchNo;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16890)         Date expiry;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16891) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16892)         public PharmacyAdjustmentRow() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16893)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16894) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16895)         public PharmacyAdjustmentRow(Item itm, double purchaseRate, double saleRate, double befoerQty, double afterQty, double adjusetedQty, String batchNo, Date expiry) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16896)             this.itm = itm;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16897)             this.purchaseRate = purchaseRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16898)             this.saleRate = saleRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16899)             this.befoerQty = befoerQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16900)             this.afterQty = afterQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16901)             this.adjusetedQty = adjusetedQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16902)             this.batchNo = batchNo;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16903)             this.expiry = expiry;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16904)             this.adjusetedVal = adjusetedQty * purchaseRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16905)             this.befoerVal = befoerQty * purchaseRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16906)             this.afterVal = afterQty * purchaseRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16907)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16908) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16909)         public Item getItm() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16910)             return itm;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16911)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16912) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16913)         public void setItm(Item itm) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16914)             this.itm = itm;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16915)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16916) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16917)         public double getPurchaseRate() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16918)             return purchaseRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16919)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16920) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16921)         public void setPurchaseRate(double purchaseRate) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16922)             this.purchaseRate = purchaseRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16923)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16924) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16925)         public double getSaleRate() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16926)             return saleRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16927)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16928) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16929)         public void setSaleRate(double saleRate) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16930)             this.saleRate = saleRate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16931)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16932) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16933)         public double getBefoerQty() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16934)             return befoerQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16935)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16936) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16937)         public void setBefoerQty(double befoerQty) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16938)             this.befoerQty = befoerQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16939)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16940) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16941)         public double getAfterQty() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16942)             return afterQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16943)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16944) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16945)         public void setAfterQty(double afterQty) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16946)             this.afterQty = afterQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16947)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16948) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16949)         public double getAdjusetedQty() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16950)             return adjusetedQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16951)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16952) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16953)         public void setAdjusetedQty(double adjusetedQty) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16954)             this.adjusetedQty = adjusetedQty;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16955)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16956) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16957)         public String getBatchNo() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16958)             return batchNo;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16959)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16960) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16961)         public void setBatchNo(String batchNo) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16962)             this.batchNo = batchNo;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16963)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16964) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16965)         public Date getExpiry() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16966)             return expiry;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16967)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16968) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16969)         public void setExpiry(Date expiry) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16970)             this.expiry = expiry;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16971)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16972) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16973)         public double getBefoerVal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16974)             return befoerVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16975)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16976) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16977)         public void setBefoerVal(double befoerVal) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16978)             this.befoerVal = befoerVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16979)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16980) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16981)         public double getAfterVal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16982)             return afterVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16983)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16984) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16985)         public void setAfterVal(double afterVal) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16986)             this.afterVal = afterVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16987)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16988) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16989)         public double getAdjusetedVal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16990)             return adjusetedVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16991)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16992) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16993)         public void setAdjusetedVal(double adjusetedVal) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16994)             this.adjusetedVal = adjusetedVal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16995)         }
c9895adbafa (DamithDeshan         2024-10-20 20:10:39 +0530 16996) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16997)     }
4499662440a (Thiwanka Madushan    2024-01-04 14:12:17 +0530 16998) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 16999)     public Date getToDate() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17000)         if (toDate == null) {
03d6c8d6d29 (Dr M H B Ariyaratne  2024-01-02 13:19:18 +0530 17001)             toDate = commonFunctions.getEndOfDay(new Date());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17002)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17003)         return toDate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17004)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17005) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17006)     public void setToDate(Date toDate) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17007)         this.toDate = toDate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17008)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17009) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17010)     public Date getFromDate() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17011)         if (fromDate == null) {
03d6c8d6d29 (Dr M H B Ariyaratne  2024-01-02 13:19:18 +0530 17012)             fromDate = commonFunctions.getStartOfDay(new Date());
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17013)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17014)         return fromDate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17015)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17016) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17017)     public void setFromDate(Date fromDate) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17018)         this.fromDate = fromDate;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17019)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17020) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17021)     public SearchKeyword getSearchKeyword() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17022)         if (searchKeyword == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17023)             searchKeyword = new SearchKeyword();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17024)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17025)         return searchKeyword;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17026)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17027) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17028)     public void setSearchKeyword(SearchKeyword searchKeyword) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17029)         this.searchKeyword = searchKeyword;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17030)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17031) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17032)     public List<Bill> getBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17033)         return bills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17034)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17035) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17036)     public void setBills(List<Bill> bills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17037)         this.bills = bills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17038)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17039) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17040)     public BillFacade getBillFacade() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17041)         return billFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17042)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17043) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17044)     public void setBillFacade(BillFacade billFacade) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17045)         this.billFacade = billFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17046)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17047) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17048)     public SessionController getSessionController() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17049)         return sessionController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17050)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17051) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17052)     public void setSessionController(SessionController sessionController) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17053)         this.sessionController = sessionController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17054)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17055) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17056)     public BillFeeFacade getBillFeeFacade() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17057)         return billFeeFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17058)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17059) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17060)     public void setBillFeeFacade(BillFeeFacade billFeeFacade) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17061)         this.billFeeFacade = billFeeFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17062)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17063) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17064)     public List<BillFee> getBillFees() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17065)         return billFees;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17066)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17067) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17068)     public void setBillFees(List<BillFee> billFees) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17069)         this.billFees = billFees;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17070)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17071) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17072)     public List<PatientInvestigation> getPatientInvestigations() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17073)         return patientInvestigations;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17074)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17075) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17076)     public void setPatientInvestigations(List<PatientInvestigation> patientInvestigations) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17077)         this.patientInvestigations = patientInvestigations;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17078)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17079) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17080)     public PatientInvestigationFacade getPatientInvestigationFacade() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17081)         return patientInvestigationFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17082)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17083) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17084)     public void setPatientInvestigationFacade(PatientInvestigationFacade patientInvestigationFacade) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17085)         this.patientInvestigationFacade = patientInvestigationFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17086)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17087) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17088)     public List<BillItem> getBillItems() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17089)         return billItems;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17090)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17091) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17092)     public void setBillItems(List<BillItem> billItems) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17093)         this.billItems = billItems;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17094)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17095) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17096)     public BillItemFacade getBillItemFacade() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17097)         return billItemFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17098)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17099) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17100)     public void setBillItemFacade(BillItemFacade billItemFacade) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17101)         this.billItemFacade = billItemFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17102)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17103) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17104)     public int getMaxResult() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17105) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17106)         return maxResult;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17107)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17108) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17109)     public void setMaxResult(int maxResult) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17110)         this.maxResult = maxResult;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17111)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17112) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17113)     public List<Bill> getSelectedBills() {
e6578564b09 (Senula88             2024-04-18 21:51:33 +0530 17114)         if (selectedBills == null) {
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 17115)             selectedBills = new ArrayList<>();
d1e44dcf9e4 (Senula88             2024-04-18 15:26:48 +0530 17116)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17117)         return selectedBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17118)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17119) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17120)     public void setSelectedBills(List<Bill> selectedBills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17121)         this.selectedBills = selectedBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17122)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17123) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17124)     public PharmacyBean getPharmacyBean() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17125)         return pharmacyBean;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17126)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17127) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17128)     public void setPharmacyBean(PharmacyBean pharmacyBean) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17129)         this.pharmacyBean = pharmacyBean;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17130)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17131) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17132)     public BillType getBillType() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17133)         return billType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17134)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17135) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17136)     public void setBillType(BillType billType) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17137)         this.billType = billType;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17138)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17139) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17140)     public TransferController getTransferController() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17141)         return transferController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17142)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17143) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17144)     public void setTransferController(TransferController transferController) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17145)         this.transferController = transferController;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17146)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17147) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17148)     public List<PatientInvestigation> getPatientInvestigationsSigle() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17149)         if (patientInvestigationsSigle == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17150)             createPatientInvestigationsTableSingle();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17151)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17152)         return patientInvestigationsSigle;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17153)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17154) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17155)     public void setPatientInvestigationsSigle(List<PatientInvestigation> patientInvestigationsSigle) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17156)         this.patientInvestigationsSigle = patientInvestigationsSigle;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17157)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17158) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17159)     public Bill getCancellingIssueBill() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17160)         return cancellingIssueBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17161)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17162) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17163)     public void setCancellingIssueBill(Bill cancellingIssueBill) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17164)         this.cancellingIssueBill = cancellingIssueBill;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17165)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17166) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17167)     public double getNetTotalValue() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17168)         return netTotalValue;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17169)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17170) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17171)     public void setNetTotalValue(double netTotalValue) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17172)         this.netTotalValue = netTotalValue;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17173)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17174) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17175)     public List<BillFee> getBillFeesDone() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17176)         return billFeesDone;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17177)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17178) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17179)     public void setBillFeesDone(List<BillFee> billFeesDone) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17180)         this.billFeesDone = billFeesDone;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17181)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17182) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17183)     public Speciality getSpeciality() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17184)         return speciality;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17185)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17186) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17187)     public void setSpeciality(Speciality speciality) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17188)         this.speciality = speciality;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17189)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17190) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17191)     public PatientEncounter getPatientEncounter() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17192)         return patientEncounter;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17193)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17194) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17195)     public void setPatientEncounter(PatientEncounter patientEncounter) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17196)         this.patientEncounter = patientEncounter;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17197)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17198) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17199)     public Staff getStaff() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17200)         return staff;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17201)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17202) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17203)     public void setStaff(Staff staff) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17204)         this.staff = staff;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17205)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17206) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17207)     public Item getItem() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17208)         return item;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17209)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17210) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17211)     public void setItem(Item item) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17212)         this.item = item;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17213)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17214) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17215)     public double getDueTotal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17216)         return dueTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17217)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17218) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17219)     public void setDueTotal(double dueTotal) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17220)         this.dueTotal = dueTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17221)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17222) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17223)     public double getDoneTotal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17224)         return doneTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17225)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17226) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17227)     public void setDoneTotal(double doneTotal) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17228)         this.doneTotal = doneTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17229)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17230) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17231)     public double getTotalPaying() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17232)         return totalPaying;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17233)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17234) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17235)     public void setTotalPaying(double totalPaying) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17236)         this.totalPaying = totalPaying;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17237)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17238) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17239)     public List<PatientInvestigation> getUserPatientInvestigations() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17240)         return userPatientInvestigations;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17241)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17242) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17243)     public void setUserPatientInvestigations(List<PatientInvestigation> userPatientInvestigations) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17244)         this.userPatientInvestigations = userPatientInvestigations;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17245)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17246) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17247)     public double getNetTotal() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17248)         return netTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17249)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17250) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17251)     public void setNetTotal(double netTotal) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17252)         this.netTotal = netTotal;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17253)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17254) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17255)     public List<Bill> getAceptPaymentBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17256)         if (aceptPaymentBills == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17257)             aceptPaymentBills = new ArrayList<>();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17258)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17259)         return aceptPaymentBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17260)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17261) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17262)     public void setAceptPaymentBills(List<Bill> aceptPaymentBills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17263)         this.aceptPaymentBills = aceptPaymentBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17264)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17265) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17266)     public String getMenuBarSearchText() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17267)         return menuBarSearchText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17268)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17269) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17270)     public void setMenuBarSearchText(String menuBarSearchText) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17271)         this.menuBarSearchText = menuBarSearchText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17272)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17273) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17274)     public boolean isChannelingPanelVisible() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17275)         return channelingPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17276)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17277) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17278)     public void setChannelingPanelVisible(boolean channelingPanelVisible) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17279)         this.channelingPanelVisible = channelingPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17280)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17281) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17282)     public boolean isPharmacyPanelVisible() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17283)         return pharmacyPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17284)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17285) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17286)     public void setPharmacyPanelVisible(boolean pharmacyPanelVisible) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17287)         this.pharmacyPanelVisible = pharmacyPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17288)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17289) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17290)     public boolean isOpdPanelVisible() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17291)         return opdPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17292)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17293) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17294)     public void setOpdPanelVisible(boolean opdPanelVisible) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17295)         this.opdPanelVisible = opdPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17296)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17297) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17298)     public boolean isInwardPanelVisible() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17299)         return inwardPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17300)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17301) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17302)     public void setInwardPanelVisible(boolean inwardPanelVisible) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17303)         this.inwardPanelVisible = inwardPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17304)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17305) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17306)     public boolean isLabPanelVisile() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17307)         return labPanelVisile;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17308)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17309) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17310)     public void setLabPanelVisile(boolean labPanelVisile) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17311)         this.labPanelVisile = labPanelVisile;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17312)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17313) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17314)     public boolean isPatientPanelVisible() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17315)         return patientPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17316)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17317) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17318)     public void setPatientPanelVisible(boolean patientPanelVisible) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17319)         this.patientPanelVisible = patientPanelVisible;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17320)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17321) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17322)     public List<Bill> getChannellingBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17323)         return channellingBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17324)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17325) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17326)     public void setChannellingBills(List<Bill> channellingBills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17327)         this.channellingBills = channellingBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17328)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17329) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17330)     public List<Bill> getOpdBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17331)         return opdBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17332)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17333) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17334)     public void setOpdBills(List<Bill> opdBills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17335)         this.opdBills = opdBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17336)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17337) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17338)     public List<Bill> getPharmacyBills() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17339)         return pharmacyBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17340)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17341) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17342)     public void setPharmacyBills(List<Bill> pharmacyBills) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17343)         this.pharmacyBills = pharmacyBills;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17344)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17345) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17346)     public List<Admission> getAdmissions() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17347)         return admissions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17348)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17349) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17350)     public void setAdmissions(List<Admission> admissions) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17351)         this.admissions = admissions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17352)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17353) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17354)     public List<PatientInvestigation> getPis() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17355)         return pis;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17356)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17357) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17358)     public void setPis(List<PatientInvestigation> pis) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17359)         this.pis = pis;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17360)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17361) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17362)     public List<Patient> getPatients() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17363)         return patients;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17364)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17365) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17366)     public void setPatients(List<Patient> patients) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17367)         this.patients = patients;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17368)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17369) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17370)     public List<BillSession> getBillSessions() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17371)         return billSessions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17372)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17373) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17374)     public void setBillSessions(List<BillSession> billSessions) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17375)         this.billSessions = billSessions;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17376)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17377) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17378)     public BillSession getSelectedBillSession() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17379)         return selectedBillSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17380)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17381) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17382)     public void setSelectedBillSession(BillSession selectedBillSession) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17383)         this.selectedBillSession = selectedBillSession;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17384)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17385) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17386)     public List<String> getTelephoneNumbers() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17387)         return telephoneNumbers;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17388)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17389) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17390)     public void setTelephoneNumbers(List<String> telephoneNumbers) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17391)         this.telephoneNumbers = telephoneNumbers;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17392)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17393) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17394)     public List<String> getSelectedTelephoneNumbers() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17395)         return selectedTelephoneNumbers;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17396)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17397) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17398)     public void setSelectedTelephoneNumbers(List<String> selectedTelephoneNumbers) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17399)         this.selectedTelephoneNumbers = selectedTelephoneNumbers;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17400)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17401) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17402)     boolean paginator = true;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17403)     int rows = 20;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17404) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17405)     public boolean isPaginator() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17406)         return paginator;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17407)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17408) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17409)     public void setPaginator(boolean paginator) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17410)         this.paginator = paginator;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17411)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17412) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17413)     public int getRows() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17414)         return rows;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17415)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17416) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17417)     public void setRows(int rows) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17418)         this.rows = rows;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17419)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17420) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17421)     public String getSmsText() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17422)         return smsText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17423)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17424) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17425)     public void setSmsText(String smsText) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17426)         this.smsText = smsText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17427)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17428) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17429)     public String getUniqueSmsText() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17430)         return uniqueSmsText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17431)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17432) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17433)     public void setUniqueSmsText(String uniqueSmsText) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17434)         this.uniqueSmsText = uniqueSmsText;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17435)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17436) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17437)     public ReportKeyWord getReportKeyWord() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17438)         if (reportKeyWord == null) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17439)             reportKeyWord = new ReportKeyWord();
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17440)         }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17441)         return reportKeyWord;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17442)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17443) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17444)     public void setReportKeyWord(ReportKeyWord reportKeyWord) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17445)         this.reportKeyWord = reportKeyWord;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17446)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17447) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17448)     public StockFacade getStockFacade() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17449)         return stockFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17450)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17451) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17452)     public void setStockFacade(StockFacade stockFacade) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17453)         this.stockFacade = stockFacade;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17454)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17455) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17456)     public List<PharmacyAdjustmentRow> getPharmacyAdjustmentRows() {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17457)         return pharmacyAdjustmentRows;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17458)     }
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17459) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17460)     public void setPharmacyAdjustmentRows(List<PharmacyAdjustmentRow> pharmacyAdjustmentRows) {
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17461)         this.pharmacyAdjustmentRows = pharmacyAdjustmentRows;
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17462)     }
8731764c7f4 (Dr M H B Ariyaratne  2024-05-02 14:36:52 +0530 17463) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17464)     private StreamedContent fileBillsAndBillItemsForDownload;
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17465) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17466)     public StreamedContent getFileBillsAndBillItemsForDownload() {
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17467)         prepareDataBillsAndBillItemsDownload();  // Prepare data and create the Excel file
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17468)         return fileBillsAndBillItemsForDownload;
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17469)     }
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17470) 
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 17471)     public String navigateBack() {
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 17472)         return backLink;
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 17473)     }
6722e4e7bf9 (Buddhika Ariyaratne  2024-09-10 08:32:42 +0530 17474) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17475)     public List<BillTypeAtomic> prepareDistinctBillTypeAtomic() {
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17476)         String jpql = "SELECT DISTINCT b.billTypeAtomic FROM Bill b JOIN b.payments p";
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17477)         List<?> results = billFacade.findLightsByJpql(jpql);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17478)         List<BillTypeAtomic> billTypeAtomics = new ArrayList<>();
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17479) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17480)         for (Object result : results) {
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17481)             if (result instanceof BillTypeAtomic) {
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17482)                 billTypeAtomics.add((BillTypeAtomic) result);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17483)             }
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17484)         }
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17485) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17486)         return billTypeAtomics;
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17487)     }
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17488) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17489)     public StreamedContent getFileForBillsAndBillItemsForDownload() {
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17490)         prepareDataBillsAndBillItemsDownload();  // Prepare data and create the Excel file
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17491)         return fileBillsAndBillItemsForDownload;       // This should now contain the generated Excel file
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17492)     }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17493) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17494)     public void createBillsBillItemsList(Set<Bill> bills, List<BillItem> billItems) throws IOException {
25065561739 (Buddhika Ariyaratne  2024-08-27 07:09:33 +0530 17495)         System.out.println("createBillsBillItemsList");
25065561739 (Buddhika Ariyaratne  2024-08-27 07:09:33 +0530 17496)         System.out.println("billItems = " + billItems);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17497)         XSSFWorkbook workbook = new XSSFWorkbook();
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17498)         XSSFSheet sheet = workbook.createSheet("Bills Details");
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17499) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17500)         int rowIdx = 0;
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17501)         Row headerRow = sheet.createRow(rowIdx++);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17502)         // Headers for both bills and bill items
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17503)         String[] headers = {
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 17504)             "Bill ID", "Institution Name", "Department Name", "Patient Name", "Staff Name", "User", "Bill Type", "Total", "Discount", "Net Total", "Payment Method",
48be3b1d2fa (Buddhika Ariyaratne  2024-11-19 21:27:22 +0530 17505)             "Bill Item Name", "Bill Item Code", "Item Type", "Quantity", "Rate", "Gross Value", "Bill Item Discount", "Net Value"
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17506)         };
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17507)         for (int i = 0; i < headers.length; i++) {
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17508)             headerRow.createCell(i).setCellValue(headers[i]);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17509)         }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17510) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17511)         // Fill the sheet with bill data first, then bill item data in subsequent rows
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17512)         for (Bill bill : bills) {
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17513)             Row billRow = sheet.createRow(rowIdx++);
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17514)             int colIdx = 0;
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 17515)             billRow.createCell(colIdx++).setCellValue(bill.getId() != null ? bill.getId().toString() : "");
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17516)             billRow.createCell(colIdx++).setCellValue(bill.getInstitution() != null ? bill.getInstitution().getName() : "");
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17517)             billRow.createCell(colIdx++).setCellValue(bill.getDepartment() != null ? bill.getDepartment().getName() : "");
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17518)             billRow.createCell(colIdx++).setCellValue(bill.getPatient() != null && bill.getPatient().getPerson() != null ? bill.getPatient().getPerson().getName() : "");
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17519)             billRow.createCell(colIdx++).setCellValue(bill.getStaff() != null && bill.getStaff().getPerson() != null ? bill.getStaff().getPerson().getNameWithTitle() : "");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 17520)             billRow.createCell(colIdx++).setCellValue(bill.getCreater() != null && bill.getCreater().getWebUserPerson() != null ? bill.getCreater().getWebUserPerson().getName() : "");
d6fd64b773f (Thiwanka570          2024-09-01 14:40:49 +0530 17521)             billRow.createCell(colIdx++).setCellValue(bill.getBillTypeAtomic() != null ? bill.getBillTypeAtomic().getLabel() : "");
f7898a76b8d (Thiwanka570          2024-08-31 20:28:42 +0530 17522)             billRow.createCell(colIdx++).setCellValue(bill.getGrantTotal());
f7898a76b8d (Thiwanka570          2024-08-31 20:28:42 +0530 17523)             billRow.createCell(colIdx++).setCellValue(bill.getDiscount());
f7898a76b8d (Thiwanka570          2024-08-31 20:28:42 +0530 17524)             billRow.createCell(colIdx++).setCellValue(bill.getNetTotal());
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17525)             billRow.createCell(colIdx++).setCellValue(bill.getPaymentMethod() != null ? bill.getPaymentMethod().getLabel() : "");
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17526) 
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17527)             // Leave the bill item columns empty in the bill row
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17528)             for (int j = 10; j < headers.length; j++) {
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17529)                 billRow.createCell(j);
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17530)             }
ab289d091fd (Buddhika Ariyaratne  2024-08-28 08:18:06 +0530 17531) 
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17532)             // Fill in bill item data in subsequent rows
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17533)             for (BillItem bi : billItems) {
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17534)                 if (bi.getBill().equals(bill)) {
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17535)                     Row itemRow = sheet.createRow(rowIdx++);
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17536)                     // Leave bill details columns empty
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17537)                     for (int j = 0; j < 10; j++) {
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17538)                         itemRow.createCell(j);
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17539)                     }
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17540) 
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17541)                     int itemColIdx = 10;
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17542)                     try {
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17543)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getItem() != null ? bi.getItem().getName() : "");
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17544)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getItem() != null ? bi.getItem().getCode() : "");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 17545)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getItem() != null ? bi.getItem().getItemType() != null ? bi.getItem().getItemType().toString() : "" : "");
9a9ec1efa5e (Thiwanka570          2024-08-31 20:15:32 +0530 17546)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getQty() != null ? bi.getQty().toString() : "");
f7898a76b8d (Thiwanka570          2024-08-31 20:28:42 +0530 17547)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getRate());
f7898a76b8d (Thiwanka570          2024-08-31 20:28:42 +0530 17548)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getGrossValue());
f7898a76b8d (Thiwanka570          2024-08-31 20:28:42 +0530 17549)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getDiscount());
f7898a76b8d (Thiwanka570          2024-08-31 20:28:42 +0530 17550)                         itemRow.createCell(itemColIdx++).setCellValue(bi.getNetValue());
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17551)                     } catch (Exception e) {
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17552)                         e.printStackTrace();
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17553)                     }
0966a071561 (PasinduW99           2024-08-28 17:18:51 +0530 17554)                 }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17555)             }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17556)         }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17557) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17558)         // Autosize columns to fit content
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17559)         for (int i = 0; i < headers.length; i++) {
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17560)             sheet.autoSizeColumn(i);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17561)         }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17562) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17563)         // Write to output stream and create download content
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17564)         ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17565)         workbook.write(outputStream);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17566)         workbook.close();
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17567)         InputStream inputStream = new ByteArrayInputStream(outputStream.toByteArray());
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17568)         fileBillsAndBillItemsForDownload = DefaultStreamedContent.builder()
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17569)                 .name("bills_and_bill_items.xlsx")
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17570)                 .contentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17571)                 .stream(() -> new ByteArrayInputStream(outputStream.toByteArray()))
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17572)                 .build();
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17573)     }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17574) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17575)     public void prepareDataBillsAndBillItemsDownload(boolean old) {
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17576)         // Fetch all bills and their associated bill items, excluding fees
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17577)         List<BillTypeAtomic> billTypeAtomics = prepareDistinctBillTypeAtomic();
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17578)         String jpql = "SELECT b FROM Bill b JOIN FETCH b.billItems WHERE b.createdAt and b.retired=:ret and b.billTypeAtomic in :btas BETWEEN :fromDate AND :toDate";
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17579)         Map<String, Object> params = new HashMap<>();
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17580)         params.put("fromDate", fromDate);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17581)         params.put("toDate", toDate);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17582)         params.put("ret", false);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17583)         params.put("btas", billTypeAtomics);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17584) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17585)         List<Bill> bills = billFacade.findByJpql(jpql, params); // Assuming you have a facade to execute JPQL queries
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17586) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17587)         Set<Bill> uniqueBills = new HashSet<>(bills);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17588)         List<BillItem> allBillItems = new ArrayList<>();
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17589) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17590)         bills = new ArrayList<>();
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17591)         // Only extract bill items, no fees
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17592)         for (Bill bill : uniqueBills) {
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17593)             allBillItems.addAll(bill.getBillItems());
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17594)             bills.add(bill);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17595)         }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17596) 
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17597)         try {
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17598)             createBillsBillItemsList(uniqueBills, allBillItems);
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17599)         } catch (IOException e) {
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17600)             e.printStackTrace(); // Handle exceptions properly
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17601)         }
0ecfdd21453 (Buddhika Ariyaratne  2024-08-26 03:32:57 +0530 17602)     }
c17bce3e507 (Buddhika Ariyaratne  2024-09-18 23:19:36 +0530 17603) 
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17604)     public StreamedContent getBundleAsPdf() {
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17605)         StreamedContent pdfSc = null;
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 17606)         try {
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17607)             pdfSc = pdfController.createPdfForBundle(bundle);
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 17608)         } catch (IOException e) {
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 17609)             // Handle IOException
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 17610)         }
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17611)         return pdfSc;
7f9376fe335 (Buddhika Ariyaratne  2024-10-13 06:13:17 +0530 17612)     }
7f9376fe335 (Buddhika Ariyaratne  2024-10-13 06:13:17 +0530 17613) 
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17614)     public StreamedContent getBundleAsExcel() {
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17615)         try {
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17616)             downloadingExcel = excelController.createExcelForBundle(bundle);
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17617)         } catch (IOException e) {
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17618)             // Handle IOException
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 17619)         }
ad1076cbe4d (Buddhika Ariyaratne  2024-10-13 08:25:45 +0530 17620)         return downloadingExcel;
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 17621)     }
f0ebec9f90c (Buddhika Ariyaratne  2024-10-13 05:13:09 +0530 17622) 
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17623)     public void directPurchaseOrderSearch() {
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17624)         bills = null;
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17625)         Map<String, Object> m = new HashMap<>();
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17626) 
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17627)         String jpql = "SELECT b FROM Bill b WHERE b.retired = false AND b.billType = :bTp "
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17628)                 + "AND b.createdAt BETWEEN :fromDate AND :toDate";
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17629) 
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17630)         m.put("bTp", BillType.StorePurchase);
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17631)         m.put("fromDate", getFromDate());
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17632)         m.put("toDate", getToDate());
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17633) 
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17634)         bills = billFacade.findByJpql(jpql, m);
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17635) 
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17636)     }
f3d9ab0790a (Pubudu-Piyankara     2024-09-17 13:39:58 +0530 17637) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17638)     public void prepareDataBillsAndBillItemsDownload() {
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17639)         // JPQL to fetch Bills and their BillItems through Payments
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17640)         String jpql = "SELECT DISTINCT b "
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17641)                 + " FROM Payment p "
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17642)                 + " JOIN p.bill b "
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17643)                 + " JOIN FETCH b.billItems bi "
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17644)                 + " WHERE p.createdAt BETWEEN :fromDate AND :toDate AND b.retired = :ret";
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17645)         Map<String, Object> params = new HashMap<>();
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17646)         params.put("fromDate", fromDate);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17647)         params.put("toDate", toDate);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17648)         params.put("ret", false);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17649) 
f928697fd17 (Buddhika Ariyaratne  2024-08-27 07:57:12 +0530 17650) //        jpql = "SELECT b FROM Bill b JOIN FETCH b.billItems WHERE  b.retired=:ret and b.createdAt BETWEEN :fromDate AND :toDate";
fc4f22459fe (Buddhika Ariyaratne  2024-08-27 07:20:19 +0530 17651)         System.out.println("params = " + params);
fc4f22459fe (Buddhika Ariyaratne  2024-08-27 07:20:19 +0530 17652)         System.out.println("jpql = " + jpql);
ab289d091fd (Buddhika Ariyaratne  2024-08-28 08:18:06 +0530 17653) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17654)         // Execute the query to get filtered bills
ab289d091fd (Buddhika Ariyaratne  2024-08-28 08:18:06 +0530 17655)         List<Bill> bills = billFacade.findByJpql(jpql, params, TemporalType.TIMESTAMP); // Assuming you have a facade to execute JPQL queries
ab289d091fd (Buddhika Ariyaratne  2024-08-28 08:18:06 +0530 17656)         System.out.println("bills = " + bills);
ab289d091fd (Buddhika Ariyaratne  2024-08-28 08:18:06 +0530 17657) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17658)         // Since bills are fetched with their items, simply collect all items if needed
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17659)         List<BillItem> allBillItems = new ArrayList<>();
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17660)         bills.forEach(bill -> allBillItems.addAll(bill.getBillItems()));
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17661) 
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17662)         try {
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17663)             createBillsBillItemsList(new HashSet<>(bills), allBillItems);
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17664)         } catch (IOException e) {
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17665)             e.printStackTrace(); // Handle exceptions properly
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17666)         }
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17667)     }
e8c9808e708 (Buddhika Ariyaratne  2024-08-26 05:32:16 +0530 17668) 
edf23774af5 (Thiwanka Madushan    2023-10-02 14:50:36 +0530 17669) }
